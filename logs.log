2023-05-13 18:15:52,087:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-13 18:15:52,088:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-13 18:15:52,088:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-13 18:15:52,088:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-13 18:15:53,456:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-05-13 18:15:53,756:INFO:PyCaret ClassificationExperiment
2023-05-13 18:15:53,756:INFO:Logging name: clf-default-name
2023-05-13 18:15:53,756:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2023-05-13 18:15:53,756:INFO:version 3.0.0
2023-05-13 18:15:53,756:INFO:Initializing setup()
2023-05-13 18:15:53,756:INFO:self.USI: 63f3
2023-05-13 18:15:53,756:INFO:self._variable_keys: {'is_multiclass', 'exp_name_log', 'logging_param', 'n_jobs_param', 'seed', 'html_param', 'fix_imbalance', 'log_plots_param', 'USI', 'fold_generator', '_available_plots', 'X_test', 'fold_groups_param', 'X', 'exp_id', 'data', '_ml_usecase', 'y', 'memory', 'y_train', 'pipeline', 'idx', 'gpu_n_jobs_param', 'target_param', 'X_train', 'fold_shuffle_param', 'y_test', 'gpu_param'}
2023-05-13 18:15:53,756:INFO:Checking environment
2023-05-13 18:15:53,756:INFO:python_version: 3.8.16
2023-05-13 18:15:53,757:INFO:python_build: ('default', 'Mar  2 2023 03:18:16')
2023-05-13 18:15:53,757:INFO:machine: AMD64
2023-05-13 18:15:53,757:INFO:platform: Windows-10-10.0.19045-SP0
2023-05-13 18:15:53,760:INFO:Memory: svmem(total=34292408320, available=21774548992, percent=36.5, used=12517859328, free=21774548992)
2023-05-13 18:15:53,760:INFO:Physical Core: 4
2023-05-13 18:15:53,760:INFO:Logical Core: 8
2023-05-13 18:15:53,760:INFO:Checking libraries
2023-05-13 18:15:53,760:INFO:System:
2023-05-13 18:15:53,760:INFO:    python: 3.8.16 (default, Mar  2 2023, 03:18:16) [MSC v.1916 64 bit (AMD64)]
2023-05-13 18:15:53,761:INFO:executable: c:\Users\camil\anaconda3\envs\pycaretenv\python.exe
2023-05-13 18:15:53,761:INFO:   machine: Windows-10-10.0.19045-SP0
2023-05-13 18:15:53,761:INFO:PyCaret required dependencies:
2023-05-13 18:15:53,761:INFO:                 pip: 23.0.1
2023-05-13 18:15:53,761:INFO:          setuptools: 66.0.0
2023-05-13 18:15:53,761:INFO:             pycaret: 3.0.0
2023-05-13 18:15:53,761:INFO:             IPython: 8.12.2
2023-05-13 18:15:53,761:INFO:          ipywidgets: 8.0.6
2023-05-13 18:15:53,761:INFO:                tqdm: 4.65.0
2023-05-13 18:15:53,761:INFO:               numpy: 1.24.3
2023-05-13 18:15:53,761:INFO:              pandas: 1.5.3
2023-05-13 18:15:53,761:INFO:              jinja2: 3.1.2
2023-05-13 18:15:53,761:INFO:               scipy: 1.10.1
2023-05-13 18:15:53,761:INFO:              joblib: 1.2.0
2023-05-13 18:15:53,761:INFO:             sklearn: 1.2.2
2023-05-13 18:15:53,761:INFO:                pyod: 1.0.9
2023-05-13 18:15:53,762:INFO:            imblearn: 0.10.1
2023-05-13 18:15:53,762:INFO:   category_encoders: 2.6.0
2023-05-13 18:15:53,762:INFO:            lightgbm: 3.3.5
2023-05-13 18:15:53,762:INFO:               numba: 0.57.0
2023-05-13 18:15:53,762:INFO:            requests: 2.30.0
2023-05-13 18:15:53,762:INFO:          matplotlib: 3.7.1
2023-05-13 18:15:53,762:INFO:          scikitplot: 0.3.7
2023-05-13 18:15:53,762:INFO:         yellowbrick: 1.5
2023-05-13 18:15:53,762:INFO:              plotly: 5.14.1
2023-05-13 18:15:53,762:INFO:             kaleido: 0.2.1
2023-05-13 18:15:53,762:INFO:         statsmodels: 0.14.0
2023-05-13 18:15:53,762:INFO:              sktime: 0.18.0
2023-05-13 18:15:53,762:INFO:               tbats: 1.1.3
2023-05-13 18:15:53,762:INFO:            pmdarima: 2.0.3
2023-05-13 18:15:53,762:INFO:              psutil: 5.9.5
2023-05-13 18:15:53,762:INFO:PyCaret optional dependencies:
2023-05-13 18:15:53,783:INFO:                shap: Not installed
2023-05-13 18:15:53,783:INFO:           interpret: Not installed
2023-05-13 18:15:53,783:INFO:                umap: Not installed
2023-05-13 18:15:53,783:INFO:    pandas_profiling: Not installed
2023-05-13 18:15:53,783:INFO:  explainerdashboard: Not installed
2023-05-13 18:15:53,783:INFO:             autoviz: Not installed
2023-05-13 18:15:53,784:INFO:           fairlearn: Not installed
2023-05-13 18:15:53,784:INFO:             xgboost: Not installed
2023-05-13 18:15:53,784:INFO:            catboost: Not installed
2023-05-13 18:15:53,784:INFO:              kmodes: Not installed
2023-05-13 18:15:53,784:INFO:             mlxtend: Not installed
2023-05-13 18:15:53,784:INFO:       statsforecast: Not installed
2023-05-13 18:15:53,784:INFO:        tune_sklearn: Not installed
2023-05-13 18:15:53,784:INFO:                 ray: Not installed
2023-05-13 18:15:53,784:INFO:            hyperopt: Not installed
2023-05-13 18:15:53,784:INFO:              optuna: Not installed
2023-05-13 18:15:53,784:INFO:               skopt: Not installed
2023-05-13 18:15:53,784:INFO:              mlflow: Not installed
2023-05-13 18:15:53,784:INFO:              gradio: Not installed
2023-05-13 18:15:53,784:INFO:             fastapi: Not installed
2023-05-13 18:15:53,784:INFO:             uvicorn: Not installed
2023-05-13 18:15:53,784:INFO:              m2cgen: Not installed
2023-05-13 18:15:53,784:INFO:           evidently: Not installed
2023-05-13 18:15:53,784:INFO:               fugue: Not installed
2023-05-13 18:15:53,785:INFO:           streamlit: Not installed
2023-05-13 18:15:53,785:INFO:             prophet: Not installed
2023-05-13 18:15:53,785:INFO:None
2023-05-13 18:15:53,785:INFO:Set up GPU usage.
2023-05-13 18:15:53,785:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-13 18:15:53,785:WARNING:cuML is outdated or not found. Required version is >=22.10, got 3.0.0
2023-05-13 18:15:53,785:INFO:Set up data.
2023-05-13 18:15:53,983:INFO:Set up train/test split.
2023-05-13 18:15:54,081:INFO:Set up index.
2023-05-13 18:15:54,082:INFO:Set up folding strategy.
2023-05-13 18:15:54,082:INFO:Assigning column types.
2023-05-13 18:15:54,103:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-05-13 18:15:54,104:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-13 18:15:54,164:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-05-13 18:15:54,164:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-13 18:15:54,167:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-13 18:15:54,168:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-05-13 18:15:54,168:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-13 18:15:54,209:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-13 18:15:54,216:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-13 18:15:54,220:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-13 18:16:00,987:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-13 18:16:00,988:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-13 18:16:01,108:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-05-13 18:16:01,108:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-13 18:16:01,108:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-13 18:16:01,110:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-05-13 18:16:01,110:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-13 18:16:01,141:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-13 18:16:01,147:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-13 18:16:01,148:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-13 18:16:01,502:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-13 18:16:01,503:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-05-13 18:16:01,503:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-13 18:16:01,624:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-13 18:16:01,624:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-13 18:16:01,625:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-05-13 18:16:01,625:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-13 18:16:01,655:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-13 18:16:01,663:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-13 18:16:01,664:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-13 18:16:01,810:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-13 18:16:01,814:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-13 18:16:01,934:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-13 18:16:01,935:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-13 18:16:01,936:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-05-13 18:16:01,936:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-13 18:16:01,969:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-13 18:16:01,976:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-13 18:16:01,977:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-13 18:16:02,115:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-13 18:16:02,116:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2023-05-13 18:16:02,117:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-13 18:16:02,231:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-13 18:16:02,232:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-13 18:16:02,232:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-13 18:16:02,260:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-13 18:16:02,266:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-13 18:16:02,268:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-13 18:16:02,408:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-13 18:16:02,409:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-13 18:16:02,523:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-13 18:16:02,523:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-13 18:16:02,524:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-13 18:16:02,552:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-13 18:16:02,558:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-13 18:16:02,559:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-13 18:16:02,705:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-13 18:16:02,716:INFO:Preparing preprocessing pipeline...
2023-05-13 18:16:02,721:INFO:Set up label encoding.
2023-05-13 18:16:02,722:INFO:Set up date feature engineering.
2023-05-13 18:16:02,722:INFO:Set up simple imputation.
2023-05-13 18:16:02,768:INFO:Set up encoding of ordinal features.
2023-05-13 18:16:02,826:INFO:Set up encoding of categorical features.
2023-05-13 18:16:02,827:INFO:Set up removing multicollinearity.
2023-05-13 18:16:02,827:INFO:Set up removing outliers.
2023-05-13 18:16:02,827:INFO:Set up imbalanced handling.
2023-05-13 18:16:02,827:INFO:Set up feature normalization.
2023-05-13 18:16:02,829:INFO:Set up column name cleaning.
2023-05-13 18:16:06,741:WARNING:c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\sklearn\base.py:439: UserWarning: X does not have valid feature names, but IsolationForest was fitted with feature names
  warnings.warn(

2023-05-13 18:16:10,528:INFO:Finished creating preprocessing pipeline.
2023-05-13 18:16:10,630:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\camil\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('date_feature_extractor',
                 TransformerWrapper(exclude=None,
                                    include=['Fecha.Expedicion', 'ANO_MES',
                                             'Fecha.Proceso'],
                                    transformer=ExtractDateTimeFeatures(features=['da...
                                    transformer=FixImbalancer(estimator=SMOTE(k_neighbors=5,
                                                                              n_jobs=None,
                                                                              random_state=None,
                                                                              sampling_strategy='auto')))),
                ('normalize',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False)
2023-05-13 18:16:10,630:INFO:Creating final display dataframe.
2023-05-13 18:16:11,985:WARNING:c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\sklearn\base.py:439: UserWarning: X does not have valid feature names, but IsolationForest was fitted with feature names
  warnings.warn(

2023-05-13 18:16:17,354:INFO:Setup _display_container:                     Description             Value
0                    Session id               123
1                        Target            Target
2                   Target type            Binary
3                Target mapping        0: 0, 1: 1
4           Original data shape       (50001, 35)
5        Transformed data shape       (80307, 53)
6   Transformed train set shape       (65306, 53)
7    Transformed test set shape       (15001, 53)
8               Ignore features                 4
9              Ordinal features                 7
10             Numeric features                15
11                Date features                 3
12         Categorical features                16
13     Rows with missing values            100.0%
14                   Preprocess              True
15              Imputation type            simple
16           Numeric imputation              mean
17       Categorical imputation              mode
18     Maximum one-hot encoding                25
19              Encoding method              None
20     Remove multicollinearity              True
21  Multicollinearity threshold               0.9
22              Remove outliers              True
23           Outliers threshold              0.05
24                Fix imbalance              True
25         Fix imbalance method             SMOTE
26                    Normalize              True
27             Normalize method            zscore
28               Fold Generator             KFold
29                  Fold Number                10
30                     CPU Jobs                -1
31                      Use GPU              True
32               Log Experiment             False
33              Experiment Name  clf-default-name
34                          USI              63f3
2023-05-13 18:16:17,363:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-13 18:16:17,426:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-13 18:16:17,426:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-13 18:16:17,427:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-13 18:16:17,503:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-13 18:16:17,513:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-13 18:16:17,515:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-13 18:16:17,690:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-13 18:16:17,691:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-13 18:16:17,809:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-13 18:16:17,810:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-13 18:16:17,810:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-13 18:16:17,839:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-13 18:16:17,844:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-13 18:16:17,845:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-13 18:16:18,026:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-13 18:16:18,028:INFO:setup() successfully completed in 24.27s...............
2023-05-13 18:18:51,013:INFO:PyCaret ClassificationExperiment
2023-05-13 18:18:51,013:INFO:Logging name: clf-default-name
2023-05-13 18:18:51,013:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2023-05-13 18:18:51,014:INFO:version 3.0.0
2023-05-13 18:18:51,014:INFO:Initializing setup()
2023-05-13 18:18:51,014:INFO:self.USI: c5c8
2023-05-13 18:18:51,014:INFO:self._variable_keys: {'is_multiclass', 'exp_name_log', 'logging_param', 'n_jobs_param', 'seed', 'html_param', 'fix_imbalance', 'log_plots_param', 'USI', 'fold_generator', '_available_plots', 'X_test', 'fold_groups_param', 'X', 'exp_id', 'data', '_ml_usecase', 'y', 'memory', 'y_train', 'pipeline', 'idx', 'gpu_n_jobs_param', 'target_param', 'X_train', 'fold_shuffle_param', 'y_test', 'gpu_param'}
2023-05-13 18:18:51,014:INFO:Checking environment
2023-05-13 18:18:51,014:INFO:python_version: 3.8.16
2023-05-13 18:18:51,014:INFO:python_build: ('default', 'Mar  2 2023 03:18:16')
2023-05-13 18:18:51,014:INFO:machine: AMD64
2023-05-13 18:18:51,015:INFO:platform: Windows-10-10.0.19045-SP0
2023-05-13 18:18:51,018:INFO:Memory: svmem(total=34292408320, available=21641723904, percent=36.9, used=12650684416, free=21641723904)
2023-05-13 18:18:51,018:INFO:Physical Core: 4
2023-05-13 18:18:51,019:INFO:Logical Core: 8
2023-05-13 18:18:51,019:INFO:Checking libraries
2023-05-13 18:18:51,019:INFO:System:
2023-05-13 18:18:51,019:INFO:    python: 3.8.16 (default, Mar  2 2023, 03:18:16) [MSC v.1916 64 bit (AMD64)]
2023-05-13 18:18:51,019:INFO:executable: c:\Users\camil\anaconda3\envs\pycaretenv\python.exe
2023-05-13 18:18:51,019:INFO:   machine: Windows-10-10.0.19045-SP0
2023-05-13 18:18:51,019:INFO:PyCaret required dependencies:
2023-05-13 18:18:51,019:INFO:                 pip: 23.0.1
2023-05-13 18:18:51,019:INFO:          setuptools: 66.0.0
2023-05-13 18:18:51,019:INFO:             pycaret: 3.0.0
2023-05-13 18:18:51,020:INFO:             IPython: 8.12.2
2023-05-13 18:18:51,020:INFO:          ipywidgets: 8.0.6
2023-05-13 18:18:51,020:INFO:                tqdm: 4.65.0
2023-05-13 18:18:51,020:INFO:               numpy: 1.24.3
2023-05-13 18:18:51,020:INFO:              pandas: 1.5.3
2023-05-13 18:18:51,020:INFO:              jinja2: 3.1.2
2023-05-13 18:18:51,020:INFO:               scipy: 1.10.1
2023-05-13 18:18:51,020:INFO:              joblib: 1.2.0
2023-05-13 18:18:51,020:INFO:             sklearn: 1.2.2
2023-05-13 18:18:51,020:INFO:                pyod: 1.0.9
2023-05-13 18:18:51,020:INFO:            imblearn: 0.10.1
2023-05-13 18:18:51,020:INFO:   category_encoders: 2.6.0
2023-05-13 18:18:51,020:INFO:            lightgbm: 3.3.5
2023-05-13 18:18:51,021:INFO:               numba: 0.57.0
2023-05-13 18:18:51,021:INFO:            requests: 2.30.0
2023-05-13 18:18:51,021:INFO:          matplotlib: 3.7.1
2023-05-13 18:18:51,021:INFO:          scikitplot: 0.3.7
2023-05-13 18:18:51,021:INFO:         yellowbrick: 1.5
2023-05-13 18:18:51,021:INFO:              plotly: 5.14.1
2023-05-13 18:18:51,022:INFO:             kaleido: 0.2.1
2023-05-13 18:18:51,022:INFO:         statsmodels: 0.14.0
2023-05-13 18:18:51,022:INFO:              sktime: 0.18.0
2023-05-13 18:18:51,022:INFO:               tbats: 1.1.3
2023-05-13 18:18:51,022:INFO:            pmdarima: 2.0.3
2023-05-13 18:18:51,022:INFO:              psutil: 5.9.5
2023-05-13 18:18:51,022:INFO:PyCaret optional dependencies:
2023-05-13 18:18:51,022:INFO:                shap: Not installed
2023-05-13 18:18:51,022:INFO:           interpret: Not installed
2023-05-13 18:18:51,023:INFO:                umap: Not installed
2023-05-13 18:18:51,023:INFO:    pandas_profiling: Not installed
2023-05-13 18:18:51,023:INFO:  explainerdashboard: Not installed
2023-05-13 18:18:51,023:INFO:             autoviz: Not installed
2023-05-13 18:18:51,023:INFO:           fairlearn: Not installed
2023-05-13 18:18:51,023:INFO:             xgboost: Not installed
2023-05-13 18:18:51,023:INFO:            catboost: Not installed
2023-05-13 18:18:51,023:INFO:              kmodes: Not installed
2023-05-13 18:18:51,023:INFO:             mlxtend: Not installed
2023-05-13 18:18:51,023:INFO:       statsforecast: Not installed
2023-05-13 18:18:51,024:INFO:        tune_sklearn: Not installed
2023-05-13 18:18:51,024:INFO:                 ray: Not installed
2023-05-13 18:18:51,024:INFO:            hyperopt: Not installed
2023-05-13 18:18:51,024:INFO:              optuna: Not installed
2023-05-13 18:18:51,024:INFO:               skopt: Not installed
2023-05-13 18:18:51,024:INFO:              mlflow: Not installed
2023-05-13 18:18:51,024:INFO:              gradio: Not installed
2023-05-13 18:18:51,024:INFO:             fastapi: Not installed
2023-05-13 18:18:51,024:INFO:             uvicorn: Not installed
2023-05-13 18:18:51,024:INFO:              m2cgen: Not installed
2023-05-13 18:18:51,025:INFO:           evidently: Not installed
2023-05-13 18:18:51,025:INFO:               fugue: Not installed
2023-05-13 18:18:51,025:INFO:           streamlit: Not installed
2023-05-13 18:18:51,025:INFO:             prophet: Not installed
2023-05-13 18:18:51,025:INFO:None
2023-05-13 18:18:51,025:INFO:Set up GPU usage.
2023-05-13 18:18:51,025:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-13 18:18:51,025:WARNING:cuML is outdated or not found. Required version is >=22.10, got 3.0.0
2023-05-13 18:18:51,025:INFO:Set up data.
2023-05-13 18:18:51,222:INFO:Set up train/test split.
2023-05-13 18:18:51,319:INFO:Set up index.
2023-05-13 18:18:51,319:INFO:Set up folding strategy.
2023-05-13 18:18:51,320:INFO:Assigning column types.
2023-05-13 18:18:51,341:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-05-13 18:18:51,341:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-13 18:18:51,403:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-05-13 18:18:51,403:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-13 18:18:51,403:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-13 18:18:51,404:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-05-13 18:18:51,404:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-13 18:18:51,434:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-13 18:18:51,442:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-13 18:18:51,443:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-13 18:18:51,627:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-13 18:18:51,628:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-13 18:18:51,748:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-05-13 18:18:51,749:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-13 18:18:51,749:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-13 18:18:51,750:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-05-13 18:18:51,750:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-13 18:18:51,787:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-13 18:18:51,794:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-13 18:18:51,796:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-13 18:18:51,972:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-13 18:18:51,973:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-05-13 18:18:51,974:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-13 18:18:52,094:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-13 18:18:52,094:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-13 18:18:52,095:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-05-13 18:18:52,095:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-13 18:18:52,126:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-13 18:18:52,132:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-13 18:18:52,133:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-13 18:18:52,315:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-13 18:18:52,316:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-13 18:18:52,437:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-13 18:18:52,437:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-13 18:18:52,438:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-05-13 18:18:52,438:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-13 18:18:52,470:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-13 18:18:52,478:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-13 18:18:52,479:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-13 18:18:52,650:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-13 18:18:52,651:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2023-05-13 18:18:52,651:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-13 18:18:52,763:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-13 18:18:52,763:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-13 18:18:52,764:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-13 18:18:52,794:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-13 18:18:52,801:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-13 18:18:52,802:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-13 18:18:52,975:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-13 18:18:52,976:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-13 18:18:53,092:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-13 18:18:53,092:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-13 18:18:53,093:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-13 18:18:53,124:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-13 18:18:53,129:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-13 18:18:53,130:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-13 18:18:53,298:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-13 18:18:53,301:INFO:Preparing preprocessing pipeline...
2023-05-13 18:18:53,307:INFO:Set up label encoding.
2023-05-13 18:18:53,307:INFO:Set up date feature engineering.
2023-05-13 18:18:53,307:INFO:Set up simple imputation.
2023-05-13 18:18:53,350:INFO:Set up encoding of ordinal features.
2023-05-13 18:18:53,413:INFO:Set up encoding of categorical features.
2023-05-13 18:18:53,413:INFO:Set up removing multicollinearity.
2023-05-13 18:18:53,413:INFO:Set up removing outliers.
2023-05-13 18:18:53,413:INFO:Set up imbalanced handling.
2023-05-13 18:18:53,413:INFO:Set up feature normalization.
2023-05-13 18:18:53,416:INFO:Set up column name cleaning.
2023-05-13 18:18:55,230:INFO:Finished creating preprocessing pipeline.
2023-05-13 18:18:55,330:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\camil\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('date_feature_extractor',
                 TransformerWrapper(exclude=None,
                                    include=['Fecha.Expedicion', 'ANO_MES',
                                             'Fecha.Proceso'],
                                    transformer=ExtractDateTimeFeatures(features=['da...
                                    transformer=FixImbalancer(estimator=SMOTE(k_neighbors=5,
                                                                              n_jobs=None,
                                                                              random_state=None,
                                                                              sampling_strategy='auto')))),
                ('normalize',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False)
2023-05-13 18:18:55,330:INFO:Creating final display dataframe.
2023-05-13 18:18:57,576:INFO:Setup _display_container:                     Description             Value
0                    Session id               123
1                        Target            Target
2                   Target type            Binary
3                Target mapping        0: 0, 1: 1
4           Original data shape       (50001, 35)
5        Transformed data shape       (80307, 53)
6   Transformed train set shape       (65306, 53)
7    Transformed test set shape       (15001, 53)
8               Ignore features                 4
9              Ordinal features                 7
10             Numeric features                15
11                Date features                 3
12         Categorical features                16
13     Rows with missing values            100.0%
14                   Preprocess              True
15              Imputation type            simple
16           Numeric imputation              mean
17       Categorical imputation              mode
18     Maximum one-hot encoding                25
19              Encoding method              None
20     Remove multicollinearity              True
21  Multicollinearity threshold               0.9
22              Remove outliers              True
23           Outliers threshold              0.05
24                Fix imbalance              True
25         Fix imbalance method             SMOTE
26                    Normalize              True
27             Normalize method            zscore
28               Fold Generator             KFold
29                  Fold Number                10
30                     CPU Jobs                -1
31                      Use GPU              True
32               Log Experiment             False
33              Experiment Name  clf-default-name
34                          USI              c5c8
2023-05-13 18:18:57,585:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-13 18:18:57,656:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-13 18:18:57,656:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-13 18:18:57,657:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-13 18:18:57,685:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-13 18:18:57,691:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-13 18:18:57,693:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-13 18:18:57,859:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-13 18:18:57,860:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-13 18:18:57,978:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-13 18:18:57,978:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-13 18:18:57,979:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-13 18:18:58,008:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-13 18:18:58,014:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-13 18:18:58,015:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-13 18:18:58,184:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-13 18:18:58,185:INFO:setup() successfully completed in 7.18s...............
2023-05-13 18:19:25,950:INFO:PyCaret ClassificationExperiment
2023-05-13 18:19:25,950:INFO:Logging name: clf-default-name
2023-05-13 18:19:25,950:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2023-05-13 18:19:25,950:INFO:version 3.0.0
2023-05-13 18:19:25,950:INFO:Initializing setup()
2023-05-13 18:19:25,950:INFO:self.USI: b63f
2023-05-13 18:19:25,950:INFO:self._variable_keys: {'is_multiclass', 'exp_name_log', 'logging_param', 'n_jobs_param', 'seed', 'html_param', 'fix_imbalance', 'log_plots_param', 'USI', 'fold_generator', '_available_plots', 'X_test', 'fold_groups_param', 'X', 'exp_id', 'data', '_ml_usecase', 'y', 'memory', 'y_train', 'pipeline', 'idx', 'gpu_n_jobs_param', 'target_param', 'X_train', 'fold_shuffle_param', 'y_test', 'gpu_param'}
2023-05-13 18:19:25,950:INFO:Checking environment
2023-05-13 18:19:25,951:INFO:python_version: 3.8.16
2023-05-13 18:19:25,951:INFO:python_build: ('default', 'Mar  2 2023 03:18:16')
2023-05-13 18:19:25,951:INFO:machine: AMD64
2023-05-13 18:19:25,951:INFO:platform: Windows-10-10.0.19045-SP0
2023-05-13 18:19:25,955:INFO:Memory: svmem(total=34292408320, available=21646172160, percent=36.9, used=12646236160, free=21646172160)
2023-05-13 18:19:25,955:INFO:Physical Core: 4
2023-05-13 18:19:25,955:INFO:Logical Core: 8
2023-05-13 18:19:25,955:INFO:Checking libraries
2023-05-13 18:19:25,955:INFO:System:
2023-05-13 18:19:25,956:INFO:    python: 3.8.16 (default, Mar  2 2023, 03:18:16) [MSC v.1916 64 bit (AMD64)]
2023-05-13 18:19:25,956:INFO:executable: c:\Users\camil\anaconda3\envs\pycaretenv\python.exe
2023-05-13 18:19:25,956:INFO:   machine: Windows-10-10.0.19045-SP0
2023-05-13 18:19:25,956:INFO:PyCaret required dependencies:
2023-05-13 18:19:25,956:INFO:                 pip: 23.0.1
2023-05-13 18:19:25,956:INFO:          setuptools: 66.0.0
2023-05-13 18:19:25,956:INFO:             pycaret: 3.0.0
2023-05-13 18:19:25,956:INFO:             IPython: 8.12.2
2023-05-13 18:19:25,956:INFO:          ipywidgets: 8.0.6
2023-05-13 18:19:25,956:INFO:                tqdm: 4.65.0
2023-05-13 18:19:25,957:INFO:               numpy: 1.24.3
2023-05-13 18:19:25,957:INFO:              pandas: 1.5.3
2023-05-13 18:19:25,957:INFO:              jinja2: 3.1.2
2023-05-13 18:19:25,957:INFO:               scipy: 1.10.1
2023-05-13 18:19:25,957:INFO:              joblib: 1.2.0
2023-05-13 18:19:25,957:INFO:             sklearn: 1.2.2
2023-05-13 18:19:25,957:INFO:                pyod: 1.0.9
2023-05-13 18:19:25,957:INFO:            imblearn: 0.10.1
2023-05-13 18:19:25,957:INFO:   category_encoders: 2.6.0
2023-05-13 18:19:25,958:INFO:            lightgbm: 3.3.5
2023-05-13 18:19:25,958:INFO:               numba: 0.57.0
2023-05-13 18:19:25,958:INFO:            requests: 2.30.0
2023-05-13 18:19:25,958:INFO:          matplotlib: 3.7.1
2023-05-13 18:19:25,958:INFO:          scikitplot: 0.3.7
2023-05-13 18:19:25,958:INFO:         yellowbrick: 1.5
2023-05-13 18:19:25,958:INFO:              plotly: 5.14.1
2023-05-13 18:19:25,958:INFO:             kaleido: 0.2.1
2023-05-13 18:19:25,958:INFO:         statsmodels: 0.14.0
2023-05-13 18:19:25,959:INFO:              sktime: 0.18.0
2023-05-13 18:19:25,959:INFO:               tbats: 1.1.3
2023-05-13 18:19:25,959:INFO:            pmdarima: 2.0.3
2023-05-13 18:19:25,959:INFO:              psutil: 5.9.5
2023-05-13 18:19:25,959:INFO:PyCaret optional dependencies:
2023-05-13 18:19:25,959:INFO:                shap: Not installed
2023-05-13 18:19:25,959:INFO:           interpret: Not installed
2023-05-13 18:19:25,959:INFO:                umap: Not installed
2023-05-13 18:19:25,959:INFO:    pandas_profiling: Not installed
2023-05-13 18:19:25,960:INFO:  explainerdashboard: Not installed
2023-05-13 18:19:25,960:INFO:             autoviz: Not installed
2023-05-13 18:19:25,960:INFO:           fairlearn: Not installed
2023-05-13 18:19:25,960:INFO:             xgboost: Not installed
2023-05-13 18:19:25,960:INFO:            catboost: Not installed
2023-05-13 18:19:25,960:INFO:              kmodes: Not installed
2023-05-13 18:19:25,961:INFO:             mlxtend: Not installed
2023-05-13 18:19:25,961:INFO:       statsforecast: Not installed
2023-05-13 18:19:25,961:INFO:        tune_sklearn: Not installed
2023-05-13 18:19:25,961:INFO:                 ray: Not installed
2023-05-13 18:19:25,961:INFO:            hyperopt: Not installed
2023-05-13 18:19:25,961:INFO:              optuna: Not installed
2023-05-13 18:19:25,961:INFO:               skopt: Not installed
2023-05-13 18:19:25,961:INFO:              mlflow: Not installed
2023-05-13 18:19:25,962:INFO:              gradio: Not installed
2023-05-13 18:19:25,962:INFO:             fastapi: Not installed
2023-05-13 18:19:25,962:INFO:             uvicorn: Not installed
2023-05-13 18:19:25,962:INFO:              m2cgen: Not installed
2023-05-13 18:19:25,962:INFO:           evidently: Not installed
2023-05-13 18:19:25,962:INFO:               fugue: Not installed
2023-05-13 18:19:25,962:INFO:           streamlit: Not installed
2023-05-13 18:19:25,962:INFO:             prophet: Not installed
2023-05-13 18:19:25,962:INFO:None
2023-05-13 18:19:25,962:INFO:Set up GPU usage.
2023-05-13 18:19:25,962:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-13 18:19:25,963:WARNING:cuML is outdated or not found. Required version is >=22.10, got 3.0.0
2023-05-13 18:19:25,963:INFO:Set up data.
2023-05-13 18:19:26,162:INFO:Set up train/test split.
2023-05-13 18:19:26,246:INFO:Set up index.
2023-05-13 18:19:26,247:INFO:Set up folding strategy.
2023-05-13 18:19:26,247:INFO:Assigning column types.
2023-05-13 18:19:26,268:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-05-13 18:19:26,269:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-13 18:19:26,324:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-05-13 18:19:26,325:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-13 18:19:26,325:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-13 18:19:26,325:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-05-13 18:19:26,325:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-13 18:19:26,353:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-13 18:19:26,358:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-13 18:19:26,359:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-13 18:19:26,532:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-13 18:19:26,533:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-13 18:19:26,656:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-05-13 18:19:26,657:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-13 18:19:26,657:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-13 18:19:26,658:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-05-13 18:19:26,658:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-13 18:19:26,689:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-13 18:19:26,696:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-13 18:19:26,698:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-13 18:19:26,877:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-13 18:19:26,878:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-05-13 18:19:26,878:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-13 18:19:26,998:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-13 18:19:26,999:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-13 18:19:27,000:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-05-13 18:19:27,000:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-13 18:19:27,035:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-13 18:19:27,041:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-13 18:19:27,042:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-13 18:19:27,217:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-13 18:19:27,219:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-13 18:19:27,340:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-13 18:19:27,340:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-13 18:19:27,341:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-05-13 18:19:27,341:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-13 18:19:27,375:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-13 18:19:27,381:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-13 18:19:27,383:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-13 18:19:27,550:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-13 18:19:27,551:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2023-05-13 18:19:27,552:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-13 18:19:27,672:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-13 18:19:27,672:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-13 18:19:27,673:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-13 18:19:27,703:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-13 18:19:27,709:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-13 18:19:27,710:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-13 18:19:27,886:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-13 18:19:27,887:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-13 18:19:28,001:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-13 18:19:28,001:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-13 18:19:28,002:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-13 18:19:28,036:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-13 18:19:28,042:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-13 18:19:28,043:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-13 18:19:28,224:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-13 18:19:28,227:INFO:Preparing preprocessing pipeline...
2023-05-13 18:19:28,234:INFO:Set up label encoding.
2023-05-13 18:19:28,234:INFO:Set up date feature engineering.
2023-05-13 18:19:28,234:INFO:Set up simple imputation.
2023-05-13 18:19:28,277:INFO:Set up encoding of ordinal features.
2023-05-13 18:19:28,338:INFO:Set up encoding of categorical features.
2023-05-13 18:19:28,338:INFO:Set up removing multicollinearity.
2023-05-13 18:19:28,338:INFO:Set up removing outliers.
2023-05-13 18:19:28,339:INFO:Set up imbalanced handling.
2023-05-13 18:19:28,339:INFO:Set up feature normalization.
2023-05-13 18:19:28,341:INFO:Set up column name cleaning.
2023-05-13 18:19:29,598:INFO:Finished creating preprocessing pipeline.
2023-05-13 18:19:29,705:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\camil\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('date_feature_extractor',
                 TransformerWrapper(exclude=None,
                                    include=['Fecha.Expedicion', 'ANO_MES',
                                             'Fecha.Proceso'],
                                    transformer=ExtractDateTimeFeatures(features=['da...
                                    transformer=FixImbalancer(estimator=SMOTE(k_neighbors=5,
                                                                              n_jobs=None,
                                                                              random_state=None,
                                                                              sampling_strategy='auto')))),
                ('normalize',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False)
2023-05-13 18:19:29,705:INFO:Creating final display dataframe.
2023-05-13 18:19:30,186:INFO:Setup _display_container:                     Description             Value
0                    Session id               123
1                        Target            Target
2                   Target type            Binary
3                Target mapping        0: 0, 1: 1
4           Original data shape       (50001, 35)
5        Transformed data shape       (80307, 53)
6   Transformed train set shape       (65306, 53)
7    Transformed test set shape       (15001, 53)
8               Ignore features                 4
9              Ordinal features                 7
10             Numeric features                15
11                Date features                 3
12         Categorical features                16
13     Rows with missing values            100.0%
14                   Preprocess              True
15              Imputation type            simple
16           Numeric imputation              mean
17       Categorical imputation              mode
18     Maximum one-hot encoding                25
19              Encoding method              None
20     Remove multicollinearity              True
21  Multicollinearity threshold               0.9
22              Remove outliers              True
23           Outliers threshold              0.05
24                Fix imbalance              True
25         Fix imbalance method             SMOTE
26                    Normalize              True
27             Normalize method            zscore
28               Fold Generator             KFold
29                  Fold Number                10
30                     CPU Jobs                -1
31                      Use GPU              True
32               Log Experiment             False
33              Experiment Name  clf-default-name
34                          USI              b63f
2023-05-13 18:19:30,196:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-13 18:19:30,262:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-13 18:19:30,263:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-13 18:19:30,263:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-13 18:19:30,295:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-13 18:19:30,301:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-13 18:19:30,303:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-13 18:19:30,480:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-13 18:19:30,481:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-13 18:19:30,597:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-13 18:19:30,598:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-13 18:19:30,598:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-13 18:19:30,628:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-13 18:19:30,635:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-13 18:19:30,636:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-13 18:19:30,802:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-13 18:19:30,804:INFO:setup() successfully completed in 4.87s...............
2023-05-13 18:19:45,335:INFO:PyCaret ClassificationExperiment
2023-05-13 18:19:45,336:INFO:Logging name: clf-default-name
2023-05-13 18:19:45,336:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2023-05-13 18:19:45,336:INFO:version 3.0.0
2023-05-13 18:19:45,336:INFO:Initializing setup()
2023-05-13 18:19:45,336:INFO:self.USI: d1e8
2023-05-13 18:19:45,336:INFO:self._variable_keys: {'is_multiclass', 'exp_name_log', 'logging_param', 'n_jobs_param', 'seed', 'html_param', 'fix_imbalance', 'log_plots_param', 'USI', 'fold_generator', '_available_plots', 'X_test', 'fold_groups_param', 'X', 'exp_id', 'data', '_ml_usecase', 'y', 'memory', 'y_train', 'pipeline', 'idx', 'gpu_n_jobs_param', 'target_param', 'X_train', 'fold_shuffle_param', 'y_test', 'gpu_param'}
2023-05-13 18:19:45,336:INFO:Checking environment
2023-05-13 18:19:45,336:INFO:python_version: 3.8.16
2023-05-13 18:19:45,336:INFO:python_build: ('default', 'Mar  2 2023 03:18:16')
2023-05-13 18:19:45,336:INFO:machine: AMD64
2023-05-13 18:19:45,336:INFO:platform: Windows-10-10.0.19045-SP0
2023-05-13 18:19:45,340:INFO:Memory: svmem(total=34292408320, available=21710008320, percent=36.7, used=12582400000, free=21710008320)
2023-05-13 18:19:45,340:INFO:Physical Core: 4
2023-05-13 18:19:45,340:INFO:Logical Core: 8
2023-05-13 18:19:45,340:INFO:Checking libraries
2023-05-13 18:19:45,341:INFO:System:
2023-05-13 18:19:45,341:INFO:    python: 3.8.16 (default, Mar  2 2023, 03:18:16) [MSC v.1916 64 bit (AMD64)]
2023-05-13 18:19:45,341:INFO:executable: c:\Users\camil\anaconda3\envs\pycaretenv\python.exe
2023-05-13 18:19:45,341:INFO:   machine: Windows-10-10.0.19045-SP0
2023-05-13 18:19:45,341:INFO:PyCaret required dependencies:
2023-05-13 18:19:45,341:INFO:                 pip: 23.0.1
2023-05-13 18:19:45,342:INFO:          setuptools: 66.0.0
2023-05-13 18:19:45,342:INFO:             pycaret: 3.0.0
2023-05-13 18:19:45,342:INFO:             IPython: 8.12.2
2023-05-13 18:19:45,342:INFO:          ipywidgets: 8.0.6
2023-05-13 18:19:45,342:INFO:                tqdm: 4.65.0
2023-05-13 18:19:45,342:INFO:               numpy: 1.24.3
2023-05-13 18:19:45,344:INFO:              pandas: 1.5.3
2023-05-13 18:19:45,344:INFO:              jinja2: 3.1.2
2023-05-13 18:19:45,344:INFO:               scipy: 1.10.1
2023-05-13 18:19:45,344:INFO:              joblib: 1.2.0
2023-05-13 18:19:45,344:INFO:             sklearn: 1.2.2
2023-05-13 18:19:45,344:INFO:                pyod: 1.0.9
2023-05-13 18:19:45,344:INFO:            imblearn: 0.10.1
2023-05-13 18:19:45,344:INFO:   category_encoders: 2.6.0
2023-05-13 18:19:45,344:INFO:            lightgbm: 3.3.5
2023-05-13 18:19:45,344:INFO:               numba: 0.57.0
2023-05-13 18:19:45,344:INFO:            requests: 2.30.0
2023-05-13 18:19:45,344:INFO:          matplotlib: 3.7.1
2023-05-13 18:19:45,344:INFO:          scikitplot: 0.3.7
2023-05-13 18:19:45,344:INFO:         yellowbrick: 1.5
2023-05-13 18:19:45,345:INFO:              plotly: 5.14.1
2023-05-13 18:19:45,345:INFO:             kaleido: 0.2.1
2023-05-13 18:19:45,345:INFO:         statsmodels: 0.14.0
2023-05-13 18:19:45,345:INFO:              sktime: 0.18.0
2023-05-13 18:19:45,345:INFO:               tbats: 1.1.3
2023-05-13 18:19:45,345:INFO:            pmdarima: 2.0.3
2023-05-13 18:19:45,346:INFO:              psutil: 5.9.5
2023-05-13 18:19:45,346:INFO:PyCaret optional dependencies:
2023-05-13 18:19:45,346:INFO:                shap: Not installed
2023-05-13 18:19:45,346:INFO:           interpret: Not installed
2023-05-13 18:19:45,346:INFO:                umap: Not installed
2023-05-13 18:19:45,346:INFO:    pandas_profiling: Not installed
2023-05-13 18:19:45,346:INFO:  explainerdashboard: Not installed
2023-05-13 18:19:45,346:INFO:             autoviz: Not installed
2023-05-13 18:19:45,346:INFO:           fairlearn: Not installed
2023-05-13 18:19:45,347:INFO:             xgboost: Not installed
2023-05-13 18:19:45,347:INFO:            catboost: Not installed
2023-05-13 18:19:45,347:INFO:              kmodes: Not installed
2023-05-13 18:19:45,347:INFO:             mlxtend: Not installed
2023-05-13 18:19:45,347:INFO:       statsforecast: Not installed
2023-05-13 18:19:45,347:INFO:        tune_sklearn: Not installed
2023-05-13 18:19:45,347:INFO:                 ray: Not installed
2023-05-13 18:19:45,347:INFO:            hyperopt: Not installed
2023-05-13 18:19:45,347:INFO:              optuna: Not installed
2023-05-13 18:19:45,348:INFO:               skopt: Not installed
2023-05-13 18:19:45,348:INFO:              mlflow: Not installed
2023-05-13 18:19:45,348:INFO:              gradio: Not installed
2023-05-13 18:19:45,348:INFO:             fastapi: Not installed
2023-05-13 18:19:45,348:INFO:             uvicorn: Not installed
2023-05-13 18:19:45,348:INFO:              m2cgen: Not installed
2023-05-13 18:19:45,348:INFO:           evidently: Not installed
2023-05-13 18:19:45,348:INFO:               fugue: Not installed
2023-05-13 18:19:45,348:INFO:           streamlit: Not installed
2023-05-13 18:19:45,349:INFO:             prophet: Not installed
2023-05-13 18:19:45,349:INFO:None
2023-05-13 18:19:45,349:INFO:Set up GPU usage.
2023-05-13 18:19:45,349:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-13 18:19:45,349:WARNING:cuML is outdated or not found. Required version is >=22.10, got 3.0.0
2023-05-13 18:19:45,349:INFO:Set up data.
2023-05-13 18:19:45,550:INFO:Set up train/test split.
2023-05-13 18:19:45,642:INFO:Set up index.
2023-05-13 18:19:45,642:INFO:Set up folding strategy.
2023-05-13 18:19:45,642:INFO:Assigning column types.
2023-05-13 18:19:45,663:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-05-13 18:19:45,664:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-13 18:19:45,722:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-05-13 18:19:45,722:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-13 18:19:45,722:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-13 18:19:45,723:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-05-13 18:19:45,723:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-13 18:19:45,752:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-13 18:19:45,759:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-13 18:19:45,761:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-13 18:19:45,933:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-13 18:19:45,934:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-13 18:19:46,049:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-05-13 18:19:46,049:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-13 18:19:46,049:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-13 18:19:46,050:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-05-13 18:19:46,050:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-13 18:19:46,081:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-13 18:19:46,088:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-13 18:19:46,090:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-13 18:19:46,256:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-13 18:19:46,257:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-05-13 18:19:46,257:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-13 18:19:46,376:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-13 18:19:46,377:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-13 18:19:46,378:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-05-13 18:19:46,378:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-13 18:19:46,461:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-13 18:19:46,472:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-13 18:19:46,473:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-13 18:19:46,652:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-13 18:19:46,654:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-13 18:19:46,768:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-13 18:19:46,768:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-13 18:19:46,769:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-05-13 18:19:46,769:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-13 18:19:46,799:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-13 18:19:46,805:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-13 18:19:46,806:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-13 18:19:46,975:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-13 18:19:46,975:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2023-05-13 18:19:46,976:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-13 18:19:47,095:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-13 18:19:47,095:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-13 18:19:47,096:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-13 18:19:47,128:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-13 18:19:47,135:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-13 18:19:47,136:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-13 18:19:47,304:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-13 18:19:47,305:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-13 18:19:47,423:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-13 18:19:47,424:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-13 18:19:47,424:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-13 18:19:47,456:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-13 18:19:47,466:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-13 18:19:47,468:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-13 18:19:47,643:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-13 18:19:47,646:INFO:Preparing preprocessing pipeline...
2023-05-13 18:19:47,651:INFO:Set up label encoding.
2023-05-13 18:19:47,651:INFO:Set up date feature engineering.
2023-05-13 18:19:47,651:INFO:Set up simple imputation.
2023-05-13 18:19:47,697:INFO:Set up encoding of ordinal features.
2023-05-13 18:19:47,760:INFO:Set up encoding of categorical features.
2023-05-13 18:19:47,760:INFO:Set up removing multicollinearity.
2023-05-13 18:19:47,760:INFO:Set up removing outliers.
2023-05-13 18:19:47,760:INFO:Set up imbalanced handling.
2023-05-13 18:19:47,761:INFO:Set up feature normalization.
2023-05-13 18:19:47,763:INFO:Set up column name cleaning.
2023-05-13 18:19:49,186:INFO:Finished creating preprocessing pipeline.
2023-05-13 18:19:49,324:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\camil\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('date_feature_extractor',
                 TransformerWrapper(exclude=None,
                                    include=['Fecha.Expedicion', 'ANO_MES',
                                             'Fecha.Proceso'],
                                    transformer=ExtractDateTimeFeatures(features=['da...
                                    transformer=FixImbalancer(estimator=SMOTE(k_neighbors=5,
                                                                              n_jobs=None,
                                                                              random_state=None,
                                                                              sampling_strategy='auto')))),
                ('normalize',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False)
2023-05-13 18:19:49,324:INFO:Creating final display dataframe.
2023-05-13 18:19:49,919:INFO:Setup _display_container:                     Description             Value
0                    Session id               123
1                        Target            Target
2                   Target type            Binary
3                Target mapping        0: 0, 1: 1
4           Original data shape       (50001, 35)
5        Transformed data shape       (80307, 53)
6   Transformed train set shape       (65306, 53)
7    Transformed test set shape       (15001, 53)
8               Ignore features                 4
9              Ordinal features                 7
10             Numeric features                15
11                Date features                 3
12         Categorical features                16
13     Rows with missing values            100.0%
14                   Preprocess              True
15              Imputation type            simple
16           Numeric imputation              mean
17       Categorical imputation              mode
18     Maximum one-hot encoding                25
19              Encoding method              None
20     Remove multicollinearity              True
21  Multicollinearity threshold               0.9
22              Remove outliers              True
23           Outliers threshold              0.05
24                Fix imbalance              True
25         Fix imbalance method             SMOTE
26                    Normalize              True
27             Normalize method            zscore
28               Fold Generator             KFold
29                  Fold Number                10
30                     CPU Jobs                -1
31                      Use GPU              True
32               Log Experiment             False
33              Experiment Name  clf-default-name
34                          USI              d1e8
2023-05-13 18:19:49,930:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-13 18:19:50,003:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-13 18:19:50,003:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-13 18:19:50,004:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-13 18:19:50,033:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-13 18:19:50,040:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-13 18:19:50,041:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-13 18:19:50,222:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-13 18:19:50,223:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-13 18:19:50,339:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-13 18:19:50,340:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-13 18:19:50,341:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-13 18:19:50,373:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-13 18:19:50,380:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-13 18:19:50,382:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-13 18:19:50,562:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-13 18:19:50,563:INFO:setup() successfully completed in 5.24s...............
2023-05-13 18:20:17,477:INFO:Initializing compare_models()
2023-05-13 18:20:17,477:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002CF33FCE160>, include=None, fold=None, round=4, cross_validation=True, sort=Accuracy, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x000002CF33FCE160>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2023-05-13 18:20:17,477:INFO:Checking exceptions
2023-05-13 18:20:17,500:INFO:Preparing display monitor
2023-05-13 18:20:17,548:INFO:Initializing Logistic Regression
2023-05-13 18:20:17,548:INFO:Total runtime is 8.428096771240235e-06 minutes
2023-05-13 18:20:17,554:INFO:SubProcess create_model() called ==================================
2023-05-13 18:20:17,555:INFO:Initializing create_model()
2023-05-13 18:20:17,555:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002CF33FCE160>, estimator=lr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002CF40B80F70>, model_only=True, return_train_score=False, kwargs={})
2023-05-13 18:20:17,556:INFO:Checking exceptions
2023-05-13 18:20:17,556:INFO:Importing libraries
2023-05-13 18:20:17,556:INFO:Copying training dataset
2023-05-13 18:20:17,591:INFO:Defining folds
2023-05-13 18:20:17,592:INFO:Declaring metric variables
2023-05-13 18:20:17,599:INFO:Importing untrained model
2023-05-13 18:20:17,608:INFO:Logistic Regression Imported successfully
2023-05-13 18:20:17,622:INFO:Starting cross validation
2023-05-13 18:20:17,627:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2023-05-13 18:20:21,222:WARNING:c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\sklearn\base.py:439: UserWarning: X does not have valid feature names, but IsolationForest was fitted with feature names
  warnings.warn(

2023-05-13 18:22:46,403:INFO:PyCaret ClassificationExperiment
2023-05-13 18:22:46,403:INFO:Logging name: clf-default-name
2023-05-13 18:22:46,403:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2023-05-13 18:22:46,403:INFO:version 3.0.0
2023-05-13 18:22:46,403:INFO:Initializing setup()
2023-05-13 18:22:46,403:INFO:self.USI: bbc8
2023-05-13 18:22:46,403:INFO:self._variable_keys: {'is_multiclass', 'exp_name_log', 'logging_param', 'n_jobs_param', 'seed', 'html_param', 'fix_imbalance', 'log_plots_param', 'USI', 'fold_generator', '_available_plots', 'X_test', 'fold_groups_param', 'X', 'exp_id', 'data', '_ml_usecase', 'y', 'memory', 'y_train', 'pipeline', 'idx', 'gpu_n_jobs_param', 'target_param', 'X_train', 'fold_shuffle_param', 'y_test', 'gpu_param'}
2023-05-13 18:22:46,403:INFO:Checking environment
2023-05-13 18:22:46,403:INFO:python_version: 3.8.16
2023-05-13 18:22:46,403:INFO:python_build: ('default', 'Mar  2 2023 03:18:16')
2023-05-13 18:22:46,404:INFO:machine: AMD64
2023-05-13 18:22:46,404:INFO:platform: Windows-10-10.0.19045-SP0
2023-05-13 18:22:46,407:INFO:Memory: svmem(total=34292408320, available=21557248000, percent=37.1, used=12735160320, free=21557248000)
2023-05-13 18:22:46,407:INFO:Physical Core: 4
2023-05-13 18:22:46,407:INFO:Logical Core: 8
2023-05-13 18:22:46,407:INFO:Checking libraries
2023-05-13 18:22:46,407:INFO:System:
2023-05-13 18:22:46,407:INFO:    python: 3.8.16 (default, Mar  2 2023, 03:18:16) [MSC v.1916 64 bit (AMD64)]
2023-05-13 18:22:46,408:INFO:executable: c:\Users\camil\anaconda3\envs\pycaretenv\python.exe
2023-05-13 18:22:46,408:INFO:   machine: Windows-10-10.0.19045-SP0
2023-05-13 18:22:46,408:INFO:PyCaret required dependencies:
2023-05-13 18:22:46,408:INFO:                 pip: 23.0.1
2023-05-13 18:22:46,408:INFO:          setuptools: 66.0.0
2023-05-13 18:22:46,408:INFO:             pycaret: 3.0.0
2023-05-13 18:22:46,409:INFO:             IPython: 8.12.2
2023-05-13 18:22:46,409:INFO:          ipywidgets: 8.0.6
2023-05-13 18:22:46,409:INFO:                tqdm: 4.65.0
2023-05-13 18:22:46,409:INFO:               numpy: 1.24.3
2023-05-13 18:22:46,409:INFO:              pandas: 1.5.3
2023-05-13 18:22:46,409:INFO:              jinja2: 3.1.2
2023-05-13 18:22:46,410:INFO:               scipy: 1.10.1
2023-05-13 18:22:46,410:INFO:              joblib: 1.2.0
2023-05-13 18:22:46,410:INFO:             sklearn: 1.2.2
2023-05-13 18:22:46,410:INFO:                pyod: 1.0.9
2023-05-13 18:22:46,410:INFO:            imblearn: 0.10.1
2023-05-13 18:22:46,410:INFO:   category_encoders: 2.6.0
2023-05-13 18:22:46,410:INFO:            lightgbm: 3.3.5
2023-05-13 18:22:46,411:INFO:               numba: 0.57.0
2023-05-13 18:22:46,411:INFO:            requests: 2.30.0
2023-05-13 18:22:46,411:INFO:          matplotlib: 3.7.1
2023-05-13 18:22:46,411:INFO:          scikitplot: 0.3.7
2023-05-13 18:22:46,411:INFO:         yellowbrick: 1.5
2023-05-13 18:22:46,411:INFO:              plotly: 5.14.1
2023-05-13 18:22:46,411:INFO:             kaleido: 0.2.1
2023-05-13 18:22:46,411:INFO:         statsmodels: 0.14.0
2023-05-13 18:22:46,411:INFO:              sktime: 0.18.0
2023-05-13 18:22:46,411:INFO:               tbats: 1.1.3
2023-05-13 18:22:46,412:INFO:            pmdarima: 2.0.3
2023-05-13 18:22:46,412:INFO:              psutil: 5.9.5
2023-05-13 18:22:46,412:INFO:PyCaret optional dependencies:
2023-05-13 18:22:46,412:INFO:                shap: Not installed
2023-05-13 18:22:46,412:INFO:           interpret: Not installed
2023-05-13 18:22:46,412:INFO:                umap: Not installed
2023-05-13 18:22:46,412:INFO:    pandas_profiling: Not installed
2023-05-13 18:22:46,412:INFO:  explainerdashboard: Not installed
2023-05-13 18:22:46,412:INFO:             autoviz: Not installed
2023-05-13 18:22:46,413:INFO:           fairlearn: Not installed
2023-05-13 18:22:46,413:INFO:             xgboost: Not installed
2023-05-13 18:22:46,413:INFO:            catboost: Not installed
2023-05-13 18:22:46,413:INFO:              kmodes: Not installed
2023-05-13 18:22:46,413:INFO:             mlxtend: Not installed
2023-05-13 18:22:46,413:INFO:       statsforecast: Not installed
2023-05-13 18:22:46,413:INFO:        tune_sklearn: Not installed
2023-05-13 18:22:46,413:INFO:                 ray: Not installed
2023-05-13 18:22:46,413:INFO:            hyperopt: Not installed
2023-05-13 18:22:46,413:INFO:              optuna: Not installed
2023-05-13 18:22:46,413:INFO:               skopt: Not installed
2023-05-13 18:22:46,413:INFO:              mlflow: Not installed
2023-05-13 18:22:46,413:INFO:              gradio: Not installed
2023-05-13 18:22:46,413:INFO:             fastapi: Not installed
2023-05-13 18:22:46,413:INFO:             uvicorn: Not installed
2023-05-13 18:22:46,413:INFO:              m2cgen: Not installed
2023-05-13 18:22:46,414:INFO:           evidently: Not installed
2023-05-13 18:22:46,414:INFO:               fugue: Not installed
2023-05-13 18:22:46,414:INFO:           streamlit: Not installed
2023-05-13 18:22:46,414:INFO:             prophet: Not installed
2023-05-13 18:22:46,414:INFO:None
2023-05-13 18:22:46,414:INFO:Set up GPU usage.
2023-05-13 18:22:46,414:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-13 18:22:46,414:WARNING:cuML is outdated or not found. Required version is >=22.10, got 3.0.0
2023-05-13 18:22:46,414:INFO:Set up data.
2023-05-13 18:22:46,661:INFO:Set up train/test split.
2023-05-13 18:22:46,835:INFO:Set up index.
2023-05-13 18:22:46,836:INFO:Set up folding strategy.
2023-05-13 18:22:46,836:INFO:Assigning column types.
2023-05-13 18:22:46,853:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-05-13 18:22:46,854:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-13 18:22:46,918:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-05-13 18:22:46,918:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-13 18:22:46,918:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-13 18:22:46,919:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-05-13 18:22:46,919:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-13 18:22:46,955:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-13 18:22:46,965:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-13 18:22:46,966:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-13 18:22:47,153:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-13 18:22:47,155:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-13 18:22:47,270:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-05-13 18:22:47,270:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-13 18:22:47,270:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-13 18:22:47,271:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-05-13 18:22:47,271:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-13 18:22:47,303:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-13 18:22:47,310:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-13 18:22:47,312:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-13 18:22:47,514:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-13 18:22:47,514:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-05-13 18:22:47,515:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-13 18:22:47,629:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-13 18:22:47,629:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-13 18:22:47,630:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-05-13 18:22:47,630:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-13 18:22:47,662:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-13 18:22:47,669:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-13 18:22:47,671:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-13 18:22:47,850:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-13 18:22:47,851:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-13 18:22:47,971:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-13 18:22:47,971:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-13 18:22:47,972:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-05-13 18:22:47,972:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-13 18:22:48,005:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-13 18:22:48,013:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-13 18:22:48,014:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-13 18:22:48,185:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-13 18:22:48,186:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2023-05-13 18:22:48,186:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-13 18:22:48,300:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-13 18:22:48,301:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-13 18:22:48,301:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-13 18:22:48,332:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-13 18:22:48,337:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-13 18:22:48,339:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-13 18:22:48,503:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-13 18:22:48,504:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-13 18:22:48,620:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-13 18:22:48,621:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-13 18:22:48,622:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-13 18:22:48,654:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-13 18:22:48,661:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-13 18:22:48,662:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-13 18:22:48,839:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-13 18:22:48,842:INFO:Preparing preprocessing pipeline...
2023-05-13 18:22:48,847:INFO:Set up label encoding.
2023-05-13 18:22:48,848:INFO:Set up date feature engineering.
2023-05-13 18:22:48,848:INFO:Set up simple imputation.
2023-05-13 18:22:48,881:INFO:Set up encoding of ordinal features.
2023-05-13 18:22:48,917:INFO:Set up encoding of categorical features.
2023-05-13 18:22:48,917:INFO:Set up removing multicollinearity.
2023-05-13 18:22:48,918:INFO:Set up removing outliers.
2023-05-13 18:22:48,918:INFO:Set up imbalanced handling.
2023-05-13 18:22:48,918:INFO:Set up feature normalization.
2023-05-13 18:22:48,922:INFO:Set up column name cleaning.
2023-05-13 18:22:50,773:WARNING:c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\sklearn\base.py:439: UserWarning: X does not have valid feature names, but IsolationForest was fitted with feature names
  warnings.warn(

2023-05-13 18:22:54,611:INFO:Finished creating preprocessing pipeline.
2023-05-13 18:22:54,681:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\camil\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('date_feature_extractor',
                 TransformerWrapper(exclude=None,
                                    include=['Fecha.Expedicion',
                                             'Fecha.Proceso'],
                                    transformer=ExtractDateTimeFeatures(features=['day',
                                                                                  'month'...
                                    transformer=FixImbalancer(estimator=SMOTE(k_neighbors=5,
                                                                              n_jobs=None,
                                                                              random_state=None,
                                                                              sampling_strategy='auto')))),
                ('normalize',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False)
2023-05-13 18:22:54,682:INFO:Creating final display dataframe.
2023-05-13 18:22:55,595:WARNING:c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\sklearn\base.py:439: UserWarning: X does not have valid feature names, but IsolationForest was fitted with feature names
  warnings.warn(

2023-05-13 18:23:00,383:INFO:Setup _display_container:                     Description             Value
0                    Session id               123
1                        Target            Target
2                   Target type            Binary
3                Target mapping        0: 0, 1: 1
4           Original data shape       (50001, 35)
5        Transformed data shape       (79663, 48)
6   Transformed train set shape       (64662, 48)
7    Transformed test set shape       (15001, 48)
8               Ignore features                 6
9              Ordinal features                 4
10             Numeric features                15
11                Date features                 2
12         Categorical features                11
13     Rows with missing values            100.0%
14                   Preprocess              True
15              Imputation type            simple
16           Numeric imputation              mean
17       Categorical imputation              mode
18     Maximum one-hot encoding                25
19              Encoding method              None
20     Remove multicollinearity              True
21  Multicollinearity threshold               0.9
22              Remove outliers              True
23           Outliers threshold              0.05
24                Fix imbalance              True
25         Fix imbalance method             SMOTE
26                    Normalize              True
27             Normalize method            zscore
28               Fold Generator             KFold
29                  Fold Number                10
30                     CPU Jobs                -1
31                      Use GPU              True
32               Log Experiment             False
33              Experiment Name  clf-default-name
34                          USI              bbc8
2023-05-13 18:23:00,394:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-13 18:23:00,470:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-13 18:23:00,470:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-13 18:23:00,471:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-13 18:23:00,500:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-13 18:23:00,509:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-13 18:23:00,510:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-13 18:23:00,686:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-13 18:23:00,687:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-13 18:23:00,803:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-13 18:23:00,804:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-13 18:23:00,804:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-13 18:23:00,833:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-13 18:23:00,839:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-13 18:23:00,841:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-13 18:23:01,010:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-13 18:23:01,011:INFO:setup() successfully completed in 14.63s...............
2023-05-13 18:24:28,673:INFO:Initializing compare_models()
2023-05-13 18:24:28,674:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002CF56CEAE20>, include=['lr', 'dt', 'rf', 'xgboost'], fold=None, round=4, cross_validation=False, sort=AUC, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=0.5, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x000002CF56CEAE20>, 'include': ['lr', 'dt', 'rf', 'xgboost'], 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': False, 'sort': 'AUC', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': 0.5, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2023-05-13 18:24:28,674:INFO:Checking exceptions
2023-05-13 18:24:46,666:INFO:Initializing compare_models()
2023-05-13 18:24:46,667:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002CF56CEAE20>, include=['lr', 'dt', 'rf'], fold=None, round=4, cross_validation=False, sort=AUC, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=0.5, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x000002CF56CEAE20>, 'include': ['lr', 'dt', 'rf'], 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': False, 'sort': 'AUC', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': 0.5, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2023-05-13 18:24:46,667:INFO:Checking exceptions
2023-05-13 18:24:46,683:INFO:Preparing display monitor
2023-05-13 18:24:46,723:INFO:Initializing Logistic Regression
2023-05-13 18:24:46,723:INFO:Total runtime is 0.0 minutes
2023-05-13 18:24:46,733:INFO:SubProcess create_model() called ==================================
2023-05-13 18:24:46,733:INFO:Initializing create_model()
2023-05-13 18:24:46,734:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002CF56CEAE20>, estimator=lr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=0.5, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002CF4D3FC700>, model_only=True, return_train_score=False, kwargs={})
2023-05-13 18:24:46,734:INFO:Checking exceptions
2023-05-13 18:24:46,734:INFO:Importing libraries
2023-05-13 18:24:46,734:INFO:Copying training dataset
2023-05-13 18:24:46,773:INFO:Defining folds
2023-05-13 18:24:46,773:INFO:Declaring metric variables
2023-05-13 18:24:46,789:INFO:Importing untrained model
2023-05-13 18:24:46,800:INFO:Logistic Regression Imported successfully
2023-05-13 18:24:46,840:INFO:Cross validation set to False
2023-05-13 18:24:46,840:INFO:Fitting Model
2023-05-13 18:24:48,961:INFO:Initializing predict_model()
2023-05-13 18:24:48,962:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002CF56CEAE20>, estimator=Pipeline(memory=FastMemory(location=C:\Users\camil\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('date_feature_extractor',
                 TransformerWrapper(exclude=None,
                                    include=['Fecha.Expedicion',
                                             'Fecha.Proceso'],
                                    transformer=ExtractDateTimeFeatures(features=['day',
                                                                                  'month'...
                                                                                    multi_class='auto',
                                                                                    n_jobs=None,
                                                                                    penalty='l2',
                                                                                    random_state=123,
                                                                                    solver='lbfgs',
                                                                                    tol=0.0001,
                                                                                    verbose=0,
                                                                                    warm_start=False),
                                                      dual=False,
                                                      fit_intercept=True,
                                                      intercept_scaling=1,
                                                      l1_ratio=None,
                                                      max_iter=1000,
                                                      multi_class='auto',
                                                      n_jobs=None, penalty='l2',
                                                      probability_threshold=0.5,
                                                      random_state=123,
                                                      solver='lbfgs',
                                                      tol=0.0001, verbose=0,
                                                      warm_start=False))],
         verbose=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x000002CF56D72310>)
2023-05-13 18:24:48,962:INFO:Checking exceptions
2023-05-13 18:24:48,962:INFO:Preloading libraries
2023-05-13 18:24:49,584:INFO:_display_container: 2
2023-05-13 18:24:49,609:INFO:CustomProbabilityThresholdClassifier(C=1.0, class_weight=None,
                                     classifier=LogisticRegression(C=1.0,
                                                                   class_weight=None,
                                                                   dual=False,
                                                                   fit_intercept=True,
                                                                   intercept_scaling=1,
                                                                   l1_ratio=None,
                                                                   max_iter=1000,
                                                                   multi_class='auto',
                                                                   n_jobs=None,
                                                                   penalty='l2',
                                                                   random_state=123,
                                                                   solver='lbfgs',
                                                                   tol=0.0001,
                                                                   verbose=0,
                                                                   warm_start=False),
                                     dual=False, fit_intercept=True,
                                     intercept_scaling=1, l1_ratio=None,
                                     max_iter=1000, multi_class='auto',
                                     n_jobs=None, penalty='l2',
                                     probability_threshold=0.5,
                                     random_state=123, solver='lbfgs',
                                     tol=0.0001, verbose=0, warm_start=False)
2023-05-13 18:24:49,609:INFO:create_model() successfully completed......................................
2023-05-13 18:24:49,815:INFO:SubProcess create_model() end ==================================
2023-05-13 18:24:49,815:INFO:Creating metrics dataframe
2023-05-13 18:24:49,829:INFO:Initializing Decision Tree Classifier
2023-05-13 18:24:49,829:INFO:Total runtime is 0.051771084467569985 minutes
2023-05-13 18:24:49,835:INFO:SubProcess create_model() called ==================================
2023-05-13 18:24:49,835:INFO:Initializing create_model()
2023-05-13 18:24:49,835:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002CF56CEAE20>, estimator=dt, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=0.5, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002CF4D3FC700>, model_only=True, return_train_score=False, kwargs={})
2023-05-13 18:24:49,835:INFO:Checking exceptions
2023-05-13 18:24:49,835:INFO:Importing libraries
2023-05-13 18:24:49,835:INFO:Copying training dataset
2023-05-13 18:24:49,860:INFO:Defining folds
2023-05-13 18:24:49,860:INFO:Declaring metric variables
2023-05-13 18:24:49,866:INFO:Importing untrained model
2023-05-13 18:24:49,873:INFO:Decision Tree Classifier Imported successfully
2023-05-13 18:24:49,938:INFO:Cross validation set to False
2023-05-13 18:24:49,938:INFO:Fitting Model
2023-05-13 18:24:51,075:INFO:Initializing predict_model()
2023-05-13 18:24:51,076:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002CF56CEAE20>, estimator=Pipeline(memory=FastMemory(location=C:\Users\camil\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('date_feature_extractor',
                 TransformerWrapper(exclude=None,
                                    include=['Fecha.Expedicion',
                                             'Fecha.Proceso'],
                                    transformer=ExtractDateTimeFeatures(features=['day',
                                                                                  'month'...
                                                                                        min_impurity_decrease=0.0,
                                                                                        min_samples_leaf=1,
                                                                                        min_samples_split=2,
                                                                                        min_weight_fraction_leaf=0.0,
                                                                                        random_state=123,
                                                                                        splitter='best'),
                                                      criterion='gini',
                                                      max_depth=None,
                                                      max_features=None,
                                                      max_leaf_nodes=None,
                                                      min_impurity_decrease=0.0,
                                                      min_samples_leaf=1,
                                                      min_samples_split=2,
                                                      min_weight_fraction_leaf=0.0,
                                                      probability_threshold=0.5,
                                                      random_state=123,
                                                      splitter='best'))],
         verbose=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x000002CF4C763430>)
2023-05-13 18:24:51,076:INFO:Checking exceptions
2023-05-13 18:24:51,076:INFO:Preloading libraries
2023-05-13 18:24:51,572:INFO:_display_container: 2
2023-05-13 18:24:51,597:INFO:CustomProbabilityThresholdClassifier(ccp_alpha=0.0, class_weight=None,
                                     classifier=DecisionTreeClassifier(ccp_alpha=0.0,
                                                                       class_weight=None,
                                                                       criterion='gini',
                                                                       max_depth=None,
                                                                       max_features=None,
                                                                       max_leaf_nodes=None,
                                                                       min_impurity_decrease=0.0,
                                                                       min_samples_leaf=1,
                                                                       min_samples_split=2,
                                                                       min_weight_fraction_leaf=0.0,
                                                                       random_state=123,
                                                                       splitter='best'),
                                     criterion='gini', max_depth=None,
                                     max_features=None, max_leaf_nodes=None,
                                     min_impurity_decrease=0.0,
                                     min_samples_leaf=1, min_samples_split=2,
                                     min_weight_fraction_leaf=0.0,
                                     probability_threshold=0.5,
                                     random_state=123, splitter='best')
2023-05-13 18:24:51,597:INFO:create_model() successfully completed......................................
2023-05-13 18:24:51,799:INFO:SubProcess create_model() end ==================================
2023-05-13 18:24:51,799:INFO:Creating metrics dataframe
2023-05-13 18:24:51,817:INFO:Initializing Random Forest Classifier
2023-05-13 18:24:51,817:INFO:Total runtime is 0.08489447037378947 minutes
2023-05-13 18:24:51,824:INFO:SubProcess create_model() called ==================================
2023-05-13 18:24:51,825:INFO:Initializing create_model()
2023-05-13 18:24:51,825:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002CF56CEAE20>, estimator=rf, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=0.5, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002CF4D3FC700>, model_only=True, return_train_score=False, kwargs={})
2023-05-13 18:24:51,825:INFO:Checking exceptions
2023-05-13 18:24:51,825:INFO:Importing libraries
2023-05-13 18:24:51,825:INFO:Copying training dataset
2023-05-13 18:24:51,852:INFO:Defining folds
2023-05-13 18:24:51,853:INFO:Declaring metric variables
2023-05-13 18:24:51,859:INFO:Importing untrained model
2023-05-13 18:24:51,865:INFO:Random Forest Classifier Imported successfully
2023-05-13 18:24:51,890:INFO:Cross validation set to False
2023-05-13 18:24:51,890:INFO:Fitting Model
2023-05-13 18:24:54,713:INFO:Initializing predict_model()
2023-05-13 18:24:54,713:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002CF56CEAE20>, estimator=Pipeline(memory=FastMemory(location=C:\Users\camil\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('date_feature_extractor',
                 TransformerWrapper(exclude=None,
                                    include=['Fecha.Expedicion',
                                             'Fecha.Proceso'],
                                    transformer=ExtractDateTimeFeatures(features=['day',
                                                                                  'month'...
                                                                                        random_state=123,
                                                                                        verbose=0,
                                                                                        warm_start=False),
                                                      criterion='gini',
                                                      max_depth=None,
                                                      max_features='sqrt',
                                                      max_leaf_nodes=None,
                                                      max_samples=None,
                                                      min_impurity_decrease=0.0,
                                                      min_samples_leaf=1,
                                                      min_samples_split=2,
                                                      min_weight_fraction_leaf=0.0,
                                                      n_estimators=100,
                                                      n_jobs=-1,
                                                      oob_score=False,
                                                      probability_threshold=0.5,
                                                      random_state=123,
                                                      verbose=0,
                                                      warm_start=False))],
         verbose=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x000002CF51A93CA0>)
2023-05-13 18:24:54,714:INFO:Checking exceptions
2023-05-13 18:24:54,714:INFO:Preloading libraries
2023-05-13 18:24:55,340:INFO:_display_container: 2
2023-05-13 18:24:55,372:INFO:CustomProbabilityThresholdClassifier(bootstrap=True, ccp_alpha=0.0,
                                     class_weight=None,
                                     classifier=RandomForestClassifier(bootstrap=True,
                                                                       ccp_alpha=0.0,
                                                                       class_weight=None,
                                                                       criterion='gini',
                                                                       max_depth=None,
                                                                       max_features='sqrt',
                                                                       max_leaf_nodes=None,
                                                                       max_samples=None,
                                                                       min_impurity_decrease=0.0,
                                                                       min_samples_leaf=1,
                                                                       min_samples_split=2,
                                                                       min_weight_fraction_leaf=0.0,
                                                                       n_...
                                                                       oob_score=False,
                                                                       random_state=123,
                                                                       verbose=0,
                                                                       warm_start=False),
                                     criterion='gini', max_depth=None,
                                     max_features='sqrt', max_leaf_nodes=None,
                                     max_samples=None,
                                     min_impurity_decrease=0.0,
                                     min_samples_leaf=1, min_samples_split=2,
                                     min_weight_fraction_leaf=0.0,
                                     n_estimators=100, n_jobs=-1,
                                     oob_score=False, probability_threshold=0.5,
                                     random_state=123, verbose=0,
                                     warm_start=False)
2023-05-13 18:24:55,373:INFO:create_model() successfully completed......................................
2023-05-13 18:24:55,656:INFO:SubProcess create_model() end ==================================
2023-05-13 18:24:55,656:INFO:Creating metrics dataframe
2023-05-13 18:24:55,690:INFO:Initializing create_model()
2023-05-13 18:24:55,691:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002CF56CEAE20>, estimator=CustomProbabilityThresholdClassifier(C=1.0, class_weight=None,
                                     classifier=LogisticRegression(C=1.0,
                                                                   class_weight=None,
                                                                   dual=False,
                                                                   fit_intercept=True,
                                                                   intercept_scaling=1,
                                                                   l1_ratio=None,
                                                                   max_iter=1000,
                                                                   multi_class='auto',
                                                                   n_jobs=None,
                                                                   penalty='l2',
                                                                   random_state=123,
                                                                   solver='lbfgs',
                                                                   tol=0.0001,
                                                                   verbose=0,
                                                                   warm_start=False),
                                     dual=False, fit_intercept=True,
                                     intercept_scaling=1, l1_ratio=None,
                                     max_iter=1000, multi_class='auto',
                                     n_jobs=None, penalty='l2',
                                     probability_threshold=0.5,
                                     random_state=123, solver='lbfgs',
                                     tol=0.0001, verbose=0, warm_start=False), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=0.5, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-05-13 18:24:55,691:INFO:Checking exceptions
2023-05-13 18:24:55,692:INFO:Importing libraries
2023-05-13 18:24:55,692:INFO:Copying training dataset
2023-05-13 18:24:55,715:INFO:Defining folds
2023-05-13 18:24:55,715:INFO:Declaring metric variables
2023-05-13 18:24:55,715:INFO:Importing untrained model
2023-05-13 18:24:55,715:INFO:Declaring custom model
2023-05-13 18:24:55,717:INFO:CustomProbabilityThresholdClassifier Imported successfully
2023-05-13 18:24:55,732:INFO:Cross validation set to False
2023-05-13 18:24:55,733:INFO:Fitting Model
2023-05-13 18:24:56,544:INFO:CustomProbabilityThresholdClassifier(C=1.0, class_weight=None,
                                     classifier=LogisticRegression(C=1.0,
                                                                   class_weight=None,
                                                                   dual=False,
                                                                   fit_intercept=True,
                                                                   intercept_scaling=1,
                                                                   l1_ratio=None,
                                                                   max_iter=1000,
                                                                   multi_class='auto',
                                                                   n_jobs=None,
                                                                   penalty='l2',
                                                                   random_state=123,
                                                                   solver='lbfgs',
                                                                   tol=0.0001,
                                                                   verbose=0,
                                                                   warm_start=False),
                                     dual=False, fit_intercept=True,
                                     intercept_scaling=1, l1_ratio=None,
                                     max_iter=1000, multi_class='auto',
                                     n_jobs=None, penalty='l2',
                                     probability_threshold=0.5,
                                     random_state=123, solver='lbfgs',
                                     tol=0.0001, verbose=0, warm_start=False)
2023-05-13 18:24:56,544:INFO:create_model() successfully completed......................................
2023-05-13 18:24:56,775:INFO:_master_model_container: 0
2023-05-13 18:24:56,776:INFO:_display_container: 2
2023-05-13 18:24:56,779:INFO:CustomProbabilityThresholdClassifier(C=1.0, class_weight=None,
                                     classifier=LogisticRegression(C=1.0,
                                                                   class_weight=None,
                                                                   dual=False,
                                                                   fit_intercept=True,
                                                                   intercept_scaling=1,
                                                                   l1_ratio=None,
                                                                   max_iter=1000,
                                                                   multi_class='auto',
                                                                   n_jobs=None,
                                                                   penalty='l2',
                                                                   random_state=123,
                                                                   solver='lbfgs',
                                                                   tol=0.0001,
                                                                   verbose=0,
                                                                   warm_start=False),
                                     dual=False, fit_intercept=True,
                                     intercept_scaling=1, l1_ratio=None,
                                     max_iter=1000, multi_class='auto',
                                     n_jobs=None, penalty='l2',
                                     probability_threshold=0.5,
                                     random_state=123, solver='lbfgs',
                                     tol=0.0001, verbose=0, warm_start=False)
2023-05-13 18:24:56,779:INFO:compare_models() successfully completed......................................
2023-05-13 18:26:42,719:INFO:Initializing compare_models()
2023-05-13 18:26:42,720:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002CF56CEAE20>, include=None, fold=None, round=4, cross_validation=False, sort=AUC, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=0.5, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x000002CF56CEAE20>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': False, 'sort': 'AUC', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': 0.5, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2023-05-13 18:26:42,720:INFO:Checking exceptions
2023-05-13 18:26:42,734:INFO:Preparing display monitor
2023-05-13 18:26:42,775:INFO:Initializing Logistic Regression
2023-05-13 18:26:42,775:INFO:Total runtime is 0.0 minutes
2023-05-13 18:26:42,783:INFO:SubProcess create_model() called ==================================
2023-05-13 18:26:42,784:INFO:Initializing create_model()
2023-05-13 18:26:42,785:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002CF56CEAE20>, estimator=lr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=0.5, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002CF4C884CD0>, model_only=True, return_train_score=False, kwargs={})
2023-05-13 18:26:42,785:INFO:Checking exceptions
2023-05-13 18:26:42,785:INFO:Importing libraries
2023-05-13 18:26:42,785:INFO:Copying training dataset
2023-05-13 18:26:42,818:INFO:Defining folds
2023-05-13 18:26:42,818:INFO:Declaring metric variables
2023-05-13 18:26:42,825:INFO:Importing untrained model
2023-05-13 18:26:42,834:INFO:Logistic Regression Imported successfully
2023-05-13 18:26:42,861:INFO:Cross validation set to False
2023-05-13 18:26:42,861:INFO:Fitting Model
2023-05-13 18:26:43,679:INFO:Initializing predict_model()
2023-05-13 18:26:43,679:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002CF56CEAE20>, estimator=Pipeline(memory=FastMemory(location=C:\Users\camil\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('date_feature_extractor',
                 TransformerWrapper(exclude=None,
                                    include=['Fecha.Expedicion',
                                             'Fecha.Proceso'],
                                    transformer=ExtractDateTimeFeatures(features=['day',
                                                                                  'month'...
                                                                                    multi_class='auto',
                                                                                    n_jobs=None,
                                                                                    penalty='l2',
                                                                                    random_state=123,
                                                                                    solver='lbfgs',
                                                                                    tol=0.0001,
                                                                                    verbose=0,
                                                                                    warm_start=False),
                                                      dual=False,
                                                      fit_intercept=True,
                                                      intercept_scaling=1,
                                                      l1_ratio=None,
                                                      max_iter=1000,
                                                      multi_class='auto',
                                                      n_jobs=None, penalty='l2',
                                                      probability_threshold=0.5,
                                                      random_state=123,
                                                      solver='lbfgs',
                                                      tol=0.0001, verbose=0,
                                                      warm_start=False))],
         verbose=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x000002CF4C763430>)
2023-05-13 18:26:43,679:INFO:Checking exceptions
2023-05-13 18:26:43,679:INFO:Preloading libraries
2023-05-13 18:26:44,218:INFO:_display_container: 3
2023-05-13 18:26:44,244:INFO:CustomProbabilityThresholdClassifier(C=1.0, class_weight=None,
                                     classifier=LogisticRegression(C=1.0,
                                                                   class_weight=None,
                                                                   dual=False,
                                                                   fit_intercept=True,
                                                                   intercept_scaling=1,
                                                                   l1_ratio=None,
                                                                   max_iter=1000,
                                                                   multi_class='auto',
                                                                   n_jobs=None,
                                                                   penalty='l2',
                                                                   random_state=123,
                                                                   solver='lbfgs',
                                                                   tol=0.0001,
                                                                   verbose=0,
                                                                   warm_start=False),
                                     dual=False, fit_intercept=True,
                                     intercept_scaling=1, l1_ratio=None,
                                     max_iter=1000, multi_class='auto',
                                     n_jobs=None, penalty='l2',
                                     probability_threshold=0.5,
                                     random_state=123, solver='lbfgs',
                                     tol=0.0001, verbose=0, warm_start=False)
2023-05-13 18:26:44,244:INFO:create_model() successfully completed......................................
2023-05-13 18:26:44,421:INFO:SubProcess create_model() end ==================================
2023-05-13 18:26:44,421:INFO:Creating metrics dataframe
2023-05-13 18:26:44,435:INFO:Initializing K Neighbors Classifier
2023-05-13 18:26:44,435:INFO:Total runtime is 0.027659189701080323 minutes
2023-05-13 18:26:44,441:INFO:SubProcess create_model() called ==================================
2023-05-13 18:26:44,441:INFO:Initializing create_model()
2023-05-13 18:26:44,442:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002CF56CEAE20>, estimator=knn, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=0.5, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002CF4C884CD0>, model_only=True, return_train_score=False, kwargs={})
2023-05-13 18:26:44,442:INFO:Checking exceptions
2023-05-13 18:26:44,442:INFO:Importing libraries
2023-05-13 18:26:44,443:INFO:Copying training dataset
2023-05-13 18:26:44,466:INFO:Defining folds
2023-05-13 18:26:44,466:INFO:Declaring metric variables
2023-05-13 18:26:44,471:INFO:Importing untrained model
2023-05-13 18:26:44,477:INFO:K Neighbors Classifier Imported successfully
2023-05-13 18:26:44,497:INFO:Cross validation set to False
2023-05-13 18:26:44,497:INFO:Fitting Model
2023-05-13 18:26:45,325:INFO:Initializing predict_model()
2023-05-13 18:26:45,326:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002CF56CEAE20>, estimator=Pipeline(memory=FastMemory(location=C:\Users\camil\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('date_feature_extractor',
                 TransformerWrapper(exclude=None,
                                    include=['Fecha.Expedicion',
                                             'Fecha.Proceso'],
                                    transformer=ExtractDateTimeFeatures(features=['day',
                                                                                  'month'...
                ('actual_estimator',
                 CustomProbabilityThresholdClassifier(algorithm='auto',
                                                      classifier=KNeighborsClassifier(algorithm='auto',
                                                                                      leaf_size=30,
                                                                                      metric='minkowski',
                                                                                      metric_params=None,
                                                                                      n_jobs=-1,
                                                                                      n_neighbors=5,
                                                                                      p=2,
                                                                                      weights='uniform'),
                                                      leaf_size=30,
                                                      metric='minkowski',
                                                      metric_params=None,
                                                      n_jobs=-1, n_neighbors=5,
                                                      p=2,
                                                      probability_threshold=0.5,
                                                      weights='uniform'))],
         verbose=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x000002CF51A93CA0>)
2023-05-13 18:26:45,326:INFO:Checking exceptions
2023-05-13 18:26:45,326:INFO:Preloading libraries
2023-05-13 18:26:49,569:INFO:_display_container: 3
2023-05-13 18:26:49,595:INFO:CustomProbabilityThresholdClassifier(algorithm='auto',
                                     classifier=KNeighborsClassifier(algorithm='auto',
                                                                     leaf_size=30,
                                                                     metric='minkowski',
                                                                     metric_params=None,
                                                                     n_jobs=-1,
                                                                     n_neighbors=5,
                                                                     p=2,
                                                                     weights='uniform'),
                                     leaf_size=30, metric='minkowski',
                                     metric_params=None, n_jobs=-1,
                                     n_neighbors=5, p=2,
                                     probability_threshold=0.5,
                                     weights='uniform')
2023-05-13 18:26:49,595:INFO:create_model() successfully completed......................................
2023-05-13 18:26:49,770:INFO:SubProcess create_model() end ==================================
2023-05-13 18:26:49,771:INFO:Creating metrics dataframe
2023-05-13 18:26:49,786:INFO:Initializing Naive Bayes
2023-05-13 18:26:49,786:INFO:Total runtime is 0.11684903701146443 minutes
2023-05-13 18:26:49,792:INFO:SubProcess create_model() called ==================================
2023-05-13 18:26:49,793:INFO:Initializing create_model()
2023-05-13 18:26:49,793:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002CF56CEAE20>, estimator=nb, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=0.5, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002CF4C884CD0>, model_only=True, return_train_score=False, kwargs={})
2023-05-13 18:26:49,793:INFO:Checking exceptions
2023-05-13 18:26:49,793:INFO:Importing libraries
2023-05-13 18:26:49,793:INFO:Copying training dataset
2023-05-13 18:26:49,815:INFO:Defining folds
2023-05-13 18:26:49,815:INFO:Declaring metric variables
2023-05-13 18:26:49,822:INFO:Importing untrained model
2023-05-13 18:26:49,828:INFO:Naive Bayes Imported successfully
2023-05-13 18:26:49,848:INFO:Cross validation set to False
2023-05-13 18:26:49,848:INFO:Fitting Model
2023-05-13 18:26:50,703:INFO:Initializing predict_model()
2023-05-13 18:26:50,703:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002CF56CEAE20>, estimator=Pipeline(memory=FastMemory(location=C:\Users\camil\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('date_feature_extractor',
                 TransformerWrapper(exclude=None,
                                    include=['Fecha.Expedicion',
                                             'Fecha.Proceso'],
                                    transformer=ExtractDateTimeFeatures(features=['day',
                                                                                  'month'...
                                                               with_mean=True,
                                                               with_std=True))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+'))),
                ('actual_estimator',
                 CustomProbabilityThresholdClassifier(classifier=GaussianNB(priors=None,
                                                                            var_smoothing=1e-09),
                                                      priors=None,
                                                      probability_threshold=0.5,
                                                      var_smoothing=1e-09))],
         verbose=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x000002CF51A93C10>)
2023-05-13 18:26:50,703:INFO:Checking exceptions
2023-05-13 18:26:50,704:INFO:Preloading libraries
2023-05-13 18:26:51,212:INFO:_display_container: 3
2023-05-13 18:26:51,236:INFO:CustomProbabilityThresholdClassifier(classifier=GaussianNB(priors=None,
                                                           var_smoothing=1e-09),
                                     priors=None, probability_threshold=0.5,
                                     var_smoothing=1e-09)
2023-05-13 18:26:51,236:INFO:create_model() successfully completed......................................
2023-05-13 18:26:51,410:INFO:SubProcess create_model() end ==================================
2023-05-13 18:26:51,410:INFO:Creating metrics dataframe
2023-05-13 18:26:51,425:INFO:Initializing Decision Tree Classifier
2023-05-13 18:26:51,425:INFO:Total runtime is 0.14416260719299315 minutes
2023-05-13 18:26:51,432:INFO:SubProcess create_model() called ==================================
2023-05-13 18:26:51,432:INFO:Initializing create_model()
2023-05-13 18:26:51,432:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002CF56CEAE20>, estimator=dt, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=0.5, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002CF4C884CD0>, model_only=True, return_train_score=False, kwargs={})
2023-05-13 18:26:51,432:INFO:Checking exceptions
2023-05-13 18:26:51,432:INFO:Importing libraries
2023-05-13 18:26:51,432:INFO:Copying training dataset
2023-05-13 18:26:51,455:INFO:Defining folds
2023-05-13 18:26:51,455:INFO:Declaring metric variables
2023-05-13 18:26:51,463:INFO:Importing untrained model
2023-05-13 18:26:51,468:INFO:Decision Tree Classifier Imported successfully
2023-05-13 18:26:51,489:INFO:Cross validation set to False
2023-05-13 18:26:51,489:INFO:Fitting Model
2023-05-13 18:26:52,326:INFO:Initializing predict_model()
2023-05-13 18:26:52,327:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002CF56CEAE20>, estimator=Pipeline(memory=FastMemory(location=C:\Users\camil\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('date_feature_extractor',
                 TransformerWrapper(exclude=None,
                                    include=['Fecha.Expedicion',
                                             'Fecha.Proceso'],
                                    transformer=ExtractDateTimeFeatures(features=['day',
                                                                                  'month'...
                                                                                        min_impurity_decrease=0.0,
                                                                                        min_samples_leaf=1,
                                                                                        min_samples_split=2,
                                                                                        min_weight_fraction_leaf=0.0,
                                                                                        random_state=123,
                                                                                        splitter='best'),
                                                      criterion='gini',
                                                      max_depth=None,
                                                      max_features=None,
                                                      max_leaf_nodes=None,
                                                      min_impurity_decrease=0.0,
                                                      min_samples_leaf=1,
                                                      min_samples_split=2,
                                                      min_weight_fraction_leaf=0.0,
                                                      probability_threshold=0.5,
                                                      random_state=123,
                                                      splitter='best'))],
         verbose=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x000002CF51A93E50>)
2023-05-13 18:26:52,328:INFO:Checking exceptions
2023-05-13 18:26:52,328:INFO:Preloading libraries
2023-05-13 18:26:52,787:INFO:_display_container: 3
2023-05-13 18:26:52,811:INFO:CustomProbabilityThresholdClassifier(ccp_alpha=0.0, class_weight=None,
                                     classifier=DecisionTreeClassifier(ccp_alpha=0.0,
                                                                       class_weight=None,
                                                                       criterion='gini',
                                                                       max_depth=None,
                                                                       max_features=None,
                                                                       max_leaf_nodes=None,
                                                                       min_impurity_decrease=0.0,
                                                                       min_samples_leaf=1,
                                                                       min_samples_split=2,
                                                                       min_weight_fraction_leaf=0.0,
                                                                       random_state=123,
                                                                       splitter='best'),
                                     criterion='gini', max_depth=None,
                                     max_features=None, max_leaf_nodes=None,
                                     min_impurity_decrease=0.0,
                                     min_samples_leaf=1, min_samples_split=2,
                                     min_weight_fraction_leaf=0.0,
                                     probability_threshold=0.5,
                                     random_state=123, splitter='best')
2023-05-13 18:26:52,811:INFO:create_model() successfully completed......................................
2023-05-13 18:26:52,986:INFO:SubProcess create_model() end ==================================
2023-05-13 18:26:52,986:INFO:Creating metrics dataframe
2023-05-13 18:26:53,001:INFO:Initializing SVM - Linear Kernel
2023-05-13 18:26:53,001:INFO:Total runtime is 0.17043673594792683 minutes
2023-05-13 18:26:53,006:INFO:SubProcess create_model() called ==================================
2023-05-13 18:26:53,007:INFO:Initializing create_model()
2023-05-13 18:26:53,007:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002CF56CEAE20>, estimator=svm, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=0.5, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002CF4C884CD0>, model_only=True, return_train_score=False, kwargs={})
2023-05-13 18:26:53,008:INFO:Checking exceptions
2023-05-13 18:26:53,008:INFO:Importing libraries
2023-05-13 18:26:53,008:INFO:Copying training dataset
2023-05-13 18:26:53,032:INFO:Defining folds
2023-05-13 18:26:53,032:INFO:Declaring metric variables
2023-05-13 18:26:53,037:INFO:Importing untrained model
2023-05-13 18:26:53,045:INFO:SVM - Linear Kernel Imported successfully
2023-05-13 18:26:53,065:INFO:Cross validation set to False
2023-05-13 18:26:53,065:INFO:Fitting Model
2023-05-13 18:26:54,030:INFO:Initializing predict_model()
2023-05-13 18:26:54,031:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002CF56CEAE20>, estimator=Pipeline(memory=FastMemory(location=C:\Users\camil\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('date_feature_extractor',
                 TransformerWrapper(exclude=None,
                                    include=['Fecha.Expedicion',
                                             'Fecha.Proceso'],
                                    transformer=ExtractDateTimeFeatures(features=['day',
                                                                                  'month'...
                                                                               validation_fraction=0.1,
                                                                               verbose=0,
                                                                               warm_start=False),
                                                      early_stopping=False,
                                                      epsilon=0.1, eta0=0.001,
                                                      fit_intercept=True,
                                                      l1_ratio=0.15,
                                                      learning_rate='optimal',
                                                      loss='hinge',
                                                      max_iter=1000,
                                                      n_iter_no_change=5,
                                                      n_jobs=-1, penalty='l2',
                                                      power_t=0.5,
                                                      probability_threshold=0.5,
                                                      random_state=123,
                                                      shuffle=True, tol=0.001,
                                                      validation_fraction=0.1,
                                                      verbose=0,
                                                      warm_start=False))],
         verbose=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x000002CF51A930D0>)
2023-05-13 18:26:54,031:INFO:Checking exceptions
2023-05-13 18:26:54,032:INFO:Preloading libraries
2023-05-13 18:26:54,483:INFO:_display_container: 3
2023-05-13 18:26:54,510:INFO:CustomProbabilityThresholdClassifier(alpha=0.0001, average=False,
                                     class_weight=None,
                                     classifier=SGDClassifier(alpha=0.0001,
                                                              average=False,
                                                              class_weight=None,
                                                              early_stopping=False,
                                                              epsilon=0.1,
                                                              eta0=0.001,
                                                              fit_intercept=True,
                                                              l1_ratio=0.15,
                                                              learning_rate='optimal',
                                                              loss='hinge',
                                                              max_iter=1000,
                                                              n_iter_no_change=5,
                                                              n_jobs=-1,
                                                              penalty='l2',
                                                              power_t=0.5,
                                                              random_state=123...
                                                              validation_fraction=0.1,
                                                              verbose=0,
                                                              warm_start=False),
                                     early_stopping=False, epsilon=0.1,
                                     eta0=0.001, fit_intercept=True,
                                     l1_ratio=0.15, learning_rate='optimal',
                                     loss='hinge', max_iter=1000,
                                     n_iter_no_change=5, n_jobs=-1,
                                     penalty='l2', power_t=0.5,
                                     probability_threshold=0.5,
                                     random_state=123, shuffle=True, tol=0.001,
                                     validation_fraction=0.1, verbose=0,
                                     warm_start=False)
2023-05-13 18:26:54,511:INFO:create_model() successfully completed......................................
2023-05-13 18:26:54,686:INFO:SubProcess create_model() end ==================================
2023-05-13 18:26:54,686:INFO:Creating metrics dataframe
2023-05-13 18:26:54,703:INFO:Initializing Ridge Classifier
2023-05-13 18:26:54,703:INFO:Total runtime is 0.19880318244298298 minutes
2023-05-13 18:26:54,709:INFO:SubProcess create_model() called ==================================
2023-05-13 18:26:54,709:INFO:Initializing create_model()
2023-05-13 18:26:54,710:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002CF56CEAE20>, estimator=ridge, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=0.5, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002CF4C884CD0>, model_only=True, return_train_score=False, kwargs={})
2023-05-13 18:26:54,710:INFO:Checking exceptions
2023-05-13 18:26:54,710:INFO:Importing libraries
2023-05-13 18:26:54,710:INFO:Copying training dataset
2023-05-13 18:26:54,732:INFO:Defining folds
2023-05-13 18:26:54,732:INFO:Declaring metric variables
2023-05-13 18:26:54,738:INFO:Importing untrained model
2023-05-13 18:26:54,745:INFO:Ridge Classifier Imported successfully
2023-05-13 18:26:54,766:INFO:Cross validation set to False
2023-05-13 18:26:54,766:INFO:Fitting Model
2023-05-13 18:26:55,639:INFO:Initializing predict_model()
2023-05-13 18:26:55,639:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002CF56CEAE20>, estimator=Pipeline(memory=FastMemory(location=C:\Users\camil\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('date_feature_extractor',
                 TransformerWrapper(exclude=None,
                                    include=['Fecha.Expedicion',
                                             'Fecha.Proceso'],
                                    transformer=ExtractDateTimeFeatures(features=['day',
                                                                                  'month'...
                 CustomProbabilityThresholdClassifier(alpha=1.0,
                                                      class_weight=None,
                                                      classifier=RidgeClassifier(alpha=1.0,
                                                                                 class_weight=None,
                                                                                 copy_X=True,
                                                                                 fit_intercept=True,
                                                                                 max_iter=None,
                                                                                 positive=False,
                                                                                 random_state=123,
                                                                                 solver='auto',
                                                                                 tol=0.0001),
                                                      copy_X=True,
                                                      fit_intercept=True,
                                                      max_iter=None,
                                                      positive=False,
                                                      probability_threshold=0.5,
                                                      random_state=123,
                                                      solver='auto',
                                                      tol=0.0001))],
         verbose=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x000002CF51A93CA0>)
2023-05-13 18:26:55,639:INFO:Checking exceptions
2023-05-13 18:26:55,639:INFO:Preloading libraries
2023-05-13 18:26:56,082:INFO:_display_container: 3
2023-05-13 18:26:56,107:INFO:CustomProbabilityThresholdClassifier(alpha=1.0, class_weight=None,
                                     classifier=RidgeClassifier(alpha=1.0,
                                                                class_weight=None,
                                                                copy_X=True,
                                                                fit_intercept=True,
                                                                max_iter=None,
                                                                positive=False,
                                                                random_state=123,
                                                                solver='auto',
                                                                tol=0.0001),
                                     copy_X=True, fit_intercept=True,
                                     max_iter=None, positive=False,
                                     probability_threshold=0.5,
                                     random_state=123, solver='auto',
                                     tol=0.0001)
2023-05-13 18:26:56,108:INFO:create_model() successfully completed......................................
2023-05-13 18:26:56,301:INFO:SubProcess create_model() end ==================================
2023-05-13 18:26:56,301:INFO:Creating metrics dataframe
2023-05-13 18:26:56,318:INFO:Initializing Random Forest Classifier
2023-05-13 18:26:56,318:INFO:Total runtime is 0.2257157286008199 minutes
2023-05-13 18:26:56,325:INFO:SubProcess create_model() called ==================================
2023-05-13 18:26:56,326:INFO:Initializing create_model()
2023-05-13 18:26:56,327:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002CF56CEAE20>, estimator=rf, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=0.5, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002CF4C884CD0>, model_only=True, return_train_score=False, kwargs={})
2023-05-13 18:26:56,327:INFO:Checking exceptions
2023-05-13 18:26:56,327:INFO:Importing libraries
2023-05-13 18:26:56,327:INFO:Copying training dataset
2023-05-13 18:26:56,349:INFO:Defining folds
2023-05-13 18:26:56,349:INFO:Declaring metric variables
2023-05-13 18:26:56,355:INFO:Importing untrained model
2023-05-13 18:26:56,361:INFO:Random Forest Classifier Imported successfully
2023-05-13 18:26:56,389:INFO:Cross validation set to False
2023-05-13 18:26:56,389:INFO:Fitting Model
2023-05-13 18:26:57,241:INFO:Initializing predict_model()
2023-05-13 18:26:57,241:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002CF56CEAE20>, estimator=Pipeline(memory=FastMemory(location=C:\Users\camil\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('date_feature_extractor',
                 TransformerWrapper(exclude=None,
                                    include=['Fecha.Expedicion',
                                             'Fecha.Proceso'],
                                    transformer=ExtractDateTimeFeatures(features=['day',
                                                                                  'month'...
                                                                                        random_state=123,
                                                                                        verbose=0,
                                                                                        warm_start=False),
                                                      criterion='gini',
                                                      max_depth=None,
                                                      max_features='sqrt',
                                                      max_leaf_nodes=None,
                                                      max_samples=None,
                                                      min_impurity_decrease=0.0,
                                                      min_samples_leaf=1,
                                                      min_samples_split=2,
                                                      min_weight_fraction_leaf=0.0,
                                                      n_estimators=100,
                                                      n_jobs=-1,
                                                      oob_score=False,
                                                      probability_threshold=0.5,
                                                      random_state=123,
                                                      verbose=0,
                                                      warm_start=False))],
         verbose=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x000002CF51A93A60>)
2023-05-13 18:26:57,242:INFO:Checking exceptions
2023-05-13 18:26:57,242:INFO:Preloading libraries
2023-05-13 18:26:57,816:INFO:_display_container: 3
2023-05-13 18:26:57,842:INFO:CustomProbabilityThresholdClassifier(bootstrap=True, ccp_alpha=0.0,
                                     class_weight=None,
                                     classifier=RandomForestClassifier(bootstrap=True,
                                                                       ccp_alpha=0.0,
                                                                       class_weight=None,
                                                                       criterion='gini',
                                                                       max_depth=None,
                                                                       max_features='sqrt',
                                                                       max_leaf_nodes=None,
                                                                       max_samples=None,
                                                                       min_impurity_decrease=0.0,
                                                                       min_samples_leaf=1,
                                                                       min_samples_split=2,
                                                                       min_weight_fraction_leaf=0.0,
                                                                       n_...
                                                                       oob_score=False,
                                                                       random_state=123,
                                                                       verbose=0,
                                                                       warm_start=False),
                                     criterion='gini', max_depth=None,
                                     max_features='sqrt', max_leaf_nodes=None,
                                     max_samples=None,
                                     min_impurity_decrease=0.0,
                                     min_samples_leaf=1, min_samples_split=2,
                                     min_weight_fraction_leaf=0.0,
                                     n_estimators=100, n_jobs=-1,
                                     oob_score=False, probability_threshold=0.5,
                                     random_state=123, verbose=0,
                                     warm_start=False)
2023-05-13 18:26:57,842:INFO:create_model() successfully completed......................................
2023-05-13 18:26:58,015:INFO:SubProcess create_model() end ==================================
2023-05-13 18:26:58,016:INFO:Creating metrics dataframe
2023-05-13 18:26:58,035:INFO:Initializing Quadratic Discriminant Analysis
2023-05-13 18:26:58,036:INFO:Total runtime is 0.25435170729955037 minutes
2023-05-13 18:26:58,042:INFO:SubProcess create_model() called ==================================
2023-05-13 18:26:58,043:INFO:Initializing create_model()
2023-05-13 18:26:58,043:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002CF56CEAE20>, estimator=qda, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=0.5, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002CF4C884CD0>, model_only=True, return_train_score=False, kwargs={})
2023-05-13 18:26:58,043:INFO:Checking exceptions
2023-05-13 18:26:58,043:INFO:Importing libraries
2023-05-13 18:26:58,043:INFO:Copying training dataset
2023-05-13 18:26:58,065:INFO:Defining folds
2023-05-13 18:26:58,065:INFO:Declaring metric variables
2023-05-13 18:26:58,071:INFO:Importing untrained model
2023-05-13 18:26:58,077:INFO:Quadratic Discriminant Analysis Imported successfully
2023-05-13 18:26:58,098:INFO:Cross validation set to False
2023-05-13 18:26:58,098:INFO:Fitting Model
2023-05-13 18:26:58,929:WARNING:c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-05-13 18:26:59,137:INFO:Initializing predict_model()
2023-05-13 18:26:59,137:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002CF56CEAE20>, estimator=Pipeline(memory=FastMemory(location=C:\Users\camil\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('date_feature_extractor',
                 TransformerWrapper(exclude=None,
                                    include=['Fecha.Expedicion',
                                             'Fecha.Proceso'],
                                    transformer=ExtractDateTimeFeatures(features=['day',
                                                                                  'month'...
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+'))),
                ('actual_estimator',
                 CustomProbabilityThresholdClassifier(classifier=QuadraticDiscriminantAnalysis(priors=None,
                                                                                               reg_param=0.0,
                                                                                               store_covariance=False,
                                                                                               tol=0.0001),
                                                      priors=None,
                                                      probability_threshold=0.5,
                                                      reg_param=0.0,
                                                      store_covariance=False,
                                                      tol=0.0001))],
         verbose=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x000002CF4F355F70>)
2023-05-13 18:26:59,137:INFO:Checking exceptions
2023-05-13 18:26:59,138:INFO:Preloading libraries
2023-05-13 18:26:59,640:INFO:_display_container: 3
2023-05-13 18:26:59,665:INFO:CustomProbabilityThresholdClassifier(classifier=QuadraticDiscriminantAnalysis(priors=None,
                                                                              reg_param=0.0,
                                                                              store_covariance=False,
                                                                              tol=0.0001),
                                     priors=None, probability_threshold=0.5,
                                     reg_param=0.0, store_covariance=False,
                                     tol=0.0001)
2023-05-13 18:26:59,665:INFO:create_model() successfully completed......................................
2023-05-13 18:26:59,836:INFO:SubProcess create_model() end ==================================
2023-05-13 18:26:59,836:INFO:Creating metrics dataframe
2023-05-13 18:26:59,858:INFO:Initializing Ada Boost Classifier
2023-05-13 18:26:59,858:INFO:Total runtime is 0.2847055435180664 minutes
2023-05-13 18:26:59,863:INFO:SubProcess create_model() called ==================================
2023-05-13 18:26:59,864:INFO:Initializing create_model()
2023-05-13 18:26:59,865:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002CF56CEAE20>, estimator=ada, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=0.5, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002CF4C884CD0>, model_only=True, return_train_score=False, kwargs={})
2023-05-13 18:26:59,865:INFO:Checking exceptions
2023-05-13 18:26:59,865:INFO:Importing libraries
2023-05-13 18:26:59,865:INFO:Copying training dataset
2023-05-13 18:26:59,885:INFO:Defining folds
2023-05-13 18:26:59,885:INFO:Declaring metric variables
2023-05-13 18:26:59,892:INFO:Importing untrained model
2023-05-13 18:26:59,899:INFO:Ada Boost Classifier Imported successfully
2023-05-13 18:26:59,920:INFO:Cross validation set to False
2023-05-13 18:26:59,921:INFO:Fitting Model
2023-05-13 18:27:08,603:INFO:Initializing predict_model()
2023-05-13 18:27:08,603:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002CF56CEAE20>, estimator=Pipeline(memory=FastMemory(location=C:\Users\camil\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('date_feature_extractor',
                 TransformerWrapper(exclude=None,
                                    include=['Fecha.Expedicion',
                                             'Fecha.Proceso'],
                                    transformer=ExtractDateTimeFeatures(features=['day',
                                                                                  'month'...
                ('actual_estimator',
                 CustomProbabilityThresholdClassifier(algorithm='SAMME.R',
                                                      base_estimator='deprecated',
                                                      classifier=AdaBoostClassifier(algorithm='SAMME.R',
                                                                                    base_estimator='deprecated',
                                                                                    estimator=None,
                                                                                    learning_rate=1.0,
                                                                                    n_estimators=50,
                                                                                    random_state=123),
                                                      estimator=None,
                                                      learning_rate=1.0,
                                                      n_estimators=50,
                                                      probability_threshold=0.5,
                                                      random_state=123))],
         verbose=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x000002CF570BBB80>)
2023-05-13 18:27:08,603:INFO:Checking exceptions
2023-05-13 18:27:08,603:INFO:Preloading libraries
2023-05-13 18:27:09,487:INFO:_display_container: 3
2023-05-13 18:27:09,513:INFO:CustomProbabilityThresholdClassifier(algorithm='SAMME.R',
                                     base_estimator='deprecated',
                                     classifier=AdaBoostClassifier(algorithm='SAMME.R',
                                                                   base_estimator='deprecated',
                                                                   estimator=None,
                                                                   learning_rate=1.0,
                                                                   n_estimators=50,
                                                                   random_state=123),
                                     estimator=None, learning_rate=1.0,
                                     n_estimators=50, probability_threshold=0.5,
                                     random_state=123)
2023-05-13 18:27:09,513:INFO:create_model() successfully completed......................................
2023-05-13 18:27:09,686:INFO:SubProcess create_model() end ==================================
2023-05-13 18:27:09,687:INFO:Creating metrics dataframe
2023-05-13 18:27:09,708:INFO:Initializing Gradient Boosting Classifier
2023-05-13 18:27:09,708:INFO:Total runtime is 0.44887822469075517 minutes
2023-05-13 18:27:09,715:INFO:SubProcess create_model() called ==================================
2023-05-13 18:27:09,715:INFO:Initializing create_model()
2023-05-13 18:27:09,715:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002CF56CEAE20>, estimator=gbc, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=0.5, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002CF4C884CD0>, model_only=True, return_train_score=False, kwargs={})
2023-05-13 18:27:09,715:INFO:Checking exceptions
2023-05-13 18:27:09,715:INFO:Importing libraries
2023-05-13 18:27:09,715:INFO:Copying training dataset
2023-05-13 18:27:09,738:INFO:Defining folds
2023-05-13 18:27:09,739:INFO:Declaring metric variables
2023-05-13 18:27:09,744:INFO:Importing untrained model
2023-05-13 18:27:09,750:INFO:Gradient Boosting Classifier Imported successfully
2023-05-13 18:27:09,770:INFO:Cross validation set to False
2023-05-13 18:27:09,770:INFO:Fitting Model
2023-05-13 18:27:27,912:INFO:Initializing predict_model()
2023-05-13 18:27:27,912:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002CF56CEAE20>, estimator=Pipeline(memory=FastMemory(location=C:\Users\camil\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('date_feature_extractor',
                 TransformerWrapper(exclude=None,
                                    include=['Fecha.Expedicion',
                                             'Fecha.Proceso'],
                                    transformer=ExtractDateTimeFeatures(features=['day',
                                                                                  'month'...
                                                      learning_rate=0.1,
                                                      loss='log_loss',
                                                      max_depth=3,
                                                      max_features=None,
                                                      max_leaf_nodes=None,
                                                      min_impurity_decrease=0.0,
                                                      min_samples_leaf=1,
                                                      min_samples_split=2,
                                                      min_weight_fraction_leaf=0.0,
                                                      n_estimators=100,
                                                      n_iter_no_change=None,
                                                      probability_threshold=0.5,
                                                      random_state=123,
                                                      subsample=1.0, tol=0.0001,
                                                      validation_fraction=0.1,
                                                      verbose=0,
                                                      warm_start=False))],
         verbose=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x000002CF51B73C10>)
2023-05-13 18:27:27,912:INFO:Checking exceptions
2023-05-13 18:27:27,912:INFO:Preloading libraries
2023-05-13 18:27:28,398:INFO:_display_container: 3
2023-05-13 18:27:28,426:INFO:CustomProbabilityThresholdClassifier(ccp_alpha=0.0,
                                     classifier=GradientBoostingClassifier(ccp_alpha=0.0,
                                                                           criterion='friedman_mse',
                                                                           init=None,
                                                                           learning_rate=0.1,
                                                                           loss='log_loss',
                                                                           max_depth=3,
                                                                           max_features=None,
                                                                           max_leaf_nodes=None,
                                                                           min_impurity_decrease=0.0,
                                                                           min_samples_leaf=1,
                                                                           min_samples_split=2,
                                                                           min_weight_fraction_leaf=0.0,
                                                                           n_estimators=100,
                                                                           n_iter_no_change=...
                                     criterion='friedman_mse', init=None,
                                     learning_rate=0.1, loss='log_loss',
                                     max_depth=3, max_features=None,
                                     max_leaf_nodes=None,
                                     min_impurity_decrease=0.0,
                                     min_samples_leaf=1, min_samples_split=2,
                                     min_weight_fraction_leaf=0.0,
                                     n_estimators=100, n_iter_no_change=None,
                                     probability_threshold=0.5,
                                     random_state=123, subsample=1.0,
                                     tol=0.0001, validation_fraction=0.1,
                                     verbose=0, warm_start=False)
2023-05-13 18:27:28,426:INFO:create_model() successfully completed......................................
2023-05-13 18:27:28,602:INFO:SubProcess create_model() end ==================================
2023-05-13 18:27:28,602:INFO:Creating metrics dataframe
2023-05-13 18:27:28,620:INFO:Initializing Linear Discriminant Analysis
2023-05-13 18:27:28,620:INFO:Total runtime is 0.764075231552124 minutes
2023-05-13 18:27:28,629:INFO:SubProcess create_model() called ==================================
2023-05-13 18:27:28,629:INFO:Initializing create_model()
2023-05-13 18:27:28,629:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002CF56CEAE20>, estimator=lda, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=0.5, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002CF4C884CD0>, model_only=True, return_train_score=False, kwargs={})
2023-05-13 18:27:28,629:INFO:Checking exceptions
2023-05-13 18:27:28,630:INFO:Importing libraries
2023-05-13 18:27:28,630:INFO:Copying training dataset
2023-05-13 18:27:28,653:INFO:Defining folds
2023-05-13 18:27:28,653:INFO:Declaring metric variables
2023-05-13 18:27:28,661:INFO:Importing untrained model
2023-05-13 18:27:28,667:INFO:Linear Discriminant Analysis Imported successfully
2023-05-13 18:27:28,688:INFO:Cross validation set to False
2023-05-13 18:27:28,688:INFO:Fitting Model
2023-05-13 18:27:30,044:INFO:Initializing predict_model()
2023-05-13 18:27:30,044:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002CF56CEAE20>, estimator=Pipeline(memory=FastMemory(location=C:\Users\camil\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('date_feature_extractor',
                 TransformerWrapper(exclude=None,
                                    include=['Fecha.Expedicion',
                                             'Fecha.Proceso'],
                                    transformer=ExtractDateTimeFeatures(features=['day',
                                                                                  'month'...
                 CustomProbabilityThresholdClassifier(classifier=LinearDiscriminantAnalysis(covariance_estimator=None,
                                                                                            n_components=None,
                                                                                            priors=None,
                                                                                            shrinkage=None,
                                                                                            solver='svd',
                                                                                            store_covariance=False,
                                                                                            tol=0.0001),
                                                      covariance_estimator=None,
                                                      n_components=None,
                                                      priors=None,
                                                      probability_threshold=0.5,
                                                      shrinkage=None,
                                                      solver='svd',
                                                      store_covariance=False,
                                                      tol=0.0001))],
         verbose=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x000002CF4F355EE0>)
2023-05-13 18:27:30,044:INFO:Checking exceptions
2023-05-13 18:27:30,045:INFO:Preloading libraries
2023-05-13 18:27:30,532:INFO:_display_container: 3
2023-05-13 18:27:30,560:INFO:CustomProbabilityThresholdClassifier(classifier=LinearDiscriminantAnalysis(covariance_estimator=None,
                                                                           n_components=None,
                                                                           priors=None,
                                                                           shrinkage=None,
                                                                           solver='svd',
                                                                           store_covariance=False,
                                                                           tol=0.0001),
                                     covariance_estimator=None,
                                     n_components=None, priors=None,
                                     probability_threshold=0.5, shrinkage=None,
                                     solver='svd', store_covariance=False,
                                     tol=0.0001)
2023-05-13 18:27:30,560:INFO:create_model() successfully completed......................................
2023-05-13 18:27:30,736:INFO:SubProcess create_model() end ==================================
2023-05-13 18:27:30,736:INFO:Creating metrics dataframe
2023-05-13 18:27:30,755:INFO:Initializing Extra Trees Classifier
2023-05-13 18:27:30,755:INFO:Total runtime is 0.7996667861938476 minutes
2023-05-13 18:27:30,760:INFO:SubProcess create_model() called ==================================
2023-05-13 18:27:30,761:INFO:Initializing create_model()
2023-05-13 18:27:30,761:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002CF56CEAE20>, estimator=et, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=0.5, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002CF4C884CD0>, model_only=True, return_train_score=False, kwargs={})
2023-05-13 18:27:30,761:INFO:Checking exceptions
2023-05-13 18:27:30,761:INFO:Importing libraries
2023-05-13 18:27:30,761:INFO:Copying training dataset
2023-05-13 18:27:30,784:INFO:Defining folds
2023-05-13 18:27:30,784:INFO:Declaring metric variables
2023-05-13 18:27:30,792:INFO:Importing untrained model
2023-05-13 18:27:30,798:INFO:Extra Trees Classifier Imported successfully
2023-05-13 18:27:30,818:INFO:Cross validation set to False
2023-05-13 18:27:30,819:INFO:Fitting Model
2023-05-13 18:27:32,929:INFO:Initializing predict_model()
2023-05-13 18:27:32,930:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002CF56CEAE20>, estimator=Pipeline(memory=FastMemory(location=C:\Users\camil\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('date_feature_extractor',
                 TransformerWrapper(exclude=None,
                                    include=['Fecha.Expedicion',
                                             'Fecha.Proceso'],
                                    transformer=ExtractDateTimeFeatures(features=['day',
                                                                                  'month'...
                                                                                      random_state=123,
                                                                                      verbose=0,
                                                                                      warm_start=False),
                                                      criterion='gini',
                                                      max_depth=None,
                                                      max_features='sqrt',
                                                      max_leaf_nodes=None,
                                                      max_samples=None,
                                                      min_impurity_decrease=0.0,
                                                      min_samples_leaf=1,
                                                      min_samples_split=2,
                                                      min_weight_fraction_leaf=0.0,
                                                      n_estimators=100,
                                                      n_jobs=-1,
                                                      oob_score=False,
                                                      probability_threshold=0.5,
                                                      random_state=123,
                                                      verbose=0,
                                                      warm_start=False))],
         verbose=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x000002CF51B73940>)
2023-05-13 18:27:32,930:INFO:Checking exceptions
2023-05-13 18:27:32,930:INFO:Preloading libraries
2023-05-13 18:27:33,518:INFO:_display_container: 3
2023-05-13 18:27:33,547:INFO:CustomProbabilityThresholdClassifier(bootstrap=False, ccp_alpha=0.0,
                                     class_weight=None,
                                     classifier=ExtraTreesClassifier(bootstrap=False,
                                                                     ccp_alpha=0.0,
                                                                     class_weight=None,
                                                                     criterion='gini',
                                                                     max_depth=None,
                                                                     max_features='sqrt',
                                                                     max_leaf_nodes=None,
                                                                     max_samples=None,
                                                                     min_impurity_decrease=0.0,
                                                                     min_samples_leaf=1,
                                                                     min_samples_split=2,
                                                                     min_weight_fraction_leaf=0.0,
                                                                     n_...
                                                                     oob_score=False,
                                                                     random_state=123,
                                                                     verbose=0,
                                                                     warm_start=False),
                                     criterion='gini', max_depth=None,
                                     max_features='sqrt', max_leaf_nodes=None,
                                     max_samples=None,
                                     min_impurity_decrease=0.0,
                                     min_samples_leaf=1, min_samples_split=2,
                                     min_weight_fraction_leaf=0.0,
                                     n_estimators=100, n_jobs=-1,
                                     oob_score=False, probability_threshold=0.5,
                                     random_state=123, verbose=0,
                                     warm_start=False)
2023-05-13 18:27:33,547:INFO:create_model() successfully completed......................................
2023-05-13 18:27:33,720:INFO:SubProcess create_model() end ==================================
2023-05-13 18:27:33,720:INFO:Creating metrics dataframe
2023-05-13 18:27:33,741:INFO:Initializing Light Gradient Boosting Machine
2023-05-13 18:27:33,742:INFO:Total runtime is 0.8494422554969787 minutes
2023-05-13 18:27:33,748:INFO:SubProcess create_model() called ==================================
2023-05-13 18:27:33,748:INFO:Initializing create_model()
2023-05-13 18:27:33,748:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002CF56CEAE20>, estimator=lightgbm, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=0.5, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002CF4C884CD0>, model_only=True, return_train_score=False, kwargs={})
2023-05-13 18:27:33,748:INFO:Checking exceptions
2023-05-13 18:27:33,748:INFO:Importing libraries
2023-05-13 18:27:33,749:INFO:Copying training dataset
2023-05-13 18:27:33,772:INFO:Defining folds
2023-05-13 18:27:33,772:INFO:Declaring metric variables
2023-05-13 18:27:33,778:INFO:Importing untrained model
2023-05-13 18:27:33,783:INFO:Light Gradient Boosting Machine Imported successfully
2023-05-13 18:27:33,803:INFO:Cross validation set to False
2023-05-13 18:27:33,803:INFO:Fitting Model
2023-05-13 18:27:42,753:INFO:Initializing predict_model()
2023-05-13 18:27:42,754:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002CF56CEAE20>, estimator=Pipeline(memory=FastMemory(location=C:\Users\camil\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('date_feature_extractor',
                 TransformerWrapper(exclude=None,
                                    include=['Fecha.Expedicion',
                                             'Fecha.Proceso'],
                                    transformer=ExtractDateTimeFeatures(features=['day',
                                                                                  'month'...
                                                      colsample_bytree=1.0,
                                                      device='gpu',
                                                      importance_type='split',
                                                      learning_rate=0.1,
                                                      max_depth=-1,
                                                      min_child_samples=20,
                                                      min_child_weight=0.001,
                                                      min_split_gain=0.0,
                                                      n_estimators=100,
                                                      n_jobs=-1, num_leaves=31,
                                                      objective=None,
                                                      probability_threshold=0.5,
                                                      random_state=123,
                                                      reg_alpha=0.0,
                                                      reg_lambda=0.0,
                                                      silent='warn',
                                                      subsample=1.0,
                                                      subsample_for_bin=200000,
                                                      subsample_freq=0))],
         verbose=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x000002CF51B73C10>)
2023-05-13 18:27:42,754:INFO:Checking exceptions
2023-05-13 18:27:42,754:INFO:Preloading libraries
2023-05-13 18:27:43,347:INFO:_display_container: 3
2023-05-13 18:27:43,379:INFO:CustomProbabilityThresholdClassifier(boosting_type='gbdt', class_weight=None,
                                     classifier=LGBMClassifier(boosting_type='gbdt',
                                                               class_weight=None,
                                                               colsample_bytree=1.0,
                                                               device='gpu',
                                                               importance_type='split',
                                                               learning_rate=0.1,
                                                               max_depth=-1,
                                                               min_child_samples=20,
                                                               min_child_weight=0.001,
                                                               min_split_gain=0.0,
                                                               n_estimators=100,
                                                               n_jobs=-1,
                                                               num_leaves=31,
                                                               objective=None,
                                                               r...
                                     colsample_bytree=1.0, device='gpu',
                                     importance_type='split', learning_rate=0.1,
                                     max_depth=-1, min_child_samples=20,
                                     min_child_weight=0.001, min_split_gain=0.0,
                                     n_estimators=100, n_jobs=-1, num_leaves=31,
                                     objective=None, probability_threshold=0.5,
                                     random_state=123, reg_alpha=0.0,
                                     reg_lambda=0.0, silent='warn',
                                     subsample=1.0, subsample_for_bin=200000,
                                     subsample_freq=0)
2023-05-13 18:27:43,379:INFO:create_model() successfully completed......................................
2023-05-13 18:27:43,555:INFO:SubProcess create_model() end ==================================
2023-05-13 18:27:43,555:INFO:Creating metrics dataframe
2023-05-13 18:27:43,575:INFO:Initializing Dummy Classifier
2023-05-13 18:27:43,575:INFO:Total runtime is 1.0133219122886656 minutes
2023-05-13 18:27:43,579:INFO:SubProcess create_model() called ==================================
2023-05-13 18:27:43,580:INFO:Initializing create_model()
2023-05-13 18:27:43,580:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002CF56CEAE20>, estimator=dummy, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=0.5, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002CF4C884CD0>, model_only=True, return_train_score=False, kwargs={})
2023-05-13 18:27:43,580:INFO:Checking exceptions
2023-05-13 18:27:43,580:INFO:Importing libraries
2023-05-13 18:27:43,581:INFO:Copying training dataset
2023-05-13 18:27:43,604:INFO:Defining folds
2023-05-13 18:27:43,604:INFO:Declaring metric variables
2023-05-13 18:27:43,610:INFO:Importing untrained model
2023-05-13 18:27:43,617:INFO:Dummy Classifier Imported successfully
2023-05-13 18:27:43,637:INFO:Cross validation set to False
2023-05-13 18:27:43,637:INFO:Fitting Model
2023-05-13 18:27:44,444:INFO:Initializing predict_model()
2023-05-13 18:27:44,444:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002CF56CEAE20>, estimator=Pipeline(memory=FastMemory(location=C:\Users\camil\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('date_feature_extractor',
                 TransformerWrapper(exclude=None,
                                    include=['Fecha.Expedicion',
                                             'Fecha.Proceso'],
                                    transformer=ExtractDateTimeFeatures(features=['day',
                                                                                  'month'...
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+'))),
                ('actual_estimator',
                 CustomProbabilityThresholdClassifier(classifier=DummyClassifier(constant=None,
                                                                                 random_state=123,
                                                                                 strategy='prior'),
                                                      constant=None,
                                                      probability_threshold=0.5,
                                                      random_state=123,
                                                      strategy='prior'))],
         verbose=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x000002CF4F355DC0>)
2023-05-13 18:27:44,444:INFO:Checking exceptions
2023-05-13 18:27:44,444:INFO:Preloading libraries
2023-05-13 18:27:44,900:INFO:_display_container: 3
2023-05-13 18:27:44,929:INFO:CustomProbabilityThresholdClassifier(classifier=DummyClassifier(constant=None,
                                                                random_state=123,
                                                                strategy='prior'),
                                     constant=None, probability_threshold=0.5,
                                     random_state=123, strategy='prior')
2023-05-13 18:27:44,929:INFO:create_model() successfully completed......................................
2023-05-13 18:27:45,104:INFO:SubProcess create_model() end ==================================
2023-05-13 18:27:45,104:INFO:Creating metrics dataframe
2023-05-13 18:27:45,142:INFO:Initializing create_model()
2023-05-13 18:27:45,142:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002CF56CEAE20>, estimator=CustomProbabilityThresholdClassifier(C=1.0, class_weight=None,
                                     classifier=LogisticRegression(C=1.0,
                                                                   class_weight=None,
                                                                   dual=False,
                                                                   fit_intercept=True,
                                                                   intercept_scaling=1,
                                                                   l1_ratio=None,
                                                                   max_iter=1000,
                                                                   multi_class='auto',
                                                                   n_jobs=None,
                                                                   penalty='l2',
                                                                   random_state=123,
                                                                   solver='lbfgs',
                                                                   tol=0.0001,
                                                                   verbose=0,
                                                                   warm_start=False),
                                     dual=False, fit_intercept=True,
                                     intercept_scaling=1, l1_ratio=None,
                                     max_iter=1000, multi_class='auto',
                                     n_jobs=None, penalty='l2',
                                     probability_threshold=0.5,
                                     random_state=123, solver='lbfgs',
                                     tol=0.0001, verbose=0, warm_start=False), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=0.5, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-05-13 18:27:45,142:INFO:Checking exceptions
2023-05-13 18:27:45,144:INFO:Importing libraries
2023-05-13 18:27:45,144:INFO:Copying training dataset
2023-05-13 18:27:45,175:INFO:Defining folds
2023-05-13 18:27:45,175:INFO:Declaring metric variables
2023-05-13 18:27:45,176:INFO:Importing untrained model
2023-05-13 18:27:45,176:INFO:Declaring custom model
2023-05-13 18:27:45,177:INFO:CustomProbabilityThresholdClassifier Imported successfully
2023-05-13 18:27:45,191:INFO:Cross validation set to False
2023-05-13 18:27:45,191:INFO:Fitting Model
2023-05-13 18:27:45,945:INFO:CustomProbabilityThresholdClassifier(C=1.0, class_weight=None,
                                     classifier=LogisticRegression(C=1.0,
                                                                   class_weight=None,
                                                                   dual=False,
                                                                   fit_intercept=True,
                                                                   intercept_scaling=1,
                                                                   l1_ratio=None,
                                                                   max_iter=1000,
                                                                   multi_class='auto',
                                                                   n_jobs=None,
                                                                   penalty='l2',
                                                                   random_state=123,
                                                                   solver='lbfgs',
                                                                   tol=0.0001,
                                                                   verbose=0,
                                                                   warm_start=False),
                                     dual=False, fit_intercept=True,
                                     intercept_scaling=1, l1_ratio=None,
                                     max_iter=1000, multi_class='auto',
                                     n_jobs=None, penalty='l2',
                                     probability_threshold=0.5,
                                     random_state=123, solver='lbfgs',
                                     tol=0.0001, verbose=0, warm_start=False)
2023-05-13 18:27:45,945:INFO:create_model() successfully completed......................................
2023-05-13 18:27:46,170:INFO:_master_model_container: 0
2023-05-13 18:27:46,170:INFO:_display_container: 3
2023-05-13 18:27:46,174:INFO:CustomProbabilityThresholdClassifier(C=1.0, class_weight=None,
                                     classifier=LogisticRegression(C=1.0,
                                                                   class_weight=None,
                                                                   dual=False,
                                                                   fit_intercept=True,
                                                                   intercept_scaling=1,
                                                                   l1_ratio=None,
                                                                   max_iter=1000,
                                                                   multi_class='auto',
                                                                   n_jobs=None,
                                                                   penalty='l2',
                                                                   random_state=123,
                                                                   solver='lbfgs',
                                                                   tol=0.0001,
                                                                   verbose=0,
                                                                   warm_start=False),
                                     dual=False, fit_intercept=True,
                                     intercept_scaling=1, l1_ratio=None,
                                     max_iter=1000, multi_class='auto',
                                     n_jobs=None, penalty='l2',
                                     probability_threshold=0.5,
                                     random_state=123, solver='lbfgs',
                                     tol=0.0001, verbose=0, warm_start=False)
2023-05-13 18:27:46,174:INFO:compare_models() successfully completed......................................
2023-05-13 18:29:52,598:INFO:Initializing compare_models()
2023-05-13 18:29:52,598:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002CF56CEAE20>, include=None, fold=None, round=4, cross_validation=True, sort=AUC, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=0.5, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x000002CF56CEAE20>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'AUC', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': 0.5, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2023-05-13 18:29:52,599:INFO:Checking exceptions
2023-05-13 18:29:52,612:INFO:Preparing display monitor
2023-05-13 18:29:52,654:INFO:Initializing Logistic Regression
2023-05-13 18:29:52,654:INFO:Total runtime is 0.0 minutes
2023-05-13 18:29:52,661:INFO:SubProcess create_model() called ==================================
2023-05-13 18:29:52,662:INFO:Initializing create_model()
2023-05-13 18:29:52,662:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002CF56CEAE20>, estimator=lr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=0.5, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002CF4E5AFB20>, model_only=True, return_train_score=False, kwargs={})
2023-05-13 18:29:52,662:INFO:Checking exceptions
2023-05-13 18:29:52,662:INFO:Importing libraries
2023-05-13 18:29:52,663:INFO:Copying training dataset
2023-05-13 18:29:52,700:INFO:Defining folds
2023-05-13 18:29:52,701:INFO:Declaring metric variables
2023-05-13 18:29:52,710:INFO:Importing untrained model
2023-05-13 18:29:52,717:INFO:Logistic Regression Imported successfully
2023-05-13 18:29:52,733:INFO:Starting cross validation
2023-05-13 18:29:52,752:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2023-05-13 18:29:54,666:WARNING:c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\sklearn\base.py:439: UserWarning: X does not have valid feature names, but IsolationForest was fitted with feature names
  warnings.warn(

2023-05-13 18:30:01,684:WARNING:c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\sklearn\base.py:439: UserWarning: X does not have valid feature names, but IsolationForest was fitted with feature names
  warnings.warn(

2023-05-13 18:30:08,419:WARNING:c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\sklearn\base.py:439: UserWarning: X does not have valid feature names, but IsolationForest was fitted with feature names
  warnings.warn(

2023-05-13 18:30:15,644:WARNING:c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\sklearn\base.py:439: UserWarning: X does not have valid feature names, but IsolationForest was fitted with feature names
  warnings.warn(

2023-05-13 18:30:22,519:WARNING:c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\sklearn\base.py:439: UserWarning: X does not have valid feature names, but IsolationForest was fitted with feature names
  warnings.warn(

2023-05-13 18:30:29,530:WARNING:c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\sklearn\base.py:439: UserWarning: X does not have valid feature names, but IsolationForest was fitted with feature names
  warnings.warn(

2023-05-13 18:30:36,554:WARNING:c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\sklearn\base.py:439: UserWarning: X does not have valid feature names, but IsolationForest was fitted with feature names
  warnings.warn(

2023-05-13 18:30:43,372:WARNING:c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\sklearn\base.py:439: UserWarning: X does not have valid feature names, but IsolationForest was fitted with feature names
  warnings.warn(

2023-05-13 18:30:50,393:WARNING:c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\sklearn\base.py:439: UserWarning: X does not have valid feature names, but IsolationForest was fitted with feature names
  warnings.warn(

2023-05-13 18:30:57,530:WARNING:c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\sklearn\base.py:439: UserWarning: X does not have valid feature names, but IsolationForest was fitted with feature names
  warnings.warn(

2023-05-13 18:31:02,894:INFO:Calculating mean and std
2023-05-13 18:31:02,897:INFO:Creating metrics dataframe
2023-05-13 18:31:02,986:INFO:Uploading results into container
2023-05-13 18:31:02,987:INFO:Uploading model into container now
2023-05-13 18:31:02,987:INFO:_master_model_container: 1
2023-05-13 18:31:02,987:INFO:_display_container: 4
2023-05-13 18:31:02,988:INFO:CustomProbabilityThresholdClassifier(C=1.0, class_weight=None,
                                     classifier=LogisticRegression(C=1.0,
                                                                   class_weight=None,
                                                                   dual=False,
                                                                   fit_intercept=True,
                                                                   intercept_scaling=1,
                                                                   l1_ratio=None,
                                                                   max_iter=1000,
                                                                   multi_class='auto',
                                                                   n_jobs=None,
                                                                   penalty='l2',
                                                                   random_state=123,
                                                                   solver='lbfgs',
                                                                   tol=0.0001,
                                                                   verbose=0,
                                                                   warm_start=False),
                                     dual=False, fit_intercept=True,
                                     intercept_scaling=1, l1_ratio=None,
                                     max_iter=1000, multi_class='auto',
                                     n_jobs=None, penalty='l2',
                                     probability_threshold=0.5,
                                     random_state=123, solver='lbfgs',
                                     tol=0.0001, verbose=0, warm_start=False)
2023-05-13 18:31:02,989:INFO:create_model() successfully completed......................................
2023-05-13 18:31:03,167:INFO:SubProcess create_model() end ==================================
2023-05-13 18:31:03,167:INFO:Creating metrics dataframe
2023-05-13 18:31:03,183:INFO:Initializing K Neighbors Classifier
2023-05-13 18:31:03,183:INFO:Total runtime is 1.175472096602122 minutes
2023-05-13 18:31:03,189:INFO:SubProcess create_model() called ==================================
2023-05-13 18:31:03,189:INFO:Initializing create_model()
2023-05-13 18:31:03,189:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002CF56CEAE20>, estimator=knn, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=0.5, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002CF4E5AFB20>, model_only=True, return_train_score=False, kwargs={})
2023-05-13 18:31:03,190:INFO:Checking exceptions
2023-05-13 18:31:03,190:INFO:Importing libraries
2023-05-13 18:31:03,190:INFO:Copying training dataset
2023-05-13 18:31:03,213:INFO:Defining folds
2023-05-13 18:31:03,215:INFO:Declaring metric variables
2023-05-13 18:31:03,221:INFO:Importing untrained model
2023-05-13 18:31:03,236:INFO:K Neighbors Classifier Imported successfully
2023-05-13 18:31:03,292:INFO:Starting cross validation
2023-05-13 18:31:03,330:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2023-05-13 18:31:29,662:INFO:Calculating mean and std
2023-05-13 18:31:29,664:INFO:Creating metrics dataframe
2023-05-13 18:31:29,777:INFO:Uploading results into container
2023-05-13 18:31:29,778:INFO:Uploading model into container now
2023-05-13 18:31:29,779:INFO:_master_model_container: 2
2023-05-13 18:31:29,779:INFO:_display_container: 4
2023-05-13 18:31:29,782:INFO:CustomProbabilityThresholdClassifier(algorithm='auto',
                                     classifier=KNeighborsClassifier(algorithm='auto',
                                                                     leaf_size=30,
                                                                     metric='minkowski',
                                                                     metric_params=None,
                                                                     n_jobs=-1,
                                                                     n_neighbors=5,
                                                                     p=2,
                                                                     weights='uniform'),
                                     leaf_size=30, metric='minkowski',
                                     metric_params=None, n_jobs=-1,
                                     n_neighbors=5, p=2,
                                     probability_threshold=0.5,
                                     weights='uniform')
2023-05-13 18:31:29,783:INFO:create_model() successfully completed......................................
2023-05-13 18:31:30,028:INFO:SubProcess create_model() end ==================================
2023-05-13 18:31:30,028:INFO:Creating metrics dataframe
2023-05-13 18:31:30,050:INFO:Initializing Naive Bayes
2023-05-13 18:31:30,051:INFO:Total runtime is 1.6232821345329285 minutes
2023-05-13 18:31:30,057:INFO:SubProcess create_model() called ==================================
2023-05-13 18:31:30,057:INFO:Initializing create_model()
2023-05-13 18:31:30,057:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002CF56CEAE20>, estimator=nb, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=0.5, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002CF4E5AFB20>, model_only=True, return_train_score=False, kwargs={})
2023-05-13 18:31:30,058:INFO:Checking exceptions
2023-05-13 18:31:30,058:INFO:Importing libraries
2023-05-13 18:31:30,058:INFO:Copying training dataset
2023-05-13 18:31:30,091:INFO:Defining folds
2023-05-13 18:31:30,092:INFO:Declaring metric variables
2023-05-13 18:31:30,097:INFO:Importing untrained model
2023-05-13 18:31:30,104:INFO:Naive Bayes Imported successfully
2023-05-13 18:31:30,122:INFO:Starting cross validation
2023-05-13 18:31:30,140:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2023-05-13 18:31:46,176:INFO:Calculating mean and std
2023-05-13 18:31:46,178:INFO:Creating metrics dataframe
2023-05-13 18:31:46,262:INFO:Uploading results into container
2023-05-13 18:31:46,263:INFO:Uploading model into container now
2023-05-13 18:31:46,264:INFO:_master_model_container: 3
2023-05-13 18:31:46,264:INFO:_display_container: 4
2023-05-13 18:31:46,264:INFO:CustomProbabilityThresholdClassifier(classifier=GaussianNB(priors=None,
                                                           var_smoothing=1e-09),
                                     priors=None, probability_threshold=0.5,
                                     var_smoothing=1e-09)
2023-05-13 18:31:46,265:INFO:create_model() successfully completed......................................
2023-05-13 18:31:46,447:INFO:SubProcess create_model() end ==================================
2023-05-13 18:31:46,447:INFO:Creating metrics dataframe
2023-05-13 18:31:46,462:INFO:Initializing Decision Tree Classifier
2023-05-13 18:31:46,462:INFO:Total runtime is 1.8967989325523376 minutes
2023-05-13 18:31:46,469:INFO:SubProcess create_model() called ==================================
2023-05-13 18:31:46,470:INFO:Initializing create_model()
2023-05-13 18:31:46,470:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002CF56CEAE20>, estimator=dt, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=0.5, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002CF4E5AFB20>, model_only=True, return_train_score=False, kwargs={})
2023-05-13 18:31:46,470:INFO:Checking exceptions
2023-05-13 18:31:46,470:INFO:Importing libraries
2023-05-13 18:31:46,471:INFO:Copying training dataset
2023-05-13 18:31:46,497:INFO:Defining folds
2023-05-13 18:31:46,498:INFO:Declaring metric variables
2023-05-13 18:31:46,505:INFO:Importing untrained model
2023-05-13 18:31:46,511:INFO:Decision Tree Classifier Imported successfully
2023-05-13 18:31:46,524:INFO:Starting cross validation
2023-05-13 18:31:46,540:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2023-05-13 18:32:02,554:INFO:Calculating mean and std
2023-05-13 18:32:02,555:INFO:Creating metrics dataframe
2023-05-13 18:32:02,672:INFO:Uploading results into container
2023-05-13 18:32:02,673:INFO:Uploading model into container now
2023-05-13 18:32:02,673:INFO:_master_model_container: 4
2023-05-13 18:32:02,673:INFO:_display_container: 4
2023-05-13 18:32:02,675:INFO:CustomProbabilityThresholdClassifier(ccp_alpha=0.0, class_weight=None,
                                     classifier=DecisionTreeClassifier(ccp_alpha=0.0,
                                                                       class_weight=None,
                                                                       criterion='gini',
                                                                       max_depth=None,
                                                                       max_features=None,
                                                                       max_leaf_nodes=None,
                                                                       min_impurity_decrease=0.0,
                                                                       min_samples_leaf=1,
                                                                       min_samples_split=2,
                                                                       min_weight_fraction_leaf=0.0,
                                                                       random_state=123,
                                                                       splitter='best'),
                                     criterion='gini', max_depth=None,
                                     max_features=None, max_leaf_nodes=None,
                                     min_impurity_decrease=0.0,
                                     min_samples_leaf=1, min_samples_split=2,
                                     min_weight_fraction_leaf=0.0,
                                     probability_threshold=0.5,
                                     random_state=123, splitter='best')
2023-05-13 18:32:02,675:INFO:create_model() successfully completed......................................
2023-05-13 18:32:02,878:INFO:SubProcess create_model() end ==================================
2023-05-13 18:32:02,879:INFO:Creating metrics dataframe
2023-05-13 18:32:02,896:INFO:Initializing SVM - Linear Kernel
2023-05-13 18:32:02,897:INFO:Total runtime is 2.1707170963287354 minutes
2023-05-13 18:32:02,904:INFO:SubProcess create_model() called ==================================
2023-05-13 18:32:02,904:INFO:Initializing create_model()
2023-05-13 18:32:02,904:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002CF56CEAE20>, estimator=svm, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=0.5, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002CF4E5AFB20>, model_only=True, return_train_score=False, kwargs={})
2023-05-13 18:32:02,904:INFO:Checking exceptions
2023-05-13 18:32:02,904:INFO:Importing libraries
2023-05-13 18:32:02,904:INFO:Copying training dataset
2023-05-13 18:32:02,937:INFO:Defining folds
2023-05-13 18:32:02,937:INFO:Declaring metric variables
2023-05-13 18:32:02,946:INFO:Importing untrained model
2023-05-13 18:32:02,954:INFO:SVM - Linear Kernel Imported successfully
2023-05-13 18:32:02,967:INFO:Starting cross validation
2023-05-13 18:32:02,988:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2023-05-13 18:32:04,611:WARNING:c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\pycaret\internal\meta_estimators.py", line 170, in __getattr__
    return getattr(self.classifier_, name)
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-05-13 18:32:06,148:WARNING:c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\pycaret\internal\meta_estimators.py", line 170, in __getattr__
    return getattr(self.classifier_, name)
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-05-13 18:32:07,609:WARNING:c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\pycaret\internal\meta_estimators.py", line 170, in __getattr__
    return getattr(self.classifier_, name)
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-05-13 18:32:09,107:WARNING:c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\pycaret\internal\meta_estimators.py", line 170, in __getattr__
    return getattr(self.classifier_, name)
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-05-13 18:32:10,702:WARNING:c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\pycaret\internal\meta_estimators.py", line 170, in __getattr__
    return getattr(self.classifier_, name)
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-05-13 18:32:12,201:WARNING:c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\pycaret\internal\meta_estimators.py", line 170, in __getattr__
    return getattr(self.classifier_, name)
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-05-13 18:32:13,735:WARNING:c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\pycaret\internal\meta_estimators.py", line 170, in __getattr__
    return getattr(self.classifier_, name)
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-05-13 18:32:15,323:WARNING:c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\pycaret\internal\meta_estimators.py", line 170, in __getattr__
    return getattr(self.classifier_, name)
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-05-13 18:32:16,879:WARNING:c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\pycaret\internal\meta_estimators.py", line 170, in __getattr__
    return getattr(self.classifier_, name)
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-05-13 18:32:18,772:WARNING:c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\pycaret\internal\meta_estimators.py", line 170, in __getattr__
    return getattr(self.classifier_, name)
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-05-13 18:32:19,107:INFO:Calculating mean and std
2023-05-13 18:32:19,109:INFO:Creating metrics dataframe
2023-05-13 18:32:19,221:INFO:Uploading results into container
2023-05-13 18:32:19,222:INFO:Uploading model into container now
2023-05-13 18:32:19,222:INFO:_master_model_container: 5
2023-05-13 18:32:19,222:INFO:_display_container: 4
2023-05-13 18:32:19,225:INFO:CustomProbabilityThresholdClassifier(alpha=0.0001, average=False,
                                     class_weight=None,
                                     classifier=SGDClassifier(alpha=0.0001,
                                                              average=False,
                                                              class_weight=None,
                                                              early_stopping=False,
                                                              epsilon=0.1,
                                                              eta0=0.001,
                                                              fit_intercept=True,
                                                              l1_ratio=0.15,
                                                              learning_rate='optimal',
                                                              loss='hinge',
                                                              max_iter=1000,
                                                              n_iter_no_change=5,
                                                              n_jobs=-1,
                                                              penalty='l2',
                                                              power_t=0.5,
                                                              random_state=123...
                                                              validation_fraction=0.1,
                                                              verbose=0,
                                                              warm_start=False),
                                     early_stopping=False, epsilon=0.1,
                                     eta0=0.001, fit_intercept=True,
                                     l1_ratio=0.15, learning_rate='optimal',
                                     loss='hinge', max_iter=1000,
                                     n_iter_no_change=5, n_jobs=-1,
                                     penalty='l2', power_t=0.5,
                                     probability_threshold=0.5,
                                     random_state=123, shuffle=True, tol=0.001,
                                     validation_fraction=0.1, verbose=0,
                                     warm_start=False)
2023-05-13 18:32:19,226:INFO:create_model() successfully completed......................................
2023-05-13 18:32:19,411:INFO:SubProcess create_model() end ==================================
2023-05-13 18:32:19,411:INFO:Creating metrics dataframe
2023-05-13 18:32:19,428:INFO:Initializing Ridge Classifier
2023-05-13 18:32:19,428:INFO:Total runtime is 2.4462297042210897 minutes
2023-05-13 18:32:19,434:INFO:SubProcess create_model() called ==================================
2023-05-13 18:32:19,435:INFO:Initializing create_model()
2023-05-13 18:32:19,435:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002CF56CEAE20>, estimator=ridge, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=0.5, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002CF4E5AFB20>, model_only=True, return_train_score=False, kwargs={})
2023-05-13 18:32:19,435:INFO:Checking exceptions
2023-05-13 18:32:19,435:INFO:Importing libraries
2023-05-13 18:32:19,435:INFO:Copying training dataset
2023-05-13 18:32:19,460:INFO:Defining folds
2023-05-13 18:32:19,461:INFO:Declaring metric variables
2023-05-13 18:32:19,467:INFO:Importing untrained model
2023-05-13 18:32:19,475:INFO:Ridge Classifier Imported successfully
2023-05-13 18:32:19,486:INFO:Starting cross validation
2023-05-13 18:32:19,501:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2023-05-13 18:32:20,880:WARNING:c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\pycaret\internal\meta_estimators.py", line 170, in __getattr__
    return getattr(self.classifier_, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-05-13 18:32:22,307:WARNING:c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\pycaret\internal\meta_estimators.py", line 170, in __getattr__
    return getattr(self.classifier_, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-05-13 18:32:23,602:WARNING:c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\pycaret\internal\meta_estimators.py", line 170, in __getattr__
    return getattr(self.classifier_, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-05-13 18:32:25,021:WARNING:c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\pycaret\internal\meta_estimators.py", line 170, in __getattr__
    return getattr(self.classifier_, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-05-13 18:32:26,525:WARNING:c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\pycaret\internal\meta_estimators.py", line 170, in __getattr__
    return getattr(self.classifier_, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-05-13 18:32:28,301:WARNING:c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\pycaret\internal\meta_estimators.py", line 170, in __getattr__
    return getattr(self.classifier_, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-05-13 18:32:29,978:WARNING:c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\pycaret\internal\meta_estimators.py", line 170, in __getattr__
    return getattr(self.classifier_, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-05-13 18:32:31,592:WARNING:c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\pycaret\internal\meta_estimators.py", line 170, in __getattr__
    return getattr(self.classifier_, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-05-13 18:32:33,381:WARNING:c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\pycaret\internal\meta_estimators.py", line 170, in __getattr__
    return getattr(self.classifier_, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-05-13 18:32:34,759:WARNING:c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\pycaret\internal\meta_estimators.py", line 170, in __getattr__
    return getattr(self.classifier_, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-05-13 18:32:35,091:INFO:Calculating mean and std
2023-05-13 18:32:35,092:INFO:Creating metrics dataframe
2023-05-13 18:32:35,210:INFO:Uploading results into container
2023-05-13 18:32:35,211:INFO:Uploading model into container now
2023-05-13 18:32:35,211:INFO:_master_model_container: 6
2023-05-13 18:32:35,211:INFO:_display_container: 4
2023-05-13 18:32:35,212:INFO:CustomProbabilityThresholdClassifier(alpha=1.0, class_weight=None,
                                     classifier=RidgeClassifier(alpha=1.0,
                                                                class_weight=None,
                                                                copy_X=True,
                                                                fit_intercept=True,
                                                                max_iter=None,
                                                                positive=False,
                                                                random_state=123,
                                                                solver='auto',
                                                                tol=0.0001),
                                     copy_X=True, fit_intercept=True,
                                     max_iter=None, positive=False,
                                     probability_threshold=0.5,
                                     random_state=123, solver='auto',
                                     tol=0.0001)
2023-05-13 18:32:35,212:INFO:create_model() successfully completed......................................
2023-05-13 18:32:35,402:INFO:SubProcess create_model() end ==================================
2023-05-13 18:32:35,402:INFO:Creating metrics dataframe
2023-05-13 18:32:35,425:INFO:Initializing Random Forest Classifier
2023-05-13 18:32:35,425:INFO:Total runtime is 2.7128512461980185 minutes
2023-05-13 18:32:35,429:INFO:SubProcess create_model() called ==================================
2023-05-13 18:32:35,430:INFO:Initializing create_model()
2023-05-13 18:32:35,431:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002CF56CEAE20>, estimator=rf, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=0.5, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002CF4E5AFB20>, model_only=True, return_train_score=False, kwargs={})
2023-05-13 18:32:35,431:INFO:Checking exceptions
2023-05-13 18:32:35,431:INFO:Importing libraries
2023-05-13 18:32:35,431:INFO:Copying training dataset
2023-05-13 18:32:35,458:INFO:Defining folds
2023-05-13 18:32:35,458:INFO:Declaring metric variables
2023-05-13 18:32:35,466:INFO:Importing untrained model
2023-05-13 18:32:35,474:INFO:Random Forest Classifier Imported successfully
2023-05-13 18:32:35,485:INFO:Starting cross validation
2023-05-13 18:32:35,502:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2023-05-13 18:33:16,059:INFO:Calculating mean and std
2023-05-13 18:33:16,061:INFO:Creating metrics dataframe
2023-05-13 18:33:16,198:INFO:Uploading results into container
2023-05-13 18:33:16,199:INFO:Uploading model into container now
2023-05-13 18:33:16,200:INFO:_master_model_container: 7
2023-05-13 18:33:16,200:INFO:_display_container: 4
2023-05-13 18:33:16,204:INFO:CustomProbabilityThresholdClassifier(bootstrap=True, ccp_alpha=0.0,
                                     class_weight=None,
                                     classifier=RandomForestClassifier(bootstrap=True,
                                                                       ccp_alpha=0.0,
                                                                       class_weight=None,
                                                                       criterion='gini',
                                                                       max_depth=None,
                                                                       max_features='sqrt',
                                                                       max_leaf_nodes=None,
                                                                       max_samples=None,
                                                                       min_impurity_decrease=0.0,
                                                                       min_samples_leaf=1,
                                                                       min_samples_split=2,
                                                                       min_weight_fraction_leaf=0.0,
                                                                       n_...
                                                                       oob_score=False,
                                                                       random_state=123,
                                                                       verbose=0,
                                                                       warm_start=False),
                                     criterion='gini', max_depth=None,
                                     max_features='sqrt', max_leaf_nodes=None,
                                     max_samples=None,
                                     min_impurity_decrease=0.0,
                                     min_samples_leaf=1, min_samples_split=2,
                                     min_weight_fraction_leaf=0.0,
                                     n_estimators=100, n_jobs=-1,
                                     oob_score=False, probability_threshold=0.5,
                                     random_state=123, verbose=0,
                                     warm_start=False)
2023-05-13 18:33:16,205:INFO:create_model() successfully completed......................................
2023-05-13 18:33:16,386:INFO:SubProcess create_model() end ==================================
2023-05-13 18:33:16,386:INFO:Creating metrics dataframe
2023-05-13 18:33:16,401:INFO:Initializing Quadratic Discriminant Analysis
2023-05-13 18:33:16,401:INFO:Total runtime is 3.395785303910573 minutes
2023-05-13 18:33:16,407:INFO:SubProcess create_model() called ==================================
2023-05-13 18:33:16,407:INFO:Initializing create_model()
2023-05-13 18:33:16,408:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002CF56CEAE20>, estimator=qda, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=0.5, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002CF4E5AFB20>, model_only=True, return_train_score=False, kwargs={})
2023-05-13 18:33:16,408:INFO:Checking exceptions
2023-05-13 18:33:16,408:INFO:Importing libraries
2023-05-13 18:33:16,408:INFO:Copying training dataset
2023-05-13 18:33:16,436:INFO:Defining folds
2023-05-13 18:33:16,436:INFO:Declaring metric variables
2023-05-13 18:33:16,442:INFO:Importing untrained model
2023-05-13 18:33:16,449:INFO:Quadratic Discriminant Analysis Imported successfully
2023-05-13 18:33:16,459:INFO:Starting cross validation
2023-05-13 18:33:16,475:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2023-05-13 18:33:17,341:WARNING:c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-05-13 18:33:18,841:WARNING:c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-05-13 18:33:20,476:WARNING:c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-05-13 18:33:22,129:WARNING:c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-05-13 18:33:23,789:WARNING:c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-05-13 18:33:25,347:WARNING:c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-05-13 18:33:26,918:WARNING:c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-05-13 18:33:28,681:WARNING:c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-05-13 18:33:30,331:WARNING:c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-05-13 18:33:32,059:WARNING:c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-05-13 18:33:33,000:INFO:Calculating mean and std
2023-05-13 18:33:33,002:INFO:Creating metrics dataframe
2023-05-13 18:33:33,155:INFO:Uploading results into container
2023-05-13 18:33:33,157:INFO:Uploading model into container now
2023-05-13 18:33:33,157:INFO:_master_model_container: 8
2023-05-13 18:33:33,158:INFO:_display_container: 4
2023-05-13 18:33:33,159:INFO:CustomProbabilityThresholdClassifier(classifier=QuadraticDiscriminantAnalysis(priors=None,
                                                                              reg_param=0.0,
                                                                              store_covariance=False,
                                                                              tol=0.0001),
                                     priors=None, probability_threshold=0.5,
                                     reg_param=0.0, store_covariance=False,
                                     tol=0.0001)
2023-05-13 18:33:33,159:INFO:create_model() successfully completed......................................
2023-05-13 18:33:33,366:INFO:SubProcess create_model() end ==================================
2023-05-13 18:33:33,366:INFO:Creating metrics dataframe
2023-05-13 18:33:33,391:INFO:Initializing Ada Boost Classifier
2023-05-13 18:33:33,391:INFO:Total runtime is 3.6789477229118344 minutes
2023-05-13 18:33:33,397:INFO:SubProcess create_model() called ==================================
2023-05-13 18:33:33,398:INFO:Initializing create_model()
2023-05-13 18:33:33,398:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002CF56CEAE20>, estimator=ada, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=0.5, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002CF4E5AFB20>, model_only=True, return_train_score=False, kwargs={})
2023-05-13 18:33:33,399:INFO:Checking exceptions
2023-05-13 18:33:33,399:INFO:Importing libraries
2023-05-13 18:33:33,399:INFO:Copying training dataset
2023-05-13 18:33:33,428:INFO:Defining folds
2023-05-13 18:33:33,429:INFO:Declaring metric variables
2023-05-13 18:33:33,435:INFO:Importing untrained model
2023-05-13 18:33:33,443:INFO:Ada Boost Classifier Imported successfully
2023-05-13 18:33:33,455:INFO:Starting cross validation
2023-05-13 18:33:33,479:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2023-05-13 18:34:58,805:INFO:Calculating mean and std
2023-05-13 18:34:58,807:INFO:Creating metrics dataframe
2023-05-13 18:34:58,946:INFO:Uploading results into container
2023-05-13 18:34:58,947:INFO:Uploading model into container now
2023-05-13 18:34:58,949:INFO:_master_model_container: 9
2023-05-13 18:34:58,949:INFO:_display_container: 4
2023-05-13 18:34:58,951:INFO:CustomProbabilityThresholdClassifier(algorithm='SAMME.R',
                                     base_estimator='deprecated',
                                     classifier=AdaBoostClassifier(algorithm='SAMME.R',
                                                                   base_estimator='deprecated',
                                                                   estimator=None,
                                                                   learning_rate=1.0,
                                                                   n_estimators=50,
                                                                   random_state=123),
                                     estimator=None, learning_rate=1.0,
                                     n_estimators=50, probability_threshold=0.5,
                                     random_state=123)
2023-05-13 18:34:58,951:INFO:create_model() successfully completed......................................
2023-05-13 18:34:59,135:INFO:SubProcess create_model() end ==================================
2023-05-13 18:34:59,135:INFO:Creating metrics dataframe
2023-05-13 18:34:59,151:INFO:Initializing Gradient Boosting Classifier
2023-05-13 18:34:59,151:INFO:Total runtime is 5.1082787315050755 minutes
2023-05-13 18:34:59,156:INFO:SubProcess create_model() called ==================================
2023-05-13 18:34:59,157:INFO:Initializing create_model()
2023-05-13 18:34:59,157:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002CF56CEAE20>, estimator=gbc, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=0.5, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002CF4E5AFB20>, model_only=True, return_train_score=False, kwargs={})
2023-05-13 18:34:59,157:INFO:Checking exceptions
2023-05-13 18:34:59,158:INFO:Importing libraries
2023-05-13 18:34:59,158:INFO:Copying training dataset
2023-05-13 18:34:59,182:INFO:Defining folds
2023-05-13 18:34:59,183:INFO:Declaring metric variables
2023-05-13 18:34:59,188:INFO:Importing untrained model
2023-05-13 18:34:59,194:INFO:Gradient Boosting Classifier Imported successfully
2023-05-13 18:34:59,203:INFO:Starting cross validation
2023-05-13 18:34:59,221:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2023-05-13 18:37:55,475:INFO:Calculating mean and std
2023-05-13 18:37:55,476:INFO:Creating metrics dataframe
2023-05-13 18:37:55,641:INFO:Uploading results into container
2023-05-13 18:37:55,642:INFO:Uploading model into container now
2023-05-13 18:37:55,643:INFO:_master_model_container: 10
2023-05-13 18:37:55,644:INFO:_display_container: 4
2023-05-13 18:37:55,646:INFO:CustomProbabilityThresholdClassifier(ccp_alpha=0.0,
                                     classifier=GradientBoostingClassifier(ccp_alpha=0.0,
                                                                           criterion='friedman_mse',
                                                                           init=None,
                                                                           learning_rate=0.1,
                                                                           loss='log_loss',
                                                                           max_depth=3,
                                                                           max_features=None,
                                                                           max_leaf_nodes=None,
                                                                           min_impurity_decrease=0.0,
                                                                           min_samples_leaf=1,
                                                                           min_samples_split=2,
                                                                           min_weight_fraction_leaf=0.0,
                                                                           n_estimators=100,
                                                                           n_iter_no_change=...
                                     criterion='friedman_mse', init=None,
                                     learning_rate=0.1, loss='log_loss',
                                     max_depth=3, max_features=None,
                                     max_leaf_nodes=None,
                                     min_impurity_decrease=0.0,
                                     min_samples_leaf=1, min_samples_split=2,
                                     min_weight_fraction_leaf=0.0,
                                     n_estimators=100, n_iter_no_change=None,
                                     probability_threshold=0.5,
                                     random_state=123, subsample=1.0,
                                     tol=0.0001, validation_fraction=0.1,
                                     verbose=0, warm_start=False)
2023-05-13 18:37:55,646:INFO:create_model() successfully completed......................................
2023-05-13 18:37:55,836:INFO:SubProcess create_model() end ==================================
2023-05-13 18:37:55,836:INFO:Creating metrics dataframe
2023-05-13 18:37:55,854:INFO:Initializing Linear Discriminant Analysis
2023-05-13 18:37:55,855:INFO:Total runtime is 8.05335159699122 minutes
2023-05-13 18:37:55,861:INFO:SubProcess create_model() called ==================================
2023-05-13 18:37:55,862:INFO:Initializing create_model()
2023-05-13 18:37:55,862:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002CF56CEAE20>, estimator=lda, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=0.5, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002CF4E5AFB20>, model_only=True, return_train_score=False, kwargs={})
2023-05-13 18:37:55,862:INFO:Checking exceptions
2023-05-13 18:37:55,862:INFO:Importing libraries
2023-05-13 18:37:55,862:INFO:Copying training dataset
2023-05-13 18:37:55,885:INFO:Defining folds
2023-05-13 18:37:55,885:INFO:Declaring metric variables
2023-05-13 18:37:55,891:INFO:Importing untrained model
2023-05-13 18:37:55,897:INFO:Linear Discriminant Analysis Imported successfully
2023-05-13 18:37:55,907:INFO:Starting cross validation
2023-05-13 18:37:55,927:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2023-05-13 18:38:17,466:INFO:Calculating mean and std
2023-05-13 18:38:17,467:INFO:Creating metrics dataframe
2023-05-13 18:38:17,649:INFO:Uploading results into container
2023-05-13 18:38:17,650:INFO:Uploading model into container now
2023-05-13 18:38:17,651:INFO:_master_model_container: 11
2023-05-13 18:38:17,651:INFO:_display_container: 4
2023-05-13 18:38:17,652:INFO:CustomProbabilityThresholdClassifier(classifier=LinearDiscriminantAnalysis(covariance_estimator=None,
                                                                           n_components=None,
                                                                           priors=None,
                                                                           shrinkage=None,
                                                                           solver='svd',
                                                                           store_covariance=False,
                                                                           tol=0.0001),
                                     covariance_estimator=None,
                                     n_components=None, priors=None,
                                     probability_threshold=0.5, shrinkage=None,
                                     solver='svd', store_covariance=False,
                                     tol=0.0001)
2023-05-13 18:38:17,652:INFO:create_model() successfully completed......................................
2023-05-13 18:38:17,869:INFO:SubProcess create_model() end ==================================
2023-05-13 18:38:17,869:INFO:Creating metrics dataframe
2023-05-13 18:38:17,902:INFO:Initializing Extra Trees Classifier
2023-05-13 18:38:17,902:INFO:Total runtime is 8.420797630151112 minutes
2023-05-13 18:38:17,911:INFO:SubProcess create_model() called ==================================
2023-05-13 18:38:17,912:INFO:Initializing create_model()
2023-05-13 18:38:17,912:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002CF56CEAE20>, estimator=et, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=0.5, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002CF4E5AFB20>, model_only=True, return_train_score=False, kwargs={})
2023-05-13 18:38:17,912:INFO:Checking exceptions
2023-05-13 18:38:17,913:INFO:Importing libraries
2023-05-13 18:38:17,913:INFO:Copying training dataset
2023-05-13 18:38:17,943:INFO:Defining folds
2023-05-13 18:38:17,943:INFO:Declaring metric variables
2023-05-13 18:38:17,950:INFO:Importing untrained model
2023-05-13 18:38:17,959:INFO:Extra Trees Classifier Imported successfully
2023-05-13 18:38:17,973:INFO:Starting cross validation
2023-05-13 18:38:18,003:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2023-05-13 18:38:55,804:INFO:Calculating mean and std
2023-05-13 18:38:55,806:INFO:Creating metrics dataframe
2023-05-13 18:38:55,976:INFO:Uploading results into container
2023-05-13 18:38:55,977:INFO:Uploading model into container now
2023-05-13 18:38:55,978:INFO:_master_model_container: 12
2023-05-13 18:38:55,978:INFO:_display_container: 4
2023-05-13 18:38:55,980:INFO:CustomProbabilityThresholdClassifier(bootstrap=False, ccp_alpha=0.0,
                                     class_weight=None,
                                     classifier=ExtraTreesClassifier(bootstrap=False,
                                                                     ccp_alpha=0.0,
                                                                     class_weight=None,
                                                                     criterion='gini',
                                                                     max_depth=None,
                                                                     max_features='sqrt',
                                                                     max_leaf_nodes=None,
                                                                     max_samples=None,
                                                                     min_impurity_decrease=0.0,
                                                                     min_samples_leaf=1,
                                                                     min_samples_split=2,
                                                                     min_weight_fraction_leaf=0.0,
                                                                     n_...
                                                                     oob_score=False,
                                                                     random_state=123,
                                                                     verbose=0,
                                                                     warm_start=False),
                                     criterion='gini', max_depth=None,
                                     max_features='sqrt', max_leaf_nodes=None,
                                     max_samples=None,
                                     min_impurity_decrease=0.0,
                                     min_samples_leaf=1, min_samples_split=2,
                                     min_weight_fraction_leaf=0.0,
                                     n_estimators=100, n_jobs=-1,
                                     oob_score=False, probability_threshold=0.5,
                                     random_state=123, verbose=0,
                                     warm_start=False)
2023-05-13 18:38:55,980:INFO:create_model() successfully completed......................................
2023-05-13 18:38:56,178:INFO:SubProcess create_model() end ==================================
2023-05-13 18:38:56,178:INFO:Creating metrics dataframe
2023-05-13 18:38:56,196:INFO:Initializing Light Gradient Boosting Machine
2023-05-13 18:38:56,197:INFO:Total runtime is 9.05904703537623 minutes
2023-05-13 18:38:56,204:INFO:SubProcess create_model() called ==================================
2023-05-13 18:38:56,204:INFO:Initializing create_model()
2023-05-13 18:38:56,204:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002CF56CEAE20>, estimator=lightgbm, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=0.5, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002CF4E5AFB20>, model_only=True, return_train_score=False, kwargs={})
2023-05-13 18:38:56,205:INFO:Checking exceptions
2023-05-13 18:38:56,205:INFO:Importing libraries
2023-05-13 18:38:56,205:INFO:Copying training dataset
2023-05-13 18:38:56,233:INFO:Defining folds
2023-05-13 18:38:56,233:INFO:Declaring metric variables
2023-05-13 18:38:56,241:INFO:Importing untrained model
2023-05-13 18:38:56,248:INFO:Light Gradient Boosting Machine Imported successfully
2023-05-13 18:38:56,260:INFO:Starting cross validation
2023-05-13 18:38:56,276:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2023-05-13 18:39:35,123:INFO:Calculating mean and std
2023-05-13 18:39:35,125:INFO:Creating metrics dataframe
2023-05-13 18:39:35,322:INFO:Uploading results into container
2023-05-13 18:39:35,325:INFO:Uploading model into container now
2023-05-13 18:39:35,325:INFO:_master_model_container: 13
2023-05-13 18:39:35,326:INFO:_display_container: 4
2023-05-13 18:39:35,331:INFO:CustomProbabilityThresholdClassifier(boosting_type='gbdt', class_weight=None,
                                     classifier=LGBMClassifier(boosting_type='gbdt',
                                                               class_weight=None,
                                                               colsample_bytree=1.0,
                                                               device='gpu',
                                                               importance_type='split',
                                                               learning_rate=0.1,
                                                               max_depth=-1,
                                                               min_child_samples=20,
                                                               min_child_weight=0.001,
                                                               min_split_gain=0.0,
                                                               n_estimators=100,
                                                               n_jobs=-1,
                                                               num_leaves=31,
                                                               objective=None,
                                                               r...
                                     colsample_bytree=1.0, device='gpu',
                                     importance_type='split', learning_rate=0.1,
                                     max_depth=-1, min_child_samples=20,
                                     min_child_weight=0.001, min_split_gain=0.0,
                                     n_estimators=100, n_jobs=-1, num_leaves=31,
                                     objective=None, probability_threshold=0.5,
                                     random_state=123, reg_alpha=0.0,
                                     reg_lambda=0.0, silent='warn',
                                     subsample=1.0, subsample_for_bin=200000,
                                     subsample_freq=0)
2023-05-13 18:39:35,331:INFO:create_model() successfully completed......................................
2023-05-13 18:39:35,529:INFO:SubProcess create_model() end ==================================
2023-05-13 18:39:35,529:INFO:Creating metrics dataframe
2023-05-13 18:39:35,546:INFO:Initializing Dummy Classifier
2023-05-13 18:39:35,546:INFO:Total runtime is 9.714867560068765 minutes
2023-05-13 18:39:35,553:INFO:SubProcess create_model() called ==================================
2023-05-13 18:39:35,554:INFO:Initializing create_model()
2023-05-13 18:39:35,555:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002CF56CEAE20>, estimator=dummy, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=0.5, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002CF4E5AFB20>, model_only=True, return_train_score=False, kwargs={})
2023-05-13 18:39:35,555:INFO:Checking exceptions
2023-05-13 18:39:35,555:INFO:Importing libraries
2023-05-13 18:39:35,555:INFO:Copying training dataset
2023-05-13 18:39:35,585:INFO:Defining folds
2023-05-13 18:39:35,586:INFO:Declaring metric variables
2023-05-13 18:39:35,593:INFO:Importing untrained model
2023-05-13 18:39:35,599:INFO:Dummy Classifier Imported successfully
2023-05-13 18:39:35,611:INFO:Starting cross validation
2023-05-13 18:39:35,628:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2023-05-13 18:39:50,577:INFO:Calculating mean and std
2023-05-13 18:39:50,579:INFO:Creating metrics dataframe
2023-05-13 18:39:50,764:INFO:Uploading results into container
2023-05-13 18:39:50,765:INFO:Uploading model into container now
2023-05-13 18:39:50,766:INFO:_master_model_container: 14
2023-05-13 18:39:50,766:INFO:_display_container: 4
2023-05-13 18:39:50,766:INFO:CustomProbabilityThresholdClassifier(classifier=DummyClassifier(constant=None,
                                                                random_state=123,
                                                                strategy='prior'),
                                     constant=None, probability_threshold=0.5,
                                     random_state=123, strategy='prior')
2023-05-13 18:39:50,766:INFO:create_model() successfully completed......................................
2023-05-13 18:39:50,963:INFO:SubProcess create_model() end ==================================
2023-05-13 18:39:50,964:INFO:Creating metrics dataframe
2023-05-13 18:39:51,005:INFO:Initializing create_model()
2023-05-13 18:39:51,005:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002CF56CEAE20>, estimator=CustomProbabilityThresholdClassifier(ccp_alpha=0.0, class_weight=None,
                                     classifier=DecisionTreeClassifier(ccp_alpha=0.0,
                                                                       class_weight=None,
                                                                       criterion='gini',
                                                                       max_depth=None,
                                                                       max_features=None,
                                                                       max_leaf_nodes=None,
                                                                       min_impurity_decrease=0.0,
                                                                       min_samples_leaf=1,
                                                                       min_samples_split=2,
                                                                       min_weight_fraction_leaf=0.0,
                                                                       random_state=123,
                                                                       splitter='best'),
                                     criterion='gini', max_depth=None,
                                     max_features=None, max_leaf_nodes=None,
                                     min_impurity_decrease=0.0,
                                     min_samples_leaf=1, min_samples_split=2,
                                     min_weight_fraction_leaf=0.0,
                                     probability_threshold=0.5,
                                     random_state=123, splitter='best'), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=0.5, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-05-13 18:39:51,005:INFO:Checking exceptions
2023-05-13 18:39:51,007:INFO:Importing libraries
2023-05-13 18:39:51,007:INFO:Copying training dataset
2023-05-13 18:39:51,036:INFO:Defining folds
2023-05-13 18:39:51,036:INFO:Declaring metric variables
2023-05-13 18:39:51,036:INFO:Importing untrained model
2023-05-13 18:39:51,036:INFO:Declaring custom model
2023-05-13 18:39:51,037:INFO:CustomProbabilityThresholdClassifier Imported successfully
2023-05-13 18:39:51,052:INFO:Cross validation set to False
2023-05-13 18:39:51,052:INFO:Fitting Model
2023-05-13 18:39:52,034:INFO:CustomProbabilityThresholdClassifier(ccp_alpha=0.0, class_weight=None,
                                     classifier=DecisionTreeClassifier(ccp_alpha=0.0,
                                                                       class_weight=None,
                                                                       criterion='gini',
                                                                       max_depth=None,
                                                                       max_features=None,
                                                                       max_leaf_nodes=None,
                                                                       min_impurity_decrease=0.0,
                                                                       min_samples_leaf=1,
                                                                       min_samples_split=2,
                                                                       min_weight_fraction_leaf=0.0,
                                                                       random_state=123,
                                                                       splitter='best'),
                                     criterion='gini', max_depth=None,
                                     max_features=None, max_leaf_nodes=None,
                                     min_impurity_decrease=0.0,
                                     min_samples_leaf=1, min_samples_split=2,
                                     min_weight_fraction_leaf=0.0,
                                     probability_threshold=0.5,
                                     random_state=123, splitter='best')
2023-05-13 18:39:52,034:INFO:create_model() successfully completed......................................
2023-05-13 18:39:52,316:INFO:_master_model_container: 14
2023-05-13 18:39:52,317:INFO:_display_container: 4
2023-05-13 18:39:52,319:INFO:CustomProbabilityThresholdClassifier(ccp_alpha=0.0, class_weight=None,
                                     classifier=DecisionTreeClassifier(ccp_alpha=0.0,
                                                                       class_weight=None,
                                                                       criterion='gini',
                                                                       max_depth=None,
                                                                       max_features=None,
                                                                       max_leaf_nodes=None,
                                                                       min_impurity_decrease=0.0,
                                                                       min_samples_leaf=1,
                                                                       min_samples_split=2,
                                                                       min_weight_fraction_leaf=0.0,
                                                                       random_state=123,
                                                                       splitter='best'),
                                     criterion='gini', max_depth=None,
                                     max_features=None, max_leaf_nodes=None,
                                     min_impurity_decrease=0.0,
                                     min_samples_leaf=1, min_samples_split=2,
                                     min_weight_fraction_leaf=0.0,
                                     probability_threshold=0.5,
                                     random_state=123, splitter='best')
2023-05-13 18:39:52,319:INFO:compare_models() successfully completed......................................
2023-05-13 18:41:57,809:INFO:Initializing evaluate_model()
2023-05-13 18:41:57,809:INFO:evaluate_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002CF56CEAE20>, estimator=CustomProbabilityThresholdClassifier(ccp_alpha=0.0, class_weight=None,
                                     classifier=DecisionTreeClassifier(ccp_alpha=0.0,
                                                                       class_weight=None,
                                                                       criterion='gini',
                                                                       max_depth=None,
                                                                       max_features=None,
                                                                       max_leaf_nodes=None,
                                                                       min_impurity_decrease=0.0,
                                                                       min_samples_leaf=1,
                                                                       min_samples_split=2,
                                                                       min_weight_fraction_leaf=0.0,
                                                                       random_state=123,
                                                                       splitter='best'),
                                     criterion='gini', max_depth=None,
                                     max_features=None, max_leaf_nodes=None,
                                     min_impurity_decrease=0.0,
                                     min_samples_leaf=1, min_samples_split=2,
                                     min_weight_fraction_leaf=0.0,
                                     probability_threshold=0.5,
                                     random_state=123, splitter='best'), fold=None, fit_kwargs=None, plot_kwargs=None, feature_name=None, groups=None, use_train_data=False)
2023-05-13 18:41:57,840:INFO:Initializing plot_model()
2023-05-13 18:41:57,840:INFO:plot_model(plot=pipeline, fold=KFold(n_splits=10, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=CustomProbabilityThresholdClassifier(ccp_alpha=0.0, class_weight=None,
                                     classifier=DecisionTreeClassifier(ccp_alpha=0.0,
                                                                       class_weight=None,
                                                                       criterion='gini',
                                                                       max_depth=None,
                                                                       max_features=None,
                                                                       max_leaf_nodes=None,
                                                                       min_impurity_decrease=0.0,
                                                                       min_samples_leaf=1,
                                                                       min_samples_split=2,
                                                                       min_weight_fraction_leaf=0.0,
                                                                       random_state=123,
                                                                       splitter='best'),
                                     criterion='gini', max_depth=None,
                                     max_features=None, max_leaf_nodes=None,
                                     min_impurity_decrease=0.0,
                                     min_samples_leaf=1, min_samples_split=2,
                                     min_weight_fraction_leaf=0.0,
                                     probability_threshold=0.5,
                                     random_state=123, splitter='best'), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002CF56CEAE20>, system=True)
2023-05-13 18:41:57,841:INFO:Checking exceptions
2023-05-13 18:41:57,854:INFO:Preloading libraries
2023-05-13 18:41:57,855:INFO:Copying training dataset
2023-05-13 18:41:57,855:INFO:Plot type: pipeline
2023-05-13 18:41:59,179:INFO:Initializing evaluate_model()
2023-05-13 18:41:59,180:INFO:evaluate_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002CF56CEAE20>, estimator=CustomProbabilityThresholdClassifier(ccp_alpha=0.0, class_weight=None,
                                     classifier=DecisionTreeClassifier(ccp_alpha=0.0,
                                                                       class_weight=None,
                                                                       criterion='gini',
                                                                       max_depth=None,
                                                                       max_features=None,
                                                                       max_leaf_nodes=None,
                                                                       min_impurity_decrease=0.0,
                                                                       min_samples_leaf=1,
                                                                       min_samples_split=2,
                                                                       min_weight_fraction_leaf=0.0,
                                                                       random_state=123,
                                                                       splitter='best'),
                                     criterion='gini', max_depth=None,
                                     max_features=None, max_leaf_nodes=None,
                                     min_impurity_decrease=0.0,
                                     min_samples_leaf=1, min_samples_split=2,
                                     min_weight_fraction_leaf=0.0,
                                     probability_threshold=0.5,
                                     random_state=123, splitter='best'), fold=None, fit_kwargs=None, plot_kwargs=None, feature_name=None, groups=None, use_train_data=False)
2023-05-13 18:41:59,209:INFO:Initializing plot_model()
2023-05-13 18:41:59,210:INFO:plot_model(plot=pipeline, fold=KFold(n_splits=10, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=CustomProbabilityThresholdClassifier(ccp_alpha=0.0, class_weight=None,
                                     classifier=DecisionTreeClassifier(ccp_alpha=0.0,
                                                                       class_weight=None,
                                                                       criterion='gini',
                                                                       max_depth=None,
                                                                       max_features=None,
                                                                       max_leaf_nodes=None,
                                                                       min_impurity_decrease=0.0,
                                                                       min_samples_leaf=1,
                                                                       min_samples_split=2,
                                                                       min_weight_fraction_leaf=0.0,
                                                                       random_state=123,
                                                                       splitter='best'),
                                     criterion='gini', max_depth=None,
                                     max_features=None, max_leaf_nodes=None,
                                     min_impurity_decrease=0.0,
                                     min_samples_leaf=1, min_samples_split=2,
                                     min_weight_fraction_leaf=0.0,
                                     probability_threshold=0.5,
                                     random_state=123, splitter='best'), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002CF56CEAE20>, system=True)
2023-05-13 18:41:59,210:INFO:Checking exceptions
2023-05-13 18:41:59,223:INFO:Preloading libraries
2023-05-13 18:41:59,224:INFO:Copying training dataset
2023-05-13 18:41:59,224:INFO:Plot type: pipeline
2023-05-13 18:42:03,055:INFO:Initializing plot_model()
2023-05-13 18:42:03,056:INFO:plot_model(plot=calibration, fold=KFold(n_splits=10, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=CustomProbabilityThresholdClassifier(ccp_alpha=0.0, class_weight=None,
                                     classifier=DecisionTreeClassifier(ccp_alpha=0.0,
                                                                       class_weight=None,
                                                                       criterion='gini',
                                                                       max_depth=None,
                                                                       max_features=None,
                                                                       max_leaf_nodes=None,
                                                                       min_impurity_decrease=0.0,
                                                                       min_samples_leaf=1,
                                                                       min_samples_split=2,
                                                                       min_weight_fraction_leaf=0.0,
                                                                       random_state=123,
                                                                       splitter='best'),
                                     criterion='gini', max_depth=None,
                                     max_features=None, max_leaf_nodes=None,
                                     min_impurity_decrease=0.0,
                                     min_samples_leaf=1, min_samples_split=2,
                                     min_weight_fraction_leaf=0.0,
                                     probability_threshold=0.5,
                                     random_state=123, splitter='best'), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002CF56CEAE20>, system=True)
2023-05-13 18:42:03,056:INFO:Checking exceptions
2023-05-13 18:42:03,067:INFO:Preloading libraries
2023-05-13 18:42:03,067:INFO:Copying training dataset
2023-05-13 18:42:03,067:INFO:Plot type: calibration
2023-05-13 18:42:03,088:INFO:Scoring test/hold-out set
2023-05-13 18:42:04,707:INFO:Initializing plot_model()
2023-05-13 18:42:04,707:INFO:plot_model(plot=vc, fold=KFold(n_splits=10, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=CustomProbabilityThresholdClassifier(ccp_alpha=0.0, class_weight=None,
                                     classifier=DecisionTreeClassifier(ccp_alpha=0.0,
                                                                       class_weight=None,
                                                                       criterion='gini',
                                                                       max_depth=None,
                                                                       max_features=None,
                                                                       max_leaf_nodes=None,
                                                                       min_impurity_decrease=0.0,
                                                                       min_samples_leaf=1,
                                                                       min_samples_split=2,
                                                                       min_weight_fraction_leaf=0.0,
                                                                       random_state=123,
                                                                       splitter='best'),
                                     criterion='gini', max_depth=None,
                                     max_features=None, max_leaf_nodes=None,
                                     min_impurity_decrease=0.0,
                                     min_samples_leaf=1, min_samples_split=2,
                                     min_weight_fraction_leaf=0.0,
                                     probability_threshold=0.5,
                                     random_state=123, splitter='best'), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002CF56CEAE20>, system=True)
2023-05-13 18:42:04,707:INFO:Checking exceptions
2023-05-13 18:42:04,721:INFO:Preloading libraries
2023-05-13 18:42:04,722:INFO:Copying training dataset
2023-05-13 18:42:04,722:INFO:Plot type: vc
2023-05-13 18:42:04,723:INFO:Determining param_name
2023-05-13 18:42:04,723:INFO:param_name: max_depth
2023-05-13 18:42:05,251:INFO:Fitting Model
2023-05-13 18:42:19,332:INFO:Visual Rendered Successfully
2023-05-13 18:42:19,561:INFO:plot_model() successfully completed......................................
2023-05-13 18:42:19,648:INFO:Initializing plot_model()
2023-05-13 18:42:19,649:INFO:plot_model(plot=manifold, fold=KFold(n_splits=10, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=CustomProbabilityThresholdClassifier(ccp_alpha=0.0, class_weight=None,
                                     classifier=DecisionTreeClassifier(ccp_alpha=0.0,
                                                                       class_weight=None,
                                                                       criterion='gini',
                                                                       max_depth=None,
                                                                       max_features=None,
                                                                       max_leaf_nodes=None,
                                                                       min_impurity_decrease=0.0,
                                                                       min_samples_leaf=1,
                                                                       min_samples_split=2,
                                                                       min_weight_fraction_leaf=0.0,
                                                                       random_state=123,
                                                                       splitter='best'),
                                     criterion='gini', max_depth=None,
                                     max_features=None, max_leaf_nodes=None,
                                     min_impurity_decrease=0.0,
                                     min_samples_leaf=1, min_samples_split=2,
                                     min_weight_fraction_leaf=0.0,
                                     probability_threshold=0.5,
                                     random_state=123, splitter='best'), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002CF56CEAE20>, system=True)
2023-05-13 18:42:19,649:INFO:Checking exceptions
2023-05-13 18:42:19,658:INFO:Preloading libraries
2023-05-13 18:42:19,658:INFO:Copying training dataset
2023-05-13 18:42:19,658:INFO:Plot type: manifold
2023-05-13 18:42:20,258:INFO:Fitting & Transforming Model
2023-05-13 18:48:42,350:INFO:Visual Rendered Successfully
2023-05-13 18:48:42,586:INFO:plot_model() successfully completed......................................
2023-05-13 18:48:42,598:INFO:Initializing plot_model()
2023-05-13 18:48:42,599:INFO:plot_model(plot=feature, fold=KFold(n_splits=10, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=CustomProbabilityThresholdClassifier(ccp_alpha=0.0, class_weight=None,
                                     classifier=DecisionTreeClassifier(ccp_alpha=0.0,
                                                                       class_weight=None,
                                                                       criterion='gini',
                                                                       max_depth=None,
                                                                       max_features=None,
                                                                       max_leaf_nodes=None,
                                                                       min_impurity_decrease=0.0,
                                                                       min_samples_leaf=1,
                                                                       min_samples_split=2,
                                                                       min_weight_fraction_leaf=0.0,
                                                                       random_state=123,
                                                                       splitter='best'),
                                     criterion='gini', max_depth=None,
                                     max_features=None, max_leaf_nodes=None,
                                     min_impurity_decrease=0.0,
                                     min_samples_leaf=1, min_samples_split=2,
                                     min_weight_fraction_leaf=0.0,
                                     probability_threshold=0.5,
                                     random_state=123, splitter='best'), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002CF56CEAE20>, system=True)
2023-05-13 18:48:42,599:INFO:Checking exceptions
2023-05-13 18:48:42,609:INFO:Preloading libraries
2023-05-13 18:48:42,609:INFO:Copying training dataset
2023-05-13 18:48:42,609:INFO:Plot type: feature
2023-05-13 18:48:42,610:WARNING:No coef_ found. Trying feature_importances_
2023-05-13 18:48:43,048:INFO:Visual Rendered Successfully
2023-05-13 18:48:43,241:INFO:plot_model() successfully completed......................................
2023-05-13 18:48:43,269:INFO:Initializing plot_model()
2023-05-13 18:48:43,269:INFO:plot_model(plot=auc, fold=None, use_train_data=False, verbose=True, display=None, display_format=None, estimator=CustomProbabilityThresholdClassifier(ccp_alpha=0.0, class_weight=None,
                                     classifier=DecisionTreeClassifier(ccp_alpha=0.0,
                                                                       class_weight=None,
                                                                       criterion='gini',
                                                                       max_depth=None,
                                                                       max_features=None,
                                                                       max_leaf_nodes=None,
                                                                       min_impurity_decrease=0.0,
                                                                       min_samples_leaf=1,
                                                                       min_samples_split=2,
                                                                       min_weight_fraction_leaf=0.0,
                                                                       random_state=123,
                                                                       splitter='best'),
                                     criterion='gini', max_depth=None,
                                     max_features=None, max_leaf_nodes=None,
                                     min_impurity_decrease=0.0,
                                     min_samples_leaf=1, min_samples_split=2,
                                     min_weight_fraction_leaf=0.0,
                                     probability_threshold=0.5,
                                     random_state=123, splitter='best'), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002CF56CEAE20>, system=True)
2023-05-13 18:48:43,269:INFO:Checking exceptions
2023-05-13 18:48:43,282:INFO:Preloading libraries
2023-05-13 18:48:43,283:INFO:Copying training dataset
2023-05-13 18:48:43,283:INFO:Plot type: auc
2023-05-13 18:48:43,835:INFO:Fitting Model
2023-05-13 18:48:43,836:WARNING:c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\sklearn\base.py:439: UserWarning: X does not have valid feature names, but DecisionTreeClassifier was fitted with feature names
  warnings.warn(

2023-05-13 18:48:43,836:INFO:Scoring test/hold-out set
2023-05-13 18:48:44,186:INFO:Visual Rendered Successfully
2023-05-13 18:48:44,387:INFO:plot_model() successfully completed......................................
2023-05-13 18:48:44,564:INFO:Initializing plot_model()
2023-05-13 18:48:44,564:INFO:plot_model(plot=feature_importance, fold=None, use_train_data=False, verbose=True, display=None, display_format=None, estimator=CustomProbabilityThresholdClassifier(ccp_alpha=0.0, class_weight=None,
                                     classifier=DecisionTreeClassifier(ccp_alpha=0.0,
                                                                       class_weight=None,
                                                                       criterion='gini',
                                                                       max_depth=None,
                                                                       max_features=None,
                                                                       max_leaf_nodes=None,
                                                                       min_impurity_decrease=0.0,
                                                                       min_samples_leaf=1,
                                                                       min_samples_split=2,
                                                                       min_weight_fraction_leaf=0.0,
                                                                       random_state=123,
                                                                       splitter='best'),
                                     criterion='gini', max_depth=None,
                                     max_features=None, max_leaf_nodes=None,
                                     min_impurity_decrease=0.0,
                                     min_samples_leaf=1, min_samples_split=2,
                                     min_weight_fraction_leaf=0.0,
                                     probability_threshold=0.5,
                                     random_state=123, splitter='best'), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002CF56CEAE20>, system=True)
2023-05-13 18:48:44,565:INFO:Checking exceptions
2023-05-13 18:49:29,028:INFO:Initializing evaluate_model()
2023-05-13 18:49:29,028:INFO:evaluate_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002CF56CEAE20>, estimator=CustomProbabilityThresholdClassifier(ccp_alpha=0.0, class_weight=None,
                                     classifier=DecisionTreeClassifier(ccp_alpha=0.0,
                                                                       class_weight=None,
                                                                       criterion='gini',
                                                                       max_depth=None,
                                                                       max_features=None,
                                                                       max_leaf_nodes=None,
                                                                       min_impurity_decrease=0.0,
                                                                       min_samples_leaf=1,
                                                                       min_samples_split=2,
                                                                       min_weight_fraction_leaf=0.0,
                                                                       random_state=123,
                                                                       splitter='best'),
                                     criterion='gini', max_depth=None,
                                     max_features=None, max_leaf_nodes=None,
                                     min_impurity_decrease=0.0,
                                     min_samples_leaf=1, min_samples_split=2,
                                     min_weight_fraction_leaf=0.0,
                                     probability_threshold=0.5,
                                     random_state=123, splitter='best'), fold=None, fit_kwargs=None, plot_kwargs=None, feature_name=None, groups=None, use_train_data=False)
2023-05-13 18:49:29,052:INFO:Initializing plot_model()
2023-05-13 18:49:29,053:INFO:plot_model(plot=pipeline, fold=KFold(n_splits=10, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=CustomProbabilityThresholdClassifier(ccp_alpha=0.0, class_weight=None,
                                     classifier=DecisionTreeClassifier(ccp_alpha=0.0,
                                                                       class_weight=None,
                                                                       criterion='gini',
                                                                       max_depth=None,
                                                                       max_features=None,
                                                                       max_leaf_nodes=None,
                                                                       min_impurity_decrease=0.0,
                                                                       min_samples_leaf=1,
                                                                       min_samples_split=2,
                                                                       min_weight_fraction_leaf=0.0,
                                                                       random_state=123,
                                                                       splitter='best'),
                                     criterion='gini', max_depth=None,
                                     max_features=None, max_leaf_nodes=None,
                                     min_impurity_decrease=0.0,
                                     min_samples_leaf=1, min_samples_split=2,
                                     min_weight_fraction_leaf=0.0,
                                     probability_threshold=0.5,
                                     random_state=123, splitter='best'), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002CF56CEAE20>, system=True)
2023-05-13 18:49:29,053:INFO:Checking exceptions
2023-05-13 18:49:29,065:INFO:Preloading libraries
2023-05-13 18:49:29,065:INFO:Copying training dataset
2023-05-13 18:49:29,065:INFO:Plot type: pipeline
2023-05-13 18:49:42,272:INFO:Initializing plot_model()
2023-05-13 18:49:42,273:INFO:plot_model(plot=auc, fold=KFold(n_splits=10, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=CustomProbabilityThresholdClassifier(ccp_alpha=0.0, class_weight=None,
                                     classifier=DecisionTreeClassifier(ccp_alpha=0.0,
                                                                       class_weight=None,
                                                                       criterion='gini',
                                                                       max_depth=None,
                                                                       max_features=None,
                                                                       max_leaf_nodes=None,
                                                                       min_impurity_decrease=0.0,
                                                                       min_samples_leaf=1,
                                                                       min_samples_split=2,
                                                                       min_weight_fraction_leaf=0.0,
                                                                       random_state=123,
                                                                       splitter='best'),
                                     criterion='gini', max_depth=None,
                                     max_features=None, max_leaf_nodes=None,
                                     min_impurity_decrease=0.0,
                                     min_samples_leaf=1, min_samples_split=2,
                                     min_weight_fraction_leaf=0.0,
                                     probability_threshold=0.5,
                                     random_state=123, splitter='best'), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002CF56CEAE20>, system=True)
2023-05-13 18:49:42,273:INFO:Checking exceptions
2023-05-13 18:49:42,284:INFO:Preloading libraries
2023-05-13 18:49:42,285:INFO:Copying training dataset
2023-05-13 18:49:42,285:INFO:Plot type: auc
2023-05-13 18:49:42,798:INFO:Fitting Model
2023-05-13 18:49:42,800:WARNING:c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\sklearn\base.py:439: UserWarning: X does not have valid feature names, but DecisionTreeClassifier was fitted with feature names
  warnings.warn(

2023-05-13 18:49:42,800:INFO:Scoring test/hold-out set
2023-05-13 18:49:43,132:INFO:Visual Rendered Successfully
2023-05-13 18:49:43,352:INFO:plot_model() successfully completed......................................
2023-05-13 18:49:52,687:INFO:Initializing plot_model()
2023-05-13 18:49:52,688:INFO:plot_model(plot=tree, fold=KFold(n_splits=10, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=CustomProbabilityThresholdClassifier(ccp_alpha=0.0, class_weight=None,
                                     classifier=DecisionTreeClassifier(ccp_alpha=0.0,
                                                                       class_weight=None,
                                                                       criterion='gini',
                                                                       max_depth=None,
                                                                       max_features=None,
                                                                       max_leaf_nodes=None,
                                                                       min_impurity_decrease=0.0,
                                                                       min_samples_leaf=1,
                                                                       min_samples_split=2,
                                                                       min_weight_fraction_leaf=0.0,
                                                                       random_state=123,
                                                                       splitter='best'),
                                     criterion='gini', max_depth=None,
                                     max_features=None, max_leaf_nodes=None,
                                     min_impurity_decrease=0.0,
                                     min_samples_leaf=1, min_samples_split=2,
                                     min_weight_fraction_leaf=0.0,
                                     probability_threshold=0.5,
                                     random_state=123, splitter='best'), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002CF56CEAE20>, system=True)
2023-05-13 18:49:52,688:INFO:Checking exceptions
2023-05-13 18:49:56,943:INFO:Initializing plot_model()
2023-05-13 18:49:56,944:INFO:plot_model(plot=dimension, fold=KFold(n_splits=10, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=CustomProbabilityThresholdClassifier(ccp_alpha=0.0, class_weight=None,
                                     classifier=DecisionTreeClassifier(ccp_alpha=0.0,
                                                                       class_weight=None,
                                                                       criterion='gini',
                                                                       max_depth=None,
                                                                       max_features=None,
                                                                       max_leaf_nodes=None,
                                                                       min_impurity_decrease=0.0,
                                                                       min_samples_leaf=1,
                                                                       min_samples_split=2,
                                                                       min_weight_fraction_leaf=0.0,
                                                                       random_state=123,
                                                                       splitter='best'),
                                     criterion='gini', max_depth=None,
                                     max_features=None, max_leaf_nodes=None,
                                     min_impurity_decrease=0.0,
                                     min_samples_leaf=1, min_samples_split=2,
                                     min_weight_fraction_leaf=0.0,
                                     probability_threshold=0.5,
                                     random_state=123, splitter='best'), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002CF56CEAE20>, system=True)
2023-05-13 18:49:56,944:INFO:Checking exceptions
2023-05-13 18:49:56,952:INFO:Preloading libraries
2023-05-13 18:49:56,952:INFO:Copying training dataset
2023-05-13 18:49:56,953:INFO:Plot type: dimension
2023-05-13 18:49:57,105:INFO:Fitting StandardScaler()
2023-05-13 18:49:57,280:INFO:Fitting PCA()
2023-05-13 18:49:58,035:INFO:Fitting & Transforming Model
2023-05-13 18:50:00,775:INFO:Visual Rendered Successfully
2023-05-13 18:50:01,008:INFO:plot_model() successfully completed......................................
2023-05-13 18:50:01,037:INFO:Initializing plot_model()
2023-05-13 18:50:01,037:INFO:plot_model(plot=feature, fold=KFold(n_splits=10, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=CustomProbabilityThresholdClassifier(ccp_alpha=0.0, class_weight=None,
                                     classifier=DecisionTreeClassifier(ccp_alpha=0.0,
                                                                       class_weight=None,
                                                                       criterion='gini',
                                                                       max_depth=None,
                                                                       max_features=None,
                                                                       max_leaf_nodes=None,
                                                                       min_impurity_decrease=0.0,
                                                                       min_samples_leaf=1,
                                                                       min_samples_split=2,
                                                                       min_weight_fraction_leaf=0.0,
                                                                       random_state=123,
                                                                       splitter='best'),
                                     criterion='gini', max_depth=None,
                                     max_features=None, max_leaf_nodes=None,
                                     min_impurity_decrease=0.0,
                                     min_samples_leaf=1, min_samples_split=2,
                                     min_weight_fraction_leaf=0.0,
                                     probability_threshold=0.5,
                                     random_state=123, splitter='best'), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002CF56CEAE20>, system=True)
2023-05-13 18:50:01,037:INFO:Checking exceptions
2023-05-13 18:50:01,047:INFO:Preloading libraries
2023-05-13 18:50:01,048:INFO:Copying training dataset
2023-05-13 18:50:01,048:INFO:Plot type: feature
2023-05-13 18:50:01,048:WARNING:No coef_ found. Trying feature_importances_
2023-05-13 18:50:01,508:INFO:Visual Rendered Successfully
2023-05-13 18:50:01,691:INFO:plot_model() successfully completed......................................
2023-05-13 18:51:04,056:INFO:PyCaret ClassificationExperiment
2023-05-13 18:51:04,056:INFO:Logging name: clf-default-name
2023-05-13 18:51:04,056:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2023-05-13 18:51:04,056:INFO:version 3.0.0
2023-05-13 18:51:04,056:INFO:Initializing setup()
2023-05-13 18:51:04,056:INFO:self.USI: 727b
2023-05-13 18:51:04,056:INFO:self._variable_keys: {'is_multiclass', 'exp_name_log', 'logging_param', 'n_jobs_param', 'seed', 'html_param', 'fix_imbalance', 'log_plots_param', 'USI', 'fold_generator', '_available_plots', 'X_test', 'fold_groups_param', 'X', 'exp_id', 'data', '_ml_usecase', 'y', 'memory', 'y_train', 'pipeline', 'idx', 'gpu_n_jobs_param', 'target_param', 'X_train', 'fold_shuffle_param', 'y_test', 'gpu_param'}
2023-05-13 18:51:04,056:INFO:Checking environment
2023-05-13 18:51:04,056:INFO:python_version: 3.8.16
2023-05-13 18:51:04,056:INFO:python_build: ('default', 'Mar  2 2023 03:18:16')
2023-05-13 18:51:04,056:INFO:machine: AMD64
2023-05-13 18:51:04,056:INFO:platform: Windows-10-10.0.19045-SP0
2023-05-13 18:51:04,059:INFO:Memory: svmem(total=34292408320, available=21201244160, percent=38.2, used=13091164160, free=21201244160)
2023-05-13 18:51:04,059:INFO:Physical Core: 4
2023-05-13 18:51:04,060:INFO:Logical Core: 8
2023-05-13 18:51:04,060:INFO:Checking libraries
2023-05-13 18:51:04,060:INFO:System:
2023-05-13 18:51:04,060:INFO:    python: 3.8.16 (default, Mar  2 2023, 03:18:16) [MSC v.1916 64 bit (AMD64)]
2023-05-13 18:51:04,060:INFO:executable: c:\Users\camil\anaconda3\envs\pycaretenv\python.exe
2023-05-13 18:51:04,060:INFO:   machine: Windows-10-10.0.19045-SP0
2023-05-13 18:51:04,060:INFO:PyCaret required dependencies:
2023-05-13 18:51:04,060:INFO:                 pip: 23.0.1
2023-05-13 18:51:04,061:INFO:          setuptools: 66.0.0
2023-05-13 18:51:04,061:INFO:             pycaret: 3.0.0
2023-05-13 18:51:04,061:INFO:             IPython: 8.12.2
2023-05-13 18:51:04,061:INFO:          ipywidgets: 8.0.6
2023-05-13 18:51:04,061:INFO:                tqdm: 4.65.0
2023-05-13 18:51:04,061:INFO:               numpy: 1.24.3
2023-05-13 18:51:04,061:INFO:              pandas: 1.5.3
2023-05-13 18:51:04,061:INFO:              jinja2: 3.1.2
2023-05-13 18:51:04,061:INFO:               scipy: 1.10.1
2023-05-13 18:51:04,061:INFO:              joblib: 1.2.0
2023-05-13 18:51:04,061:INFO:             sklearn: 1.2.2
2023-05-13 18:51:04,061:INFO:                pyod: 1.0.9
2023-05-13 18:51:04,061:INFO:            imblearn: 0.10.1
2023-05-13 18:51:04,061:INFO:   category_encoders: 2.6.0
2023-05-13 18:51:04,061:INFO:            lightgbm: 3.3.5
2023-05-13 18:51:04,061:INFO:               numba: 0.57.0
2023-05-13 18:51:04,061:INFO:            requests: 2.30.0
2023-05-13 18:51:04,062:INFO:          matplotlib: 3.7.1
2023-05-13 18:51:04,062:INFO:          scikitplot: 0.3.7
2023-05-13 18:51:04,062:INFO:         yellowbrick: 1.5
2023-05-13 18:51:04,062:INFO:              plotly: 5.14.1
2023-05-13 18:51:04,062:INFO:             kaleido: 0.2.1
2023-05-13 18:51:04,062:INFO:         statsmodels: 0.14.0
2023-05-13 18:51:04,062:INFO:              sktime: 0.18.0
2023-05-13 18:51:04,062:INFO:               tbats: 1.1.3
2023-05-13 18:51:04,062:INFO:            pmdarima: 2.0.3
2023-05-13 18:51:04,062:INFO:              psutil: 5.9.5
2023-05-13 18:51:04,062:INFO:PyCaret optional dependencies:
2023-05-13 18:51:04,062:INFO:                shap: Not installed
2023-05-13 18:51:04,062:INFO:           interpret: Not installed
2023-05-13 18:51:04,062:INFO:                umap: Not installed
2023-05-13 18:51:04,062:INFO:    pandas_profiling: Not installed
2023-05-13 18:51:04,062:INFO:  explainerdashboard: Not installed
2023-05-13 18:51:04,062:INFO:             autoviz: Not installed
2023-05-13 18:51:04,062:INFO:           fairlearn: Not installed
2023-05-13 18:51:04,063:INFO:             xgboost: Not installed
2023-05-13 18:51:04,063:INFO:            catboost: Not installed
2023-05-13 18:51:04,063:INFO:              kmodes: Not installed
2023-05-13 18:51:04,063:INFO:             mlxtend: Not installed
2023-05-13 18:51:04,063:INFO:       statsforecast: Not installed
2023-05-13 18:51:04,063:INFO:        tune_sklearn: Not installed
2023-05-13 18:51:04,063:INFO:                 ray: Not installed
2023-05-13 18:51:04,063:INFO:            hyperopt: Not installed
2023-05-13 18:51:04,063:INFO:              optuna: Not installed
2023-05-13 18:51:04,063:INFO:               skopt: Not installed
2023-05-13 18:51:04,063:INFO:              mlflow: Not installed
2023-05-13 18:51:04,063:INFO:              gradio: Not installed
2023-05-13 18:51:04,063:INFO:             fastapi: Not installed
2023-05-13 18:51:04,063:INFO:             uvicorn: Not installed
2023-05-13 18:51:04,063:INFO:              m2cgen: Not installed
2023-05-13 18:51:04,063:INFO:           evidently: Not installed
2023-05-13 18:51:04,063:INFO:               fugue: Not installed
2023-05-13 18:51:04,063:INFO:           streamlit: Not installed
2023-05-13 18:51:04,063:INFO:             prophet: Not installed
2023-05-13 18:51:04,064:INFO:None
2023-05-13 18:51:04,064:INFO:Set up GPU usage.
2023-05-13 18:51:04,064:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-13 18:51:04,064:WARNING:cuML is outdated or not found. Required version is >=22.10, got 3.0.0
2023-05-13 18:51:04,064:INFO:Set up data.
2023-05-13 18:51:04,244:INFO:Set up train/test split.
2023-05-13 18:51:04,333:INFO:Set up index.
2023-05-13 18:51:04,333:INFO:Set up folding strategy.
2023-05-13 18:51:04,333:INFO:Assigning column types.
2023-05-13 18:51:04,350:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-05-13 18:51:04,351:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-13 18:51:04,412:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-05-13 18:51:04,412:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-13 18:51:04,412:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-13 18:51:04,413:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-05-13 18:51:04,413:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-13 18:51:04,443:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-13 18:51:04,449:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-13 18:51:04,450:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-13 18:51:04,642:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-13 18:51:04,644:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-13 18:51:04,763:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-05-13 18:51:04,763:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-13 18:51:04,763:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-13 18:51:04,764:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-05-13 18:51:04,764:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-13 18:51:04,797:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-13 18:51:04,804:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-13 18:51:04,805:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-13 18:51:04,993:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-13 18:51:04,994:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-05-13 18:51:04,994:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-13 18:51:05,118:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-13 18:51:05,119:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-13 18:51:05,119:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-05-13 18:51:05,120:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-13 18:51:05,152:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-13 18:51:05,158:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-13 18:51:05,159:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-13 18:51:05,343:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-13 18:51:05,344:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-13 18:51:05,462:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-13 18:51:05,462:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-13 18:51:05,463:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-05-13 18:51:05,463:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-13 18:51:05,494:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-13 18:51:05,500:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-13 18:51:05,502:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-13 18:51:05,680:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-13 18:51:05,681:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2023-05-13 18:51:05,682:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-13 18:51:05,802:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-13 18:51:05,802:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-13 18:51:05,803:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-13 18:51:05,831:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-13 18:51:05,837:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-13 18:51:05,839:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-13 18:51:06,014:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-13 18:51:06,015:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-13 18:51:06,136:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-13 18:51:06,136:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-13 18:51:06,138:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-13 18:51:06,169:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-13 18:51:06,175:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-13 18:51:06,176:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-13 18:51:06,355:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-13 18:51:06,358:INFO:Preparing preprocessing pipeline...
2023-05-13 18:51:06,363:INFO:Set up label encoding.
2023-05-13 18:51:06,364:INFO:Set up date feature engineering.
2023-05-13 18:51:06,364:INFO:Set up simple imputation.
2023-05-13 18:51:06,398:INFO:Set up encoding of ordinal features.
2023-05-13 18:51:06,435:INFO:Set up encoding of categorical features.
2023-05-13 18:51:06,435:INFO:Set up removing multicollinearity.
2023-05-13 18:51:06,435:INFO:Set up removing outliers.
2023-05-13 18:51:06,436:INFO:Set up imbalanced handling.
2023-05-13 18:51:06,436:INFO:Set up feature normalization.
2023-05-13 18:51:06,439:INFO:Set up column name cleaning.
2023-05-13 18:51:07,270:INFO:Finished creating preprocessing pipeline.
2023-05-13 18:51:07,335:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\camil\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('date_feature_extractor',
                 TransformerWrapper(exclude=None,
                                    include=['Fecha.Expedicion',
                                             'Fecha.Proceso'],
                                    transformer=ExtractDateTimeFeatures(features=['day',
                                                                                  'month'...
                                    transformer=FixImbalancer(estimator=SMOTE(k_neighbors=5,
                                                                              n_jobs=None,
                                                                              random_state=None,
                                                                              sampling_strategy='auto')))),
                ('normalize',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False)
2023-05-13 18:51:07,335:INFO:Creating final display dataframe.
2023-05-13 18:51:08,774:INFO:Setup _display_container:                     Description             Value
0                    Session id               123
1                        Target            Target
2                   Target type            Binary
3                Target mapping        0: 0, 1: 1
4           Original data shape       (50001, 35)
5        Transformed data shape       (79663, 48)
6   Transformed train set shape       (64662, 48)
7    Transformed test set shape       (15001, 48)
8               Ignore features                 7
9              Ordinal features                 4
10             Numeric features                15
11                Date features                 2
12         Categorical features                11
13     Rows with missing values            100.0%
14                   Preprocess              True
15              Imputation type            simple
16           Numeric imputation              mean
17       Categorical imputation              mode
18     Maximum one-hot encoding                25
19              Encoding method              None
20     Remove multicollinearity              True
21  Multicollinearity threshold               0.9
22              Remove outliers              True
23           Outliers threshold              0.05
24                Fix imbalance              True
25         Fix imbalance method             SMOTE
26                    Normalize              True
27             Normalize method            zscore
28               Fold Generator             KFold
29                  Fold Number                10
30                     CPU Jobs                -1
31                      Use GPU              True
32               Log Experiment             False
33              Experiment Name  clf-default-name
34                          USI              727b
2023-05-13 18:51:08,785:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-13 18:51:08,853:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-13 18:51:08,853:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-13 18:51:08,854:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-13 18:51:08,885:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-13 18:51:08,891:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-13 18:51:08,892:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-13 18:51:09,089:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-13 18:51:09,090:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-13 18:51:09,209:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-13 18:51:09,209:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-13 18:51:09,210:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-13 18:51:09,239:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-13 18:51:09,246:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-13 18:51:09,247:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-13 18:51:09,432:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-13 18:51:09,434:INFO:setup() successfully completed in 5.61s...............
2023-05-13 18:51:14,497:INFO:PyCaret ClassificationExperiment
2023-05-13 18:51:14,497:INFO:Logging name: clf-default-name
2023-05-13 18:51:14,497:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2023-05-13 18:51:14,497:INFO:version 3.0.0
2023-05-13 18:51:14,497:INFO:Initializing setup()
2023-05-13 18:51:14,497:INFO:self.USI: fd9d
2023-05-13 18:51:14,497:INFO:self._variable_keys: {'is_multiclass', 'exp_name_log', 'logging_param', 'n_jobs_param', 'seed', 'html_param', 'fix_imbalance', 'log_plots_param', 'USI', 'fold_generator', '_available_plots', 'X_test', 'fold_groups_param', 'X', 'exp_id', 'data', '_ml_usecase', 'y', 'memory', 'y_train', 'pipeline', 'idx', 'gpu_n_jobs_param', 'target_param', 'X_train', 'fold_shuffle_param', 'y_test', 'gpu_param'}
2023-05-13 18:51:14,497:INFO:Checking environment
2023-05-13 18:51:14,497:INFO:python_version: 3.8.16
2023-05-13 18:51:14,497:INFO:python_build: ('default', 'Mar  2 2023 03:18:16')
2023-05-13 18:51:14,497:INFO:machine: AMD64
2023-05-13 18:51:14,497:INFO:platform: Windows-10-10.0.19045-SP0
2023-05-13 18:51:14,500:INFO:Memory: svmem(total=34292408320, available=21244493824, percent=38.0, used=13047914496, free=21244493824)
2023-05-13 18:51:14,500:INFO:Physical Core: 4
2023-05-13 18:51:14,500:INFO:Logical Core: 8
2023-05-13 18:51:14,500:INFO:Checking libraries
2023-05-13 18:51:14,500:INFO:System:
2023-05-13 18:51:14,500:INFO:    python: 3.8.16 (default, Mar  2 2023, 03:18:16) [MSC v.1916 64 bit (AMD64)]
2023-05-13 18:51:14,500:INFO:executable: c:\Users\camil\anaconda3\envs\pycaretenv\python.exe
2023-05-13 18:51:14,501:INFO:   machine: Windows-10-10.0.19045-SP0
2023-05-13 18:51:14,501:INFO:PyCaret required dependencies:
2023-05-13 18:51:14,501:INFO:                 pip: 23.0.1
2023-05-13 18:51:14,501:INFO:          setuptools: 66.0.0
2023-05-13 18:51:14,501:INFO:             pycaret: 3.0.0
2023-05-13 18:51:14,501:INFO:             IPython: 8.12.2
2023-05-13 18:51:14,501:INFO:          ipywidgets: 8.0.6
2023-05-13 18:51:14,501:INFO:                tqdm: 4.65.0
2023-05-13 18:51:14,501:INFO:               numpy: 1.24.3
2023-05-13 18:51:14,501:INFO:              pandas: 1.5.3
2023-05-13 18:51:14,501:INFO:              jinja2: 3.1.2
2023-05-13 18:51:14,501:INFO:               scipy: 1.10.1
2023-05-13 18:51:14,501:INFO:              joblib: 1.2.0
2023-05-13 18:51:14,501:INFO:             sklearn: 1.2.2
2023-05-13 18:51:14,501:INFO:                pyod: 1.0.9
2023-05-13 18:51:14,501:INFO:            imblearn: 0.10.1
2023-05-13 18:51:14,501:INFO:   category_encoders: 2.6.0
2023-05-13 18:51:14,501:INFO:            lightgbm: 3.3.5
2023-05-13 18:51:14,502:INFO:               numba: 0.57.0
2023-05-13 18:51:14,502:INFO:            requests: 2.30.0
2023-05-13 18:51:14,502:INFO:          matplotlib: 3.7.1
2023-05-13 18:51:14,502:INFO:          scikitplot: 0.3.7
2023-05-13 18:51:14,502:INFO:         yellowbrick: 1.5
2023-05-13 18:51:14,502:INFO:              plotly: 5.14.1
2023-05-13 18:51:14,502:INFO:             kaleido: 0.2.1
2023-05-13 18:51:14,502:INFO:         statsmodels: 0.14.0
2023-05-13 18:51:14,502:INFO:              sktime: 0.18.0
2023-05-13 18:51:14,502:INFO:               tbats: 1.1.3
2023-05-13 18:51:14,502:INFO:            pmdarima: 2.0.3
2023-05-13 18:51:14,502:INFO:              psutil: 5.9.5
2023-05-13 18:51:14,502:INFO:PyCaret optional dependencies:
2023-05-13 18:51:14,502:INFO:                shap: Not installed
2023-05-13 18:51:14,502:INFO:           interpret: Not installed
2023-05-13 18:51:14,502:INFO:                umap: Not installed
2023-05-13 18:51:14,502:INFO:    pandas_profiling: Not installed
2023-05-13 18:51:14,502:INFO:  explainerdashboard: Not installed
2023-05-13 18:51:14,502:INFO:             autoviz: Not installed
2023-05-13 18:51:14,504:INFO:           fairlearn: Not installed
2023-05-13 18:51:14,504:INFO:             xgboost: Not installed
2023-05-13 18:51:14,504:INFO:            catboost: Not installed
2023-05-13 18:51:14,504:INFO:              kmodes: Not installed
2023-05-13 18:51:14,504:INFO:             mlxtend: Not installed
2023-05-13 18:51:14,504:INFO:       statsforecast: Not installed
2023-05-13 18:51:14,504:INFO:        tune_sklearn: Not installed
2023-05-13 18:51:14,504:INFO:                 ray: Not installed
2023-05-13 18:51:14,504:INFO:            hyperopt: Not installed
2023-05-13 18:51:14,504:INFO:              optuna: Not installed
2023-05-13 18:51:14,504:INFO:               skopt: Not installed
2023-05-13 18:51:14,504:INFO:              mlflow: Not installed
2023-05-13 18:51:14,504:INFO:              gradio: Not installed
2023-05-13 18:51:14,504:INFO:             fastapi: Not installed
2023-05-13 18:51:14,504:INFO:             uvicorn: Not installed
2023-05-13 18:51:14,504:INFO:              m2cgen: Not installed
2023-05-13 18:51:14,504:INFO:           evidently: Not installed
2023-05-13 18:51:14,504:INFO:               fugue: Not installed
2023-05-13 18:51:14,504:INFO:           streamlit: Not installed
2023-05-13 18:51:14,504:INFO:             prophet: Not installed
2023-05-13 18:51:14,504:INFO:None
2023-05-13 18:51:14,504:INFO:Set up data.
2023-05-13 18:51:14,711:INFO:Set up train/test split.
2023-05-13 18:51:14,803:INFO:Set up index.
2023-05-13 18:51:14,803:INFO:Set up folding strategy.
2023-05-13 18:51:14,803:INFO:Assigning column types.
2023-05-13 18:51:14,821:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-05-13 18:51:14,882:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-05-13 18:51:14,883:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-05-13 18:51:14,920:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-13 18:51:14,920:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-13 18:51:14,988:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-05-13 18:51:14,989:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-05-13 18:51:15,029:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-13 18:51:15,030:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-13 18:51:15,030:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-05-13 18:51:15,097:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-05-13 18:51:15,138:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-13 18:51:15,138:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-13 18:51:15,206:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-05-13 18:51:15,244:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-13 18:51:15,244:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-13 18:51:15,245:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2023-05-13 18:51:15,356:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-13 18:51:15,356:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-13 18:51:15,458:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-13 18:51:15,459:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-13 18:51:15,461:INFO:Preparing preprocessing pipeline...
2023-05-13 18:51:15,464:INFO:Set up label encoding.
2023-05-13 18:51:15,464:INFO:Set up date feature engineering.
2023-05-13 18:51:15,464:INFO:Set up simple imputation.
2023-05-13 18:51:15,486:INFO:Set up encoding of ordinal features.
2023-05-13 18:51:15,507:INFO:Set up encoding of categorical features.
2023-05-13 18:51:15,507:INFO:Set up removing multicollinearity.
2023-05-13 18:51:15,507:INFO:Set up removing outliers.
2023-05-13 18:51:15,507:INFO:Set up imbalanced handling.
2023-05-13 18:51:15,508:INFO:Set up feature normalization.
2023-05-13 18:51:15,510:INFO:Set up column name cleaning.
2023-05-13 18:51:16,263:INFO:Finished creating preprocessing pipeline.
2023-05-13 18:51:16,330:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\camil\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('date_feature_extractor',
                 TransformerWrapper(exclude=None,
                                    include=['Fecha.Expedicion',
                                             'Fecha.Proceso'],
                                    transformer=ExtractDateTimeFeatures(features=['day',
                                                                                  'month'...
                                    transformer=FixImbalancer(estimator=SMOTE(k_neighbors=5,
                                                                              n_jobs=None,
                                                                              random_state=None,
                                                                              sampling_strategy='auto')))),
                ('normalize',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False)
2023-05-13 18:51:16,330:INFO:Creating final display dataframe.
2023-05-13 18:51:16,645:INFO:Setup _display_container:                     Description             Value
0                    Session id               123
1                        Target            Target
2                   Target type            Binary
3                Target mapping        0: 0, 1: 1
4           Original data shape       (50001, 35)
5        Transformed data shape       (79663, 48)
6   Transformed train set shape       (64662, 48)
7    Transformed test set shape       (15001, 48)
8               Ignore features                 7
9              Ordinal features                 4
10             Numeric features                15
11                Date features                 2
12         Categorical features                11
13     Rows with missing values            100.0%
14                   Preprocess              True
15              Imputation type            simple
16           Numeric imputation              mean
17       Categorical imputation              mode
18     Maximum one-hot encoding                25
19              Encoding method              None
20     Remove multicollinearity              True
21  Multicollinearity threshold               0.9
22              Remove outliers              True
23           Outliers threshold              0.05
24                Fix imbalance              True
25         Fix imbalance method             SMOTE
26                    Normalize              True
27             Normalize method            zscore
28               Fold Generator             KFold
29                  Fold Number                10
30                     CPU Jobs                -1
31                      Use GPU             False
32               Log Experiment             False
33              Experiment Name  clf-default-name
34                          USI              fd9d
2023-05-13 18:51:16,765:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-13 18:51:16,765:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-13 18:51:16,862:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-13 18:51:16,862:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-13 18:51:16,863:INFO:setup() successfully completed in 2.56s...............
2023-05-13 18:52:12,919:INFO:Initializing compare_models()
2023-05-13 18:52:12,920:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002CF4F09EE20>, include=['lr', 'dt', 'rf', 'ada', 'svm', 'knn'], fold=None, round=4, cross_validation=True, sort=AUC, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=0.5, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x000002CF4F09EE20>, 'include': ['lr', 'dt', 'rf', 'ada', 'svm', 'knn'], 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'AUC', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': 0.5, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2023-05-13 18:52:12,920:INFO:Checking exceptions
2023-05-13 18:52:12,939:INFO:Preparing display monitor
2023-05-13 18:52:12,978:INFO:Initializing Logistic Regression
2023-05-13 18:52:12,979:INFO:Total runtime is 1.5262762705485026e-05 minutes
2023-05-13 18:52:12,987:INFO:SubProcess create_model() called ==================================
2023-05-13 18:52:12,988:INFO:Initializing create_model()
2023-05-13 18:52:12,988:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002CF4F09EE20>, estimator=lr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=0.5, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002CF56B903A0>, model_only=True, return_train_score=False, kwargs={})
2023-05-13 18:52:12,988:INFO:Checking exceptions
2023-05-13 18:52:12,989:INFO:Importing libraries
2023-05-13 18:52:12,989:INFO:Copying training dataset
2023-05-13 18:52:13,016:INFO:Defining folds
2023-05-13 18:52:13,016:INFO:Declaring metric variables
2023-05-13 18:52:13,025:INFO:Importing untrained model
2023-05-13 18:52:13,033:INFO:Logistic Regression Imported successfully
2023-05-13 18:52:13,045:INFO:Starting cross validation
2023-05-13 18:52:13,055:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-05-13 18:52:25,038:INFO:Calculating mean and std
2023-05-13 18:52:25,039:INFO:Creating metrics dataframe
2023-05-13 18:52:25,280:INFO:Uploading results into container
2023-05-13 18:52:25,281:INFO:Uploading model into container now
2023-05-13 18:52:25,282:INFO:_master_model_container: 1
2023-05-13 18:52:25,283:INFO:_display_container: 2
2023-05-13 18:52:25,286:INFO:CustomProbabilityThresholdClassifier(C=1.0, class_weight=None,
                                     classifier=LogisticRegression(C=1.0,
                                                                   class_weight=None,
                                                                   dual=False,
                                                                   fit_intercept=True,
                                                                   intercept_scaling=1,
                                                                   l1_ratio=None,
                                                                   max_iter=1000,
                                                                   multi_class='auto',
                                                                   n_jobs=None,
                                                                   penalty='l2',
                                                                   random_state=123,
                                                                   solver='lbfgs',
                                                                   tol=0.0001,
                                                                   verbose=0,
                                                                   warm_start=False),
                                     dual=False, fit_intercept=True,
                                     intercept_scaling=1, l1_ratio=None,
                                     max_iter=1000, multi_class='auto',
                                     n_jobs=None, penalty='l2',
                                     probability_threshold=0.5,
                                     random_state=123, solver='lbfgs',
                                     tol=0.0001, verbose=0, warm_start=False)
2023-05-13 18:52:25,286:INFO:create_model() successfully completed......................................
2023-05-13 18:52:25,506:INFO:SubProcess create_model() end ==================================
2023-05-13 18:52:25,506:INFO:Creating metrics dataframe
2023-05-13 18:52:25,518:INFO:Initializing Decision Tree Classifier
2023-05-13 18:52:25,518:INFO:Total runtime is 0.2089992125829061 minutes
2023-05-13 18:52:25,522:INFO:SubProcess create_model() called ==================================
2023-05-13 18:52:25,523:INFO:Initializing create_model()
2023-05-13 18:52:25,524:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002CF4F09EE20>, estimator=dt, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=0.5, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002CF56B903A0>, model_only=True, return_train_score=False, kwargs={})
2023-05-13 18:52:25,524:INFO:Checking exceptions
2023-05-13 18:52:25,525:INFO:Importing libraries
2023-05-13 18:52:25,525:INFO:Copying training dataset
2023-05-13 18:52:25,549:INFO:Defining folds
2023-05-13 18:52:25,549:INFO:Declaring metric variables
2023-05-13 18:52:25,553:INFO:Importing untrained model
2023-05-13 18:52:25,560:INFO:Decision Tree Classifier Imported successfully
2023-05-13 18:52:25,569:INFO:Starting cross validation
2023-05-13 18:52:25,573:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-05-13 18:52:30,182:INFO:Calculating mean and std
2023-05-13 18:52:30,185:INFO:Creating metrics dataframe
2023-05-13 18:52:30,442:INFO:Uploading results into container
2023-05-13 18:52:30,442:INFO:Uploading model into container now
2023-05-13 18:52:30,443:INFO:_master_model_container: 2
2023-05-13 18:52:30,443:INFO:_display_container: 2
2023-05-13 18:52:30,446:INFO:CustomProbabilityThresholdClassifier(ccp_alpha=0.0, class_weight=None,
                                     classifier=DecisionTreeClassifier(ccp_alpha=0.0,
                                                                       class_weight=None,
                                                                       criterion='gini',
                                                                       max_depth=None,
                                                                       max_features=None,
                                                                       max_leaf_nodes=None,
                                                                       min_impurity_decrease=0.0,
                                                                       min_samples_leaf=1,
                                                                       min_samples_split=2,
                                                                       min_weight_fraction_leaf=0.0,
                                                                       random_state=123,
                                                                       splitter='best'),
                                     criterion='gini', max_depth=None,
                                     max_features=None, max_leaf_nodes=None,
                                     min_impurity_decrease=0.0,
                                     min_samples_leaf=1, min_samples_split=2,
                                     min_weight_fraction_leaf=0.0,
                                     probability_threshold=0.5,
                                     random_state=123, splitter='best')
2023-05-13 18:52:30,447:INFO:create_model() successfully completed......................................
2023-05-13 18:52:30,660:INFO:SubProcess create_model() end ==================================
2023-05-13 18:52:30,660:INFO:Creating metrics dataframe
2023-05-13 18:52:30,673:INFO:Initializing Random Forest Classifier
2023-05-13 18:52:30,674:INFO:Total runtime is 0.29493301709493003 minutes
2023-05-13 18:52:30,680:INFO:SubProcess create_model() called ==================================
2023-05-13 18:52:30,681:INFO:Initializing create_model()
2023-05-13 18:52:30,681:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002CF4F09EE20>, estimator=rf, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=0.5, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002CF56B903A0>, model_only=True, return_train_score=False, kwargs={})
2023-05-13 18:52:30,682:INFO:Checking exceptions
2023-05-13 18:52:30,682:INFO:Importing libraries
2023-05-13 18:52:30,682:INFO:Copying training dataset
2023-05-13 18:52:30,707:INFO:Defining folds
2023-05-13 18:52:30,707:INFO:Declaring metric variables
2023-05-13 18:52:30,713:INFO:Importing untrained model
2023-05-13 18:52:30,719:INFO:Random Forest Classifier Imported successfully
2023-05-13 18:52:30,731:INFO:Starting cross validation
2023-05-13 18:52:30,737:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-05-13 18:52:35,464:INFO:Calculating mean and std
2023-05-13 18:52:35,465:INFO:Creating metrics dataframe
2023-05-13 18:52:35,717:INFO:Uploading results into container
2023-05-13 18:52:35,718:INFO:Uploading model into container now
2023-05-13 18:52:35,718:INFO:_master_model_container: 3
2023-05-13 18:52:35,719:INFO:_display_container: 2
2023-05-13 18:52:35,722:INFO:CustomProbabilityThresholdClassifier(bootstrap=True, ccp_alpha=0.0,
                                     class_weight=None,
                                     classifier=RandomForestClassifier(bootstrap=True,
                                                                       ccp_alpha=0.0,
                                                                       class_weight=None,
                                                                       criterion='gini',
                                                                       max_depth=None,
                                                                       max_features='sqrt',
                                                                       max_leaf_nodes=None,
                                                                       max_samples=None,
                                                                       min_impurity_decrease=0.0,
                                                                       min_samples_leaf=1,
                                                                       min_samples_split=2,
                                                                       min_weight_fraction_leaf=0.0,
                                                                       n_...
                                                                       oob_score=False,
                                                                       random_state=123,
                                                                       verbose=0,
                                                                       warm_start=False),
                                     criterion='gini', max_depth=None,
                                     max_features='sqrt', max_leaf_nodes=None,
                                     max_samples=None,
                                     min_impurity_decrease=0.0,
                                     min_samples_leaf=1, min_samples_split=2,
                                     min_weight_fraction_leaf=0.0,
                                     n_estimators=100, n_jobs=-1,
                                     oob_score=False, probability_threshold=0.5,
                                     random_state=123, verbose=0,
                                     warm_start=False)
2023-05-13 18:52:35,722:INFO:create_model() successfully completed......................................
2023-05-13 18:52:35,924:INFO:SubProcess create_model() end ==================================
2023-05-13 18:52:35,925:INFO:Creating metrics dataframe
2023-05-13 18:52:35,941:INFO:Initializing Ada Boost Classifier
2023-05-13 18:52:35,941:INFO:Total runtime is 0.38271591265996296 minutes
2023-05-13 18:52:35,945:INFO:SubProcess create_model() called ==================================
2023-05-13 18:52:35,946:INFO:Initializing create_model()
2023-05-13 18:52:35,946:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002CF4F09EE20>, estimator=ada, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=0.5, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002CF56B903A0>, model_only=True, return_train_score=False, kwargs={})
2023-05-13 18:52:35,946:INFO:Checking exceptions
2023-05-13 18:52:35,947:INFO:Importing libraries
2023-05-13 18:52:35,947:INFO:Copying training dataset
2023-05-13 18:52:35,969:INFO:Defining folds
2023-05-13 18:52:35,969:INFO:Declaring metric variables
2023-05-13 18:52:35,975:INFO:Importing untrained model
2023-05-13 18:52:35,982:INFO:Ada Boost Classifier Imported successfully
2023-05-13 18:52:35,993:INFO:Starting cross validation
2023-05-13 18:52:35,998:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-05-13 18:52:40,430:INFO:Calculating mean and std
2023-05-13 18:52:40,432:INFO:Creating metrics dataframe
2023-05-13 18:52:40,676:INFO:Uploading results into container
2023-05-13 18:52:40,678:INFO:Uploading model into container now
2023-05-13 18:52:40,678:INFO:_master_model_container: 4
2023-05-13 18:52:40,678:INFO:_display_container: 2
2023-05-13 18:52:40,679:INFO:CustomProbabilityThresholdClassifier(algorithm='SAMME.R',
                                     base_estimator='deprecated',
                                     classifier=AdaBoostClassifier(algorithm='SAMME.R',
                                                                   base_estimator='deprecated',
                                                                   estimator=None,
                                                                   learning_rate=1.0,
                                                                   n_estimators=50,
                                                                   random_state=123),
                                     estimator=None, learning_rate=1.0,
                                     n_estimators=50, probability_threshold=0.5,
                                     random_state=123)
2023-05-13 18:52:40,679:INFO:create_model() successfully completed......................................
2023-05-13 18:52:40,891:INFO:SubProcess create_model() end ==================================
2023-05-13 18:52:40,892:INFO:Creating metrics dataframe
2023-05-13 18:52:40,908:INFO:Initializing SVM - Linear Kernel
2023-05-13 18:52:40,909:INFO:Total runtime is 0.46551772753397624 minutes
2023-05-13 18:52:40,914:INFO:SubProcess create_model() called ==================================
2023-05-13 18:52:40,914:INFO:Initializing create_model()
2023-05-13 18:52:40,914:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002CF4F09EE20>, estimator=svm, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=0.5, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002CF56B903A0>, model_only=True, return_train_score=False, kwargs={})
2023-05-13 18:52:40,915:INFO:Checking exceptions
2023-05-13 18:52:40,915:INFO:Importing libraries
2023-05-13 18:52:40,915:INFO:Copying training dataset
2023-05-13 18:52:40,938:INFO:Defining folds
2023-05-13 18:52:40,939:INFO:Declaring metric variables
2023-05-13 18:52:40,947:INFO:Importing untrained model
2023-05-13 18:52:40,952:INFO:SVM - Linear Kernel Imported successfully
2023-05-13 18:52:40,964:INFO:Starting cross validation
2023-05-13 18:52:40,968:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-05-13 18:52:42,261:WARNING:c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\pycaret\internal\meta_estimators.py", line 170, in __getattr__
    return getattr(self.classifier_, name)
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-05-13 18:52:42,317:WARNING:c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\pycaret\internal\meta_estimators.py", line 170, in __getattr__
    return getattr(self.classifier_, name)
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-05-13 18:52:42,331:WARNING:c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\pycaret\internal\meta_estimators.py", line 170, in __getattr__
    return getattr(self.classifier_, name)
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-05-13 18:52:42,355:WARNING:c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\pycaret\internal\meta_estimators.py", line 170, in __getattr__
    return getattr(self.classifier_, name)
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-05-13 18:52:42,398:WARNING:c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\pycaret\internal\meta_estimators.py", line 170, in __getattr__
    return getattr(self.classifier_, name)
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-05-13 18:52:42,407:WARNING:c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\pycaret\internal\meta_estimators.py", line 170, in __getattr__
    return getattr(self.classifier_, name)
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-05-13 18:52:42,434:WARNING:c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\pycaret\internal\meta_estimators.py", line 170, in __getattr__
    return getattr(self.classifier_, name)
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-05-13 18:52:42,526:WARNING:c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\pycaret\internal\meta_estimators.py", line 170, in __getattr__
    return getattr(self.classifier_, name)
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-05-13 18:52:43,831:WARNING:c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\pycaret\internal\meta_estimators.py", line 170, in __getattr__
    return getattr(self.classifier_, name)
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-05-13 18:52:43,845:WARNING:c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\pycaret\internal\meta_estimators.py", line 170, in __getattr__
    return getattr(self.classifier_, name)
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-05-13 18:52:44,844:INFO:Calculating mean and std
2023-05-13 18:52:44,845:INFO:Creating metrics dataframe
2023-05-13 18:52:45,092:INFO:Uploading results into container
2023-05-13 18:52:45,094:INFO:Uploading model into container now
2023-05-13 18:52:45,095:INFO:_master_model_container: 5
2023-05-13 18:52:45,095:INFO:_display_container: 2
2023-05-13 18:52:45,099:INFO:CustomProbabilityThresholdClassifier(alpha=0.0001, average=False,
                                     class_weight=None,
                                     classifier=SGDClassifier(alpha=0.0001,
                                                              average=False,
                                                              class_weight=None,
                                                              early_stopping=False,
                                                              epsilon=0.1,
                                                              eta0=0.001,
                                                              fit_intercept=True,
                                                              l1_ratio=0.15,
                                                              learning_rate='optimal',
                                                              loss='hinge',
                                                              max_iter=1000,
                                                              n_iter_no_change=5,
                                                              n_jobs=-1,
                                                              penalty='l2',
                                                              power_t=0.5,
                                                              random_state=123...
                                                              validation_fraction=0.1,
                                                              verbose=0,
                                                              warm_start=False),
                                     early_stopping=False, epsilon=0.1,
                                     eta0=0.001, fit_intercept=True,
                                     l1_ratio=0.15, learning_rate='optimal',
                                     loss='hinge', max_iter=1000,
                                     n_iter_no_change=5, n_jobs=-1,
                                     penalty='l2', power_t=0.5,
                                     probability_threshold=0.5,
                                     random_state=123, shuffle=True, tol=0.001,
                                     validation_fraction=0.1, verbose=0,
                                     warm_start=False)
2023-05-13 18:52:45,100:INFO:create_model() successfully completed......................................
2023-05-13 18:52:45,302:INFO:SubProcess create_model() end ==================================
2023-05-13 18:52:45,302:INFO:Creating metrics dataframe
2023-05-13 18:52:45,316:INFO:Initializing K Neighbors Classifier
2023-05-13 18:52:45,317:INFO:Total runtime is 0.5389865239461263 minutes
2023-05-13 18:52:45,323:INFO:SubProcess create_model() called ==================================
2023-05-13 18:52:45,324:INFO:Initializing create_model()
2023-05-13 18:52:45,324:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002CF4F09EE20>, estimator=knn, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=0.5, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002CF56B903A0>, model_only=True, return_train_score=False, kwargs={})
2023-05-13 18:52:45,324:INFO:Checking exceptions
2023-05-13 18:52:45,324:INFO:Importing libraries
2023-05-13 18:52:45,325:INFO:Copying training dataset
2023-05-13 18:52:45,347:INFO:Defining folds
2023-05-13 18:52:45,347:INFO:Declaring metric variables
2023-05-13 18:52:45,352:INFO:Importing untrained model
2023-05-13 18:52:45,359:INFO:K Neighbors Classifier Imported successfully
2023-05-13 18:52:45,369:INFO:Starting cross validation
2023-05-13 18:52:45,374:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-05-13 18:52:57,570:INFO:Calculating mean and std
2023-05-13 18:52:57,572:INFO:Creating metrics dataframe
2023-05-13 18:52:57,818:INFO:Uploading results into container
2023-05-13 18:52:57,819:INFO:Uploading model into container now
2023-05-13 18:52:57,819:INFO:_master_model_container: 6
2023-05-13 18:52:57,820:INFO:_display_container: 2
2023-05-13 18:52:57,821:INFO:CustomProbabilityThresholdClassifier(algorithm='auto',
                                     classifier=KNeighborsClassifier(algorithm='auto',
                                                                     leaf_size=30,
                                                                     metric='minkowski',
                                                                     metric_params=None,
                                                                     n_jobs=-1,
                                                                     n_neighbors=5,
                                                                     p=2,
                                                                     weights='uniform'),
                                     leaf_size=30, metric='minkowski',
                                     metric_params=None, n_jobs=-1,
                                     n_neighbors=5, p=2,
                                     probability_threshold=0.5,
                                     weights='uniform')
2023-05-13 18:52:57,821:INFO:create_model() successfully completed......................................
2023-05-13 18:52:58,034:INFO:SubProcess create_model() end ==================================
2023-05-13 18:52:58,034:INFO:Creating metrics dataframe
2023-05-13 18:52:58,068:INFO:Initializing create_model()
2023-05-13 18:52:58,068:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002CF4F09EE20>, estimator=CustomProbabilityThresholdClassifier(ccp_alpha=0.0, class_weight=None,
                                     classifier=DecisionTreeClassifier(ccp_alpha=0.0,
                                                                       class_weight=None,
                                                                       criterion='gini',
                                                                       max_depth=None,
                                                                       max_features=None,
                                                                       max_leaf_nodes=None,
                                                                       min_impurity_decrease=0.0,
                                                                       min_samples_leaf=1,
                                                                       min_samples_split=2,
                                                                       min_weight_fraction_leaf=0.0,
                                                                       random_state=123,
                                                                       splitter='best'),
                                     criterion='gini', max_depth=None,
                                     max_features=None, max_leaf_nodes=None,
                                     min_impurity_decrease=0.0,
                                     min_samples_leaf=1, min_samples_split=2,
                                     min_weight_fraction_leaf=0.0,
                                     probability_threshold=0.5,
                                     random_state=123, splitter='best'), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=0.5, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-05-13 18:52:58,068:INFO:Checking exceptions
2023-05-13 18:52:58,070:INFO:Importing libraries
2023-05-13 18:52:58,070:INFO:Copying training dataset
2023-05-13 18:52:58,095:INFO:Defining folds
2023-05-13 18:52:58,095:INFO:Declaring metric variables
2023-05-13 18:52:58,095:INFO:Importing untrained model
2023-05-13 18:52:58,096:INFO:Declaring custom model
2023-05-13 18:52:58,097:INFO:CustomProbabilityThresholdClassifier Imported successfully
2023-05-13 18:52:58,100:INFO:Cross validation set to False
2023-05-13 18:52:58,100:INFO:Fitting Model
2023-05-13 18:52:59,065:INFO:CustomProbabilityThresholdClassifier(ccp_alpha=0.0, class_weight=None,
                                     classifier=DecisionTreeClassifier(ccp_alpha=0.0,
                                                                       class_weight=None,
                                                                       criterion='gini',
                                                                       max_depth=None,
                                                                       max_features=None,
                                                                       max_leaf_nodes=None,
                                                                       min_impurity_decrease=0.0,
                                                                       min_samples_leaf=1,
                                                                       min_samples_split=2,
                                                                       min_weight_fraction_leaf=0.0,
                                                                       random_state=123,
                                                                       splitter='best'),
                                     criterion='gini', max_depth=None,
                                     max_features=None, max_leaf_nodes=None,
                                     min_impurity_decrease=0.0,
                                     min_samples_leaf=1, min_samples_split=2,
                                     min_weight_fraction_leaf=0.0,
                                     probability_threshold=0.5,
                                     random_state=123, splitter='best')
2023-05-13 18:52:59,065:INFO:create_model() successfully completed......................................
2023-05-13 18:52:59,311:INFO:_master_model_container: 6
2023-05-13 18:52:59,312:INFO:_display_container: 2
2023-05-13 18:52:59,314:INFO:CustomProbabilityThresholdClassifier(ccp_alpha=0.0, class_weight=None,
                                     classifier=DecisionTreeClassifier(ccp_alpha=0.0,
                                                                       class_weight=None,
                                                                       criterion='gini',
                                                                       max_depth=None,
                                                                       max_features=None,
                                                                       max_leaf_nodes=None,
                                                                       min_impurity_decrease=0.0,
                                                                       min_samples_leaf=1,
                                                                       min_samples_split=2,
                                                                       min_weight_fraction_leaf=0.0,
                                                                       random_state=123,
                                                                       splitter='best'),
                                     criterion='gini', max_depth=None,
                                     max_features=None, max_leaf_nodes=None,
                                     min_impurity_decrease=0.0,
                                     min_samples_leaf=1, min_samples_split=2,
                                     min_weight_fraction_leaf=0.0,
                                     probability_threshold=0.5,
                                     random_state=123, splitter='best')
2023-05-13 18:52:59,314:INFO:compare_models() successfully completed......................................
2023-05-13 18:52:59,609:INFO:Initializing evaluate_model()
2023-05-13 18:52:59,609:INFO:evaluate_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002CF4F09EE20>, estimator=CustomProbabilityThresholdClassifier(ccp_alpha=0.0, class_weight=None,
                                     classifier=DecisionTreeClassifier(ccp_alpha=0.0,
                                                                       class_weight=None,
                                                                       criterion='gini',
                                                                       max_depth=None,
                                                                       max_features=None,
                                                                       max_leaf_nodes=None,
                                                                       min_impurity_decrease=0.0,
                                                                       min_samples_leaf=1,
                                                                       min_samples_split=2,
                                                                       min_weight_fraction_leaf=0.0,
                                                                       random_state=123,
                                                                       splitter='best'),
                                     criterion='gini', max_depth=None,
                                     max_features=None, max_leaf_nodes=None,
                                     min_impurity_decrease=0.0,
                                     min_samples_leaf=1, min_samples_split=2,
                                     min_weight_fraction_leaf=0.0,
                                     probability_threshold=0.5,
                                     random_state=123, splitter='best'), fold=None, fit_kwargs=None, plot_kwargs=None, feature_name=None, groups=None, use_train_data=False)
2023-05-13 18:52:59,635:INFO:Initializing plot_model()
2023-05-13 18:52:59,635:INFO:plot_model(plot=pipeline, fold=KFold(n_splits=10, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=CustomProbabilityThresholdClassifier(ccp_alpha=0.0, class_weight=None,
                                     classifier=DecisionTreeClassifier(ccp_alpha=0.0,
                                                                       class_weight=None,
                                                                       criterion='gini',
                                                                       max_depth=None,
                                                                       max_features=None,
                                                                       max_leaf_nodes=None,
                                                                       min_impurity_decrease=0.0,
                                                                       min_samples_leaf=1,
                                                                       min_samples_split=2,
                                                                       min_weight_fraction_leaf=0.0,
                                                                       random_state=123,
                                                                       splitter='best'),
                                     criterion='gini', max_depth=None,
                                     max_features=None, max_leaf_nodes=None,
                                     min_impurity_decrease=0.0,
                                     min_samples_leaf=1, min_samples_split=2,
                                     min_weight_fraction_leaf=0.0,
                                     probability_threshold=0.5,
                                     random_state=123, splitter='best'), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002CF4F09EE20>, system=True)
2023-05-13 18:52:59,636:INFO:Checking exceptions
2023-05-13 18:52:59,646:INFO:Preloading libraries
2023-05-13 18:52:59,646:INFO:Copying training dataset
2023-05-13 18:52:59,646:INFO:Plot type: pipeline
2023-05-13 18:53:06,191:INFO:Initializing evaluate_model()
2023-05-13 18:53:06,191:INFO:evaluate_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002CF4F09EE20>, estimator=CustomProbabilityThresholdClassifier(ccp_alpha=0.0, class_weight=None,
                                     classifier=DecisionTreeClassifier(ccp_alpha=0.0,
                                                                       class_weight=None,
                                                                       criterion='gini',
                                                                       max_depth=None,
                                                                       max_features=None,
                                                                       max_leaf_nodes=None,
                                                                       min_impurity_decrease=0.0,
                                                                       min_samples_leaf=1,
                                                                       min_samples_split=2,
                                                                       min_weight_fraction_leaf=0.0,
                                                                       random_state=123,
                                                                       splitter='best'),
                                     criterion='gini', max_depth=None,
                                     max_features=None, max_leaf_nodes=None,
                                     min_impurity_decrease=0.0,
                                     min_samples_leaf=1, min_samples_split=2,
                                     min_weight_fraction_leaf=0.0,
                                     probability_threshold=0.5,
                                     random_state=123, splitter='best'), fold=None, fit_kwargs=None, plot_kwargs=None, feature_name=None, groups=None, use_train_data=False)
2023-05-13 18:53:06,216:INFO:Initializing plot_model()
2023-05-13 18:53:06,216:INFO:plot_model(plot=pipeline, fold=KFold(n_splits=10, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=CustomProbabilityThresholdClassifier(ccp_alpha=0.0, class_weight=None,
                                     classifier=DecisionTreeClassifier(ccp_alpha=0.0,
                                                                       class_weight=None,
                                                                       criterion='gini',
                                                                       max_depth=None,
                                                                       max_features=None,
                                                                       max_leaf_nodes=None,
                                                                       min_impurity_decrease=0.0,
                                                                       min_samples_leaf=1,
                                                                       min_samples_split=2,
                                                                       min_weight_fraction_leaf=0.0,
                                                                       random_state=123,
                                                                       splitter='best'),
                                     criterion='gini', max_depth=None,
                                     max_features=None, max_leaf_nodes=None,
                                     min_impurity_decrease=0.0,
                                     min_samples_leaf=1, min_samples_split=2,
                                     min_weight_fraction_leaf=0.0,
                                     probability_threshold=0.5,
                                     random_state=123, splitter='best'), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002CF4F09EE20>, system=True)
2023-05-13 18:53:06,217:INFO:Checking exceptions
2023-05-13 18:53:06,230:INFO:Preloading libraries
2023-05-13 18:53:06,231:INFO:Copying training dataset
2023-05-13 18:53:06,231:INFO:Plot type: pipeline
2023-05-13 18:53:11,817:INFO:Initializing plot_model()
2023-05-13 18:53:11,817:INFO:plot_model(plot=feature, fold=KFold(n_splits=10, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=CustomProbabilityThresholdClassifier(ccp_alpha=0.0, class_weight=None,
                                     classifier=DecisionTreeClassifier(ccp_alpha=0.0,
                                                                       class_weight=None,
                                                                       criterion='gini',
                                                                       max_depth=None,
                                                                       max_features=None,
                                                                       max_leaf_nodes=None,
                                                                       min_impurity_decrease=0.0,
                                                                       min_samples_leaf=1,
                                                                       min_samples_split=2,
                                                                       min_weight_fraction_leaf=0.0,
                                                                       random_state=123,
                                                                       splitter='best'),
                                     criterion='gini', max_depth=None,
                                     max_features=None, max_leaf_nodes=None,
                                     min_impurity_decrease=0.0,
                                     min_samples_leaf=1, min_samples_split=2,
                                     min_weight_fraction_leaf=0.0,
                                     probability_threshold=0.5,
                                     random_state=123, splitter='best'), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002CF4F09EE20>, system=True)
2023-05-13 18:53:11,818:INFO:Checking exceptions
2023-05-13 18:53:11,830:INFO:Preloading libraries
2023-05-13 18:53:11,831:INFO:Copying training dataset
2023-05-13 18:53:11,831:INFO:Plot type: feature
2023-05-13 18:53:11,831:WARNING:No coef_ found. Trying feature_importances_
2023-05-13 18:53:12,173:INFO:Visual Rendered Successfully
2023-05-13 18:53:12,398:INFO:plot_model() successfully completed......................................
2023-05-13 18:53:34,991:INFO:PyCaret ClassificationExperiment
2023-05-13 18:53:34,991:INFO:Logging name: clf-default-name
2023-05-13 18:53:34,991:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2023-05-13 18:53:34,991:INFO:version 3.0.0
2023-05-13 18:53:34,991:INFO:Initializing setup()
2023-05-13 18:53:34,991:INFO:self.USI: 0c7b
2023-05-13 18:53:34,991:INFO:self._variable_keys: {'is_multiclass', 'exp_name_log', 'logging_param', 'n_jobs_param', 'seed', 'html_param', 'fix_imbalance', 'log_plots_param', 'USI', 'fold_generator', '_available_plots', 'X_test', 'fold_groups_param', 'X', 'exp_id', 'data', '_ml_usecase', 'y', 'memory', 'y_train', 'pipeline', 'idx', 'gpu_n_jobs_param', 'target_param', 'X_train', 'fold_shuffle_param', 'y_test', 'gpu_param'}
2023-05-13 18:53:34,991:INFO:Checking environment
2023-05-13 18:53:34,992:INFO:python_version: 3.8.16
2023-05-13 18:53:34,992:INFO:python_build: ('default', 'Mar  2 2023 03:18:16')
2023-05-13 18:53:34,992:INFO:machine: AMD64
2023-05-13 18:53:34,992:INFO:platform: Windows-10-10.0.19045-SP0
2023-05-13 18:53:34,994:INFO:Memory: svmem(total=34292408320, available=20251398144, percent=40.9, used=14041010176, free=20251398144)
2023-05-13 18:53:34,994:INFO:Physical Core: 4
2023-05-13 18:53:34,994:INFO:Logical Core: 8
2023-05-13 18:53:34,995:INFO:Checking libraries
2023-05-13 18:53:34,995:INFO:System:
2023-05-13 18:53:34,995:INFO:    python: 3.8.16 (default, Mar  2 2023, 03:18:16) [MSC v.1916 64 bit (AMD64)]
2023-05-13 18:53:34,995:INFO:executable: c:\Users\camil\anaconda3\envs\pycaretenv\python.exe
2023-05-13 18:53:34,995:INFO:   machine: Windows-10-10.0.19045-SP0
2023-05-13 18:53:34,995:INFO:PyCaret required dependencies:
2023-05-13 18:53:34,995:INFO:                 pip: 23.0.1
2023-05-13 18:53:34,995:INFO:          setuptools: 66.0.0
2023-05-13 18:53:34,995:INFO:             pycaret: 3.0.0
2023-05-13 18:53:34,995:INFO:             IPython: 8.12.2
2023-05-13 18:53:34,995:INFO:          ipywidgets: 8.0.6
2023-05-13 18:53:34,996:INFO:                tqdm: 4.65.0
2023-05-13 18:53:34,996:INFO:               numpy: 1.24.3
2023-05-13 18:53:34,996:INFO:              pandas: 1.5.3
2023-05-13 18:53:34,996:INFO:              jinja2: 3.1.2
2023-05-13 18:53:34,996:INFO:               scipy: 1.10.1
2023-05-13 18:53:34,996:INFO:              joblib: 1.2.0
2023-05-13 18:53:34,996:INFO:             sklearn: 1.2.2
2023-05-13 18:53:34,996:INFO:                pyod: 1.0.9
2023-05-13 18:53:34,996:INFO:            imblearn: 0.10.1
2023-05-13 18:53:34,996:INFO:   category_encoders: 2.6.0
2023-05-13 18:53:34,996:INFO:            lightgbm: 3.3.5
2023-05-13 18:53:34,996:INFO:               numba: 0.57.0
2023-05-13 18:53:34,996:INFO:            requests: 2.30.0
2023-05-13 18:53:34,996:INFO:          matplotlib: 3.7.1
2023-05-13 18:53:34,996:INFO:          scikitplot: 0.3.7
2023-05-13 18:53:34,996:INFO:         yellowbrick: 1.5
2023-05-13 18:53:34,997:INFO:              plotly: 5.14.1
2023-05-13 18:53:34,997:INFO:             kaleido: 0.2.1
2023-05-13 18:53:34,997:INFO:         statsmodels: 0.14.0
2023-05-13 18:53:34,997:INFO:              sktime: 0.18.0
2023-05-13 18:53:34,997:INFO:               tbats: 1.1.3
2023-05-13 18:53:34,997:INFO:            pmdarima: 2.0.3
2023-05-13 18:53:34,997:INFO:              psutil: 5.9.5
2023-05-13 18:53:34,997:INFO:PyCaret optional dependencies:
2023-05-13 18:53:34,997:INFO:                shap: Not installed
2023-05-13 18:53:34,997:INFO:           interpret: Not installed
2023-05-13 18:53:34,997:INFO:                umap: Not installed
2023-05-13 18:53:34,997:INFO:    pandas_profiling: Not installed
2023-05-13 18:53:34,997:INFO:  explainerdashboard: Not installed
2023-05-13 18:53:34,997:INFO:             autoviz: Not installed
2023-05-13 18:53:34,997:INFO:           fairlearn: Not installed
2023-05-13 18:53:34,998:INFO:             xgboost: Not installed
2023-05-13 18:53:34,998:INFO:            catboost: Not installed
2023-05-13 18:53:34,998:INFO:              kmodes: Not installed
2023-05-13 18:53:34,998:INFO:             mlxtend: Not installed
2023-05-13 18:53:34,998:INFO:       statsforecast: Not installed
2023-05-13 18:53:34,998:INFO:        tune_sklearn: Not installed
2023-05-13 18:53:34,998:INFO:                 ray: Not installed
2023-05-13 18:53:34,998:INFO:            hyperopt: Not installed
2023-05-13 18:53:34,998:INFO:              optuna: Not installed
2023-05-13 18:53:34,998:INFO:               skopt: Not installed
2023-05-13 18:53:34,998:INFO:              mlflow: Not installed
2023-05-13 18:53:34,998:INFO:              gradio: Not installed
2023-05-13 18:53:34,998:INFO:             fastapi: Not installed
2023-05-13 18:53:34,998:INFO:             uvicorn: Not installed
2023-05-13 18:53:34,998:INFO:              m2cgen: Not installed
2023-05-13 18:53:34,998:INFO:           evidently: Not installed
2023-05-13 18:53:34,998:INFO:               fugue: Not installed
2023-05-13 18:53:34,998:INFO:           streamlit: Not installed
2023-05-13 18:53:34,998:INFO:             prophet: Not installed
2023-05-13 18:53:34,999:INFO:None
2023-05-13 18:53:34,999:INFO:Set up data.
2023-05-13 18:53:35,176:INFO:Set up train/test split.
2023-05-13 18:53:35,256:INFO:Set up index.
2023-05-13 18:53:35,256:INFO:Set up folding strategy.
2023-05-13 18:53:35,256:INFO:Assigning column types.
2023-05-13 18:53:35,272:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-05-13 18:53:35,324:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-05-13 18:53:35,325:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-05-13 18:53:35,367:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-13 18:53:35,367:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-13 18:53:35,429:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-05-13 18:53:35,430:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-05-13 18:53:35,467:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-13 18:53:35,468:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-13 18:53:35,468:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-05-13 18:53:35,530:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-05-13 18:53:35,570:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-13 18:53:35,570:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-13 18:53:35,632:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-05-13 18:53:35,669:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-13 18:53:35,669:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-13 18:53:35,670:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2023-05-13 18:53:35,767:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-13 18:53:35,768:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-13 18:53:35,872:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-13 18:53:35,872:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-13 18:53:35,874:INFO:Preparing preprocessing pipeline...
2023-05-13 18:53:35,878:INFO:Set up label encoding.
2023-05-13 18:53:35,878:INFO:Set up date feature engineering.
2023-05-13 18:53:35,878:INFO:Set up simple imputation.
2023-05-13 18:53:35,899:INFO:Set up encoding of ordinal features.
2023-05-13 18:53:35,921:INFO:Set up encoding of categorical features.
2023-05-13 18:53:35,921:INFO:Set up removing multicollinearity.
2023-05-13 18:53:35,921:INFO:Set up removing outliers.
2023-05-13 18:53:35,922:INFO:Set up imbalanced handling.
2023-05-13 18:53:35,922:INFO:Set up feature normalization.
2023-05-13 18:53:35,924:INFO:Set up column name cleaning.
2023-05-13 18:53:37,749:WARNING:c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\sklearn\base.py:439: UserWarning: X does not have valid feature names, but IsolationForest was fitted with feature names
  warnings.warn(

2023-05-13 18:53:41,338:INFO:Finished creating preprocessing pipeline.
2023-05-13 18:53:41,409:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\camil\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('date_feature_extractor',
                 TransformerWrapper(exclude=None, include=['Fecha.Expedicion'],
                                    transformer=ExtractDateTimeFeatures(features=['day',
                                                                                  'month',
                                                                                  'year']))),
                ('nu...
                                    transformer=FixImbalancer(estimator=SMOTE(k_neighbors=5,
                                                                              n_jobs=None,
                                                                              random_state=None,
                                                                              sampling_strategy='auto')))),
                ('normalize',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False)
2023-05-13 18:53:41,409:INFO:Creating final display dataframe.
2023-05-13 18:53:42,260:WARNING:c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\sklearn\base.py:439: UserWarning: X does not have valid feature names, but IsolationForest was fitted with feature names
  warnings.warn(

2023-05-13 18:53:46,983:INFO:Setup _display_container:                     Description             Value
0                    Session id               123
1                        Target            Target
2                   Target type            Binary
3                Target mapping        0: 0, 1: 1
4           Original data shape       (50001, 35)
5        Transformed data shape       (79575, 45)
6   Transformed train set shape       (64574, 45)
7    Transformed test set shape       (15001, 45)
8               Ignore features                 7
9              Ordinal features                 4
10             Numeric features                15
11                Date features                 1
12         Categorical features                11
13     Rows with missing values            100.0%
14                   Preprocess              True
15              Imputation type            simple
16           Numeric imputation              mean
17       Categorical imputation              mode
18     Maximum one-hot encoding                25
19              Encoding method              None
20     Remove multicollinearity              True
21  Multicollinearity threshold               0.9
22              Remove outliers              True
23           Outliers threshold              0.05
24                Fix imbalance              True
25         Fix imbalance method             SMOTE
26                    Normalize              True
27             Normalize method            zscore
28               Fold Generator             KFold
29                  Fold Number                10
30                     CPU Jobs                -1
31                      Use GPU             False
32               Log Experiment             False
33              Experiment Name  clf-default-name
34                          USI              0c7b
2023-05-13 18:53:47,086:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-13 18:53:47,087:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-13 18:53:47,174:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-13 18:53:47,175:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-13 18:53:47,175:INFO:setup() successfully completed in 12.4s...............
2023-05-13 18:53:47,235:INFO:Initializing compare_models()
2023-05-13 18:53:47,235:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002CF45207BB0>, include=['lr', 'dt', 'rf', 'ada', 'svm', 'knn'], fold=None, round=4, cross_validation=True, sort=AUC, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=0.5, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x000002CF45207BB0>, 'include': ['lr', 'dt', 'rf', 'ada', 'svm', 'knn'], 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'AUC', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': 0.5, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2023-05-13 18:53:47,236:INFO:Checking exceptions
2023-05-13 18:53:47,255:INFO:Preparing display monitor
2023-05-13 18:53:47,295:INFO:Initializing Logistic Regression
2023-05-13 18:53:47,295:INFO:Total runtime is 0.0 minutes
2023-05-13 18:53:47,303:INFO:SubProcess create_model() called ==================================
2023-05-13 18:53:47,304:INFO:Initializing create_model()
2023-05-13 18:53:47,304:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002CF45207BB0>, estimator=lr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=0.5, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002CF57006FA0>, model_only=True, return_train_score=False, kwargs={})
2023-05-13 18:53:47,305:INFO:Checking exceptions
2023-05-13 18:53:47,305:INFO:Importing libraries
2023-05-13 18:53:47,305:INFO:Copying training dataset
2023-05-13 18:53:47,331:INFO:Defining folds
2023-05-13 18:53:47,331:INFO:Declaring metric variables
2023-05-13 18:53:47,339:INFO:Importing untrained model
2023-05-13 18:53:47,345:INFO:Logistic Regression Imported successfully
2023-05-13 18:53:47,359:INFO:Starting cross validation
2023-05-13 18:53:47,407:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-05-13 18:53:51,257:WARNING:c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\sklearn\base.py:439: UserWarning: X does not have valid feature names, but IsolationForest was fitted with feature names
  warnings.warn(

2023-05-13 18:53:51,264:WARNING:c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\sklearn\base.py:439: UserWarning: X does not have valid feature names, but IsolationForest was fitted with feature names
  warnings.warn(

2023-05-13 18:53:51,282:WARNING:c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\sklearn\base.py:439: UserWarning: X does not have valid feature names, but IsolationForest was fitted with feature names
  warnings.warn(

2023-05-13 18:53:51,320:WARNING:c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\sklearn\base.py:439: UserWarning: X does not have valid feature names, but IsolationForest was fitted with feature names
  warnings.warn(

2023-05-13 18:53:51,377:WARNING:c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\sklearn\base.py:439: UserWarning: X does not have valid feature names, but IsolationForest was fitted with feature names
  warnings.warn(

2023-05-13 18:53:51,399:WARNING:c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\sklearn\base.py:439: UserWarning: X does not have valid feature names, but IsolationForest was fitted with feature names
  warnings.warn(

2023-05-13 18:53:51,419:WARNING:c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\sklearn\base.py:439: UserWarning: X does not have valid feature names, but IsolationForest was fitted with feature names
  warnings.warn(

2023-05-13 18:53:51,426:WARNING:c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\sklearn\base.py:439: UserWarning: X does not have valid feature names, but IsolationForest was fitted with feature names
  warnings.warn(

2023-05-13 18:54:01,581:WARNING:c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 0.59s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-05-13 18:54:02,192:WARNING:c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 0.67s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-05-13 18:54:04,199:WARNING:c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\sklearn\base.py:439: UserWarning: X does not have valid feature names, but IsolationForest was fitted with feature names
  warnings.warn(

2023-05-13 18:54:04,459:WARNING:c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\sklearn\base.py:439: UserWarning: X does not have valid feature names, but IsolationForest was fitted with feature names
  warnings.warn(

2023-05-13 18:54:09,830:INFO:Calculating mean and std
2023-05-13 18:54:09,832:INFO:Creating metrics dataframe
2023-05-13 18:54:10,164:INFO:Uploading results into container
2023-05-13 18:54:10,165:INFO:Uploading model into container now
2023-05-13 18:54:10,165:INFO:_master_model_container: 1
2023-05-13 18:54:10,165:INFO:_display_container: 2
2023-05-13 18:54:10,167:INFO:CustomProbabilityThresholdClassifier(C=1.0, class_weight=None,
                                     classifier=LogisticRegression(C=1.0,
                                                                   class_weight=None,
                                                                   dual=False,
                                                                   fit_intercept=True,
                                                                   intercept_scaling=1,
                                                                   l1_ratio=None,
                                                                   max_iter=1000,
                                                                   multi_class='auto',
                                                                   n_jobs=None,
                                                                   penalty='l2',
                                                                   random_state=123,
                                                                   solver='lbfgs',
                                                                   tol=0.0001,
                                                                   verbose=0,
                                                                   warm_start=False),
                                     dual=False, fit_intercept=True,
                                     intercept_scaling=1, l1_ratio=None,
                                     max_iter=1000, multi_class='auto',
                                     n_jobs=None, penalty='l2',
                                     probability_threshold=0.5,
                                     random_state=123, solver='lbfgs',
                                     tol=0.0001, verbose=0, warm_start=False)
2023-05-13 18:54:10,167:INFO:create_model() successfully completed......................................
2023-05-13 18:54:10,378:INFO:SubProcess create_model() end ==================================
2023-05-13 18:54:10,379:INFO:Creating metrics dataframe
2023-05-13 18:54:10,394:INFO:Initializing Decision Tree Classifier
2023-05-13 18:54:10,394:INFO:Total runtime is 0.38497696320215863 minutes
2023-05-13 18:54:10,402:INFO:SubProcess create_model() called ==================================
2023-05-13 18:54:10,402:INFO:Initializing create_model()
2023-05-13 18:54:10,402:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002CF45207BB0>, estimator=dt, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=0.5, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002CF57006FA0>, model_only=True, return_train_score=False, kwargs={})
2023-05-13 18:54:10,402:INFO:Checking exceptions
2023-05-13 18:54:10,402:INFO:Importing libraries
2023-05-13 18:54:10,403:INFO:Copying training dataset
2023-05-13 18:54:10,428:INFO:Defining folds
2023-05-13 18:54:10,428:INFO:Declaring metric variables
2023-05-13 18:54:10,433:INFO:Importing untrained model
2023-05-13 18:54:10,440:INFO:Decision Tree Classifier Imported successfully
2023-05-13 18:54:10,450:INFO:Starting cross validation
2023-05-13 18:54:10,470:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-05-13 18:54:19,277:INFO:Calculating mean and std
2023-05-13 18:54:19,278:INFO:Creating metrics dataframe
2023-05-13 18:54:19,605:INFO:Uploading results into container
2023-05-13 18:54:19,606:INFO:Uploading model into container now
2023-05-13 18:54:19,606:INFO:_master_model_container: 2
2023-05-13 18:54:19,606:INFO:_display_container: 2
2023-05-13 18:54:19,607:INFO:CustomProbabilityThresholdClassifier(ccp_alpha=0.0, class_weight=None,
                                     classifier=DecisionTreeClassifier(ccp_alpha=0.0,
                                                                       class_weight=None,
                                                                       criterion='gini',
                                                                       max_depth=None,
                                                                       max_features=None,
                                                                       max_leaf_nodes=None,
                                                                       min_impurity_decrease=0.0,
                                                                       min_samples_leaf=1,
                                                                       min_samples_split=2,
                                                                       min_weight_fraction_leaf=0.0,
                                                                       random_state=123,
                                                                       splitter='best'),
                                     criterion='gini', max_depth=None,
                                     max_features=None, max_leaf_nodes=None,
                                     min_impurity_decrease=0.0,
                                     min_samples_leaf=1, min_samples_split=2,
                                     min_weight_fraction_leaf=0.0,
                                     probability_threshold=0.5,
                                     random_state=123, splitter='best')
2023-05-13 18:54:19,608:INFO:create_model() successfully completed......................................
2023-05-13 18:54:19,805:INFO:SubProcess create_model() end ==================================
2023-05-13 18:54:19,805:INFO:Creating metrics dataframe
2023-05-13 18:54:19,823:INFO:Initializing Random Forest Classifier
2023-05-13 18:54:19,824:INFO:Total runtime is 0.5421510616938273 minutes
2023-05-13 18:54:19,829:INFO:SubProcess create_model() called ==================================
2023-05-13 18:54:19,829:INFO:Initializing create_model()
2023-05-13 18:54:19,830:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002CF45207BB0>, estimator=rf, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=0.5, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002CF57006FA0>, model_only=True, return_train_score=False, kwargs={})
2023-05-13 18:54:19,830:INFO:Checking exceptions
2023-05-13 18:54:19,830:INFO:Importing libraries
2023-05-13 18:54:19,830:INFO:Copying training dataset
2023-05-13 18:54:19,853:INFO:Defining folds
2023-05-13 18:54:19,854:INFO:Declaring metric variables
2023-05-13 18:54:19,861:INFO:Importing untrained model
2023-05-13 18:54:19,867:INFO:Random Forest Classifier Imported successfully
2023-05-13 18:54:19,877:INFO:Starting cross validation
2023-05-13 18:54:19,893:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-05-13 18:54:38,838:WARNING:c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 1.53s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  fitted_estimator = self._memory_fit(

2023-05-13 18:54:39,563:WARNING:c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 1.48s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  fitted_estimator = self._memory_fit(

2023-05-13 18:54:42,281:WARNING:c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 0.54s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-05-13 18:54:42,370:WARNING:c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 0.52s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-05-13 18:54:42,503:WARNING:c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 0.52s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-05-13 18:54:42,542:WARNING:c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 0.54s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-05-13 18:54:42,767:WARNING:c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 0.62s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-05-13 18:54:42,777:WARNING:c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 0.57s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-05-13 18:54:51,145:INFO:Calculating mean and std
2023-05-13 18:54:51,149:INFO:Creating metrics dataframe
2023-05-13 18:54:51,497:INFO:Uploading results into container
2023-05-13 18:54:51,499:INFO:Uploading model into container now
2023-05-13 18:54:51,499:INFO:_master_model_container: 3
2023-05-13 18:54:51,499:INFO:_display_container: 2
2023-05-13 18:54:51,502:INFO:CustomProbabilityThresholdClassifier(bootstrap=True, ccp_alpha=0.0,
                                     class_weight=None,
                                     classifier=RandomForestClassifier(bootstrap=True,
                                                                       ccp_alpha=0.0,
                                                                       class_weight=None,
                                                                       criterion='gini',
                                                                       max_depth=None,
                                                                       max_features='sqrt',
                                                                       max_leaf_nodes=None,
                                                                       max_samples=None,
                                                                       min_impurity_decrease=0.0,
                                                                       min_samples_leaf=1,
                                                                       min_samples_split=2,
                                                                       min_weight_fraction_leaf=0.0,
                                                                       n_...
                                                                       oob_score=False,
                                                                       random_state=123,
                                                                       verbose=0,
                                                                       warm_start=False),
                                     criterion='gini', max_depth=None,
                                     max_features='sqrt', max_leaf_nodes=None,
                                     max_samples=None,
                                     min_impurity_decrease=0.0,
                                     min_samples_leaf=1, min_samples_split=2,
                                     min_weight_fraction_leaf=0.0,
                                     n_estimators=100, n_jobs=-1,
                                     oob_score=False, probability_threshold=0.5,
                                     random_state=123, verbose=0,
                                     warm_start=False)
2023-05-13 18:54:51,502:INFO:create_model() successfully completed......................................
2023-05-13 18:54:51,707:INFO:SubProcess create_model() end ==================================
2023-05-13 18:54:51,707:INFO:Creating metrics dataframe
2023-05-13 18:54:51,723:INFO:Initializing Ada Boost Classifier
2023-05-13 18:54:51,724:INFO:Total runtime is 1.0738149245580038 minutes
2023-05-13 18:54:51,730:INFO:SubProcess create_model() called ==================================
2023-05-13 18:54:51,730:INFO:Initializing create_model()
2023-05-13 18:54:51,731:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002CF45207BB0>, estimator=ada, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=0.5, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002CF57006FA0>, model_only=True, return_train_score=False, kwargs={})
2023-05-13 18:54:51,731:INFO:Checking exceptions
2023-05-13 18:54:51,731:INFO:Importing libraries
2023-05-13 18:54:51,732:INFO:Copying training dataset
2023-05-13 18:54:51,755:INFO:Defining folds
2023-05-13 18:54:51,755:INFO:Declaring metric variables
2023-05-13 18:54:51,761:INFO:Importing untrained model
2023-05-13 18:54:51,769:INFO:Ada Boost Classifier Imported successfully
2023-05-13 18:54:51,778:INFO:Starting cross validation
2023-05-13 18:54:51,794:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-05-13 18:55:15,407:INFO:Calculating mean and std
2023-05-13 18:55:15,409:INFO:Creating metrics dataframe
2023-05-13 18:55:15,797:INFO:Uploading results into container
2023-05-13 18:55:15,798:INFO:Uploading model into container now
2023-05-13 18:55:15,799:INFO:_master_model_container: 4
2023-05-13 18:55:15,800:INFO:_display_container: 2
2023-05-13 18:55:15,801:INFO:CustomProbabilityThresholdClassifier(algorithm='SAMME.R',
                                     base_estimator='deprecated',
                                     classifier=AdaBoostClassifier(algorithm='SAMME.R',
                                                                   base_estimator='deprecated',
                                                                   estimator=None,
                                                                   learning_rate=1.0,
                                                                   n_estimators=50,
                                                                   random_state=123),
                                     estimator=None, learning_rate=1.0,
                                     n_estimators=50, probability_threshold=0.5,
                                     random_state=123)
2023-05-13 18:55:15,802:INFO:create_model() successfully completed......................................
2023-05-13 18:55:16,017:INFO:SubProcess create_model() end ==================================
2023-05-13 18:55:16,017:INFO:Creating metrics dataframe
2023-05-13 18:55:16,033:INFO:Initializing SVM - Linear Kernel
2023-05-13 18:55:16,034:INFO:Total runtime is 1.4789838035901388 minutes
2023-05-13 18:55:16,040:INFO:SubProcess create_model() called ==================================
2023-05-13 18:55:16,040:INFO:Initializing create_model()
2023-05-13 18:55:16,040:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002CF45207BB0>, estimator=svm, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=0.5, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002CF57006FA0>, model_only=True, return_train_score=False, kwargs={})
2023-05-13 18:55:16,040:INFO:Checking exceptions
2023-05-13 18:55:16,041:INFO:Importing libraries
2023-05-13 18:55:16,041:INFO:Copying training dataset
2023-05-13 18:55:16,066:INFO:Defining folds
2023-05-13 18:55:16,068:INFO:Declaring metric variables
2023-05-13 18:55:16,075:INFO:Importing untrained model
2023-05-13 18:55:16,080:INFO:SVM - Linear Kernel Imported successfully
2023-05-13 18:55:16,093:INFO:Starting cross validation
2023-05-13 18:55:16,108:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-05-13 18:55:19,198:WARNING:c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\pycaret\internal\meta_estimators.py", line 170, in __getattr__
    return getattr(self.classifier_, name)
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-05-13 18:55:19,385:WARNING:c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\pycaret\internal\meta_estimators.py", line 170, in __getattr__
    return getattr(self.classifier_, name)
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-05-13 18:55:19,460:WARNING:c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\pycaret\internal\meta_estimators.py", line 170, in __getattr__
    return getattr(self.classifier_, name)
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-05-13 18:55:19,503:WARNING:c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\pycaret\internal\meta_estimators.py", line 170, in __getattr__
    return getattr(self.classifier_, name)
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-05-13 18:55:19,551:WARNING:c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\pycaret\internal\meta_estimators.py", line 170, in __getattr__
    return getattr(self.classifier_, name)
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-05-13 18:55:19,559:WARNING:c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\pycaret\internal\meta_estimators.py", line 170, in __getattr__
    return getattr(self.classifier_, name)
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-05-13 18:55:19,626:WARNING:c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\pycaret\internal\meta_estimators.py", line 170, in __getattr__
    return getattr(self.classifier_, name)
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-05-13 18:55:19,680:WARNING:c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\pycaret\internal\meta_estimators.py", line 170, in __getattr__
    return getattr(self.classifier_, name)
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-05-13 18:55:22,280:WARNING:c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\pycaret\internal\meta_estimators.py", line 170, in __getattr__
    return getattr(self.classifier_, name)
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-05-13 18:55:22,474:WARNING:c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\pycaret\internal\meta_estimators.py", line 170, in __getattr__
    return getattr(self.classifier_, name)
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-05-13 18:55:23,062:INFO:Calculating mean and std
2023-05-13 18:55:23,063:INFO:Creating metrics dataframe
2023-05-13 18:55:23,454:INFO:Uploading results into container
2023-05-13 18:55:23,456:INFO:Uploading model into container now
2023-05-13 18:55:23,457:INFO:_master_model_container: 5
2023-05-13 18:55:23,457:INFO:_display_container: 2
2023-05-13 18:55:23,461:INFO:CustomProbabilityThresholdClassifier(alpha=0.0001, average=False,
                                     class_weight=None,
                                     classifier=SGDClassifier(alpha=0.0001,
                                                              average=False,
                                                              class_weight=None,
                                                              early_stopping=False,
                                                              epsilon=0.1,
                                                              eta0=0.001,
                                                              fit_intercept=True,
                                                              l1_ratio=0.15,
                                                              learning_rate='optimal',
                                                              loss='hinge',
                                                              max_iter=1000,
                                                              n_iter_no_change=5,
                                                              n_jobs=-1,
                                                              penalty='l2',
                                                              power_t=0.5,
                                                              random_state=123...
                                                              validation_fraction=0.1,
                                                              verbose=0,
                                                              warm_start=False),
                                     early_stopping=False, epsilon=0.1,
                                     eta0=0.001, fit_intercept=True,
                                     l1_ratio=0.15, learning_rate='optimal',
                                     loss='hinge', max_iter=1000,
                                     n_iter_no_change=5, n_jobs=-1,
                                     penalty='l2', power_t=0.5,
                                     probability_threshold=0.5,
                                     random_state=123, shuffle=True, tol=0.001,
                                     validation_fraction=0.1, verbose=0,
                                     warm_start=False)
2023-05-13 18:55:23,461:INFO:create_model() successfully completed......................................
2023-05-13 18:55:23,661:INFO:SubProcess create_model() end ==================================
2023-05-13 18:55:23,661:INFO:Creating metrics dataframe
2023-05-13 18:55:23,678:INFO:Initializing K Neighbors Classifier
2023-05-13 18:55:23,678:INFO:Total runtime is 1.6063722769419353 minutes
2023-05-13 18:55:23,683:INFO:SubProcess create_model() called ==================================
2023-05-13 18:55:23,684:INFO:Initializing create_model()
2023-05-13 18:55:23,684:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002CF45207BB0>, estimator=knn, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=0.5, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002CF57006FA0>, model_only=True, return_train_score=False, kwargs={})
2023-05-13 18:55:23,684:INFO:Checking exceptions
2023-05-13 18:55:23,685:INFO:Importing libraries
2023-05-13 18:55:23,685:INFO:Copying training dataset
2023-05-13 18:55:23,709:INFO:Defining folds
2023-05-13 18:55:23,709:INFO:Declaring metric variables
2023-05-13 18:55:23,714:INFO:Importing untrained model
2023-05-13 18:55:23,722:INFO:K Neighbors Classifier Imported successfully
2023-05-13 18:55:23,733:INFO:Starting cross validation
2023-05-13 18:55:23,748:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-05-13 18:55:36,560:INFO:Calculating mean and std
2023-05-13 18:55:36,562:INFO:Creating metrics dataframe
2023-05-13 18:55:36,954:INFO:Uploading results into container
2023-05-13 18:55:36,955:INFO:Uploading model into container now
2023-05-13 18:55:36,956:INFO:_master_model_container: 6
2023-05-13 18:55:36,956:INFO:_display_container: 2
2023-05-13 18:55:36,957:INFO:CustomProbabilityThresholdClassifier(algorithm='auto',
                                     classifier=KNeighborsClassifier(algorithm='auto',
                                                                     leaf_size=30,
                                                                     metric='minkowski',
                                                                     metric_params=None,
                                                                     n_jobs=-1,
                                                                     n_neighbors=5,
                                                                     p=2,
                                                                     weights='uniform'),
                                     leaf_size=30, metric='minkowski',
                                     metric_params=None, n_jobs=-1,
                                     n_neighbors=5, p=2,
                                     probability_threshold=0.5,
                                     weights='uniform')
2023-05-13 18:55:36,957:INFO:create_model() successfully completed......................................
2023-05-13 18:55:37,160:INFO:SubProcess create_model() end ==================================
2023-05-13 18:55:37,160:INFO:Creating metrics dataframe
2023-05-13 18:55:37,195:INFO:Initializing create_model()
2023-05-13 18:55:37,195:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002CF45207BB0>, estimator=CustomProbabilityThresholdClassifier(bootstrap=True, ccp_alpha=0.0,
                                     class_weight=None,
                                     classifier=RandomForestClassifier(bootstrap=True,
                                                                       ccp_alpha=0.0,
                                                                       class_weight=None,
                                                                       criterion='gini',
                                                                       max_depth=None,
                                                                       max_features='sqrt',
                                                                       max_leaf_nodes=None,
                                                                       max_samples=None,
                                                                       min_impurity_decrease=0.0,
                                                                       min_samples_leaf=1,
                                                                       min_samples_split=2,
                                                                       min_weight_fraction_leaf=0.0,
                                                                       n_...
                                                                       oob_score=False,
                                                                       random_state=123,
                                                                       verbose=0,
                                                                       warm_start=False),
                                     criterion='gini', max_depth=None,
                                     max_features='sqrt', max_leaf_nodes=None,
                                     max_samples=None,
                                     min_impurity_decrease=0.0,
                                     min_samples_leaf=1, min_samples_split=2,
                                     min_weight_fraction_leaf=0.0,
                                     n_estimators=100, n_jobs=-1,
                                     oob_score=False, probability_threshold=0.5,
                                     random_state=123, verbose=0,
                                     warm_start=False), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=0.5, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-05-13 18:55:37,195:INFO:Checking exceptions
2023-05-13 18:55:37,197:INFO:Importing libraries
2023-05-13 18:55:37,197:INFO:Copying training dataset
2023-05-13 18:55:37,219:INFO:Defining folds
2023-05-13 18:55:37,219:INFO:Declaring metric variables
2023-05-13 18:55:37,220:INFO:Importing untrained model
2023-05-13 18:55:37,220:INFO:Declaring custom model
2023-05-13 18:55:37,223:INFO:CustomProbabilityThresholdClassifier Imported successfully
2023-05-13 18:55:37,237:INFO:Cross validation set to False
2023-05-13 18:55:37,238:INFO:Fitting Model
2023-05-13 18:55:41,829:INFO:CustomProbabilityThresholdClassifier(bootstrap=True, ccp_alpha=0.0,
                                     class_weight=None,
                                     classifier=RandomForestClassifier(bootstrap=True,
                                                                       ccp_alpha=0.0,
                                                                       class_weight=None,
                                                                       criterion='gini',
                                                                       max_depth=None,
                                                                       max_features='sqrt',
                                                                       max_leaf_nodes=None,
                                                                       max_samples=None,
                                                                       min_impurity_decrease=0.0,
                                                                       min_samples_leaf=1,
                                                                       min_samples_split=2,
                                                                       min_weight_fraction_leaf=0.0,
                                                                       n_...
                                                                       oob_score=False,
                                                                       random_state=123,
                                                                       verbose=0,
                                                                       warm_start=False),
                                     criterion='gini', max_depth=None,
                                     max_features='sqrt', max_leaf_nodes=None,
                                     max_samples=None,
                                     min_impurity_decrease=0.0,
                                     min_samples_leaf=1, min_samples_split=2,
                                     min_weight_fraction_leaf=0.0,
                                     n_estimators=100, n_jobs=-1,
                                     oob_score=False, probability_threshold=0.5,
                                     random_state=123, verbose=0,
                                     warm_start=False)
2023-05-13 18:55:41,829:INFO:create_model() successfully completed......................................
2023-05-13 18:55:42,067:INFO:_master_model_container: 6
2023-05-13 18:55:42,068:INFO:_display_container: 2
2023-05-13 18:55:42,069:INFO:CustomProbabilityThresholdClassifier(bootstrap=True, ccp_alpha=0.0,
                                     class_weight=None,
                                     classifier=RandomForestClassifier(bootstrap=True,
                                                                       ccp_alpha=0.0,
                                                                       class_weight=None,
                                                                       criterion='gini',
                                                                       max_depth=None,
                                                                       max_features='sqrt',
                                                                       max_leaf_nodes=None,
                                                                       max_samples=None,
                                                                       min_impurity_decrease=0.0,
                                                                       min_samples_leaf=1,
                                                                       min_samples_split=2,
                                                                       min_weight_fraction_leaf=0.0,
                                                                       n_...
                                                                       oob_score=False,
                                                                       random_state=123,
                                                                       verbose=0,
                                                                       warm_start=False),
                                     criterion='gini', max_depth=None,
                                     max_features='sqrt', max_leaf_nodes=None,
                                     max_samples=None,
                                     min_impurity_decrease=0.0,
                                     min_samples_leaf=1, min_samples_split=2,
                                     min_weight_fraction_leaf=0.0,
                                     n_estimators=100, n_jobs=-1,
                                     oob_score=False, probability_threshold=0.5,
                                     random_state=123, verbose=0,
                                     warm_start=False)
2023-05-13 18:55:42,070:INFO:compare_models() successfully completed......................................
2023-05-13 18:55:42,089:INFO:Initializing plot_model()
2023-05-13 18:55:42,089:INFO:plot_model(plot=tree, fold=KFold(n_splits=10, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=CustomProbabilityThresholdClassifier(ccp_alpha=0.0, class_weight=None,
                                     classifier=DecisionTreeClassifier(ccp_alpha=0.0,
                                                                       class_weight=None,
                                                                       criterion='gini',
                                                                       max_depth=None,
                                                                       max_features=None,
                                                                       max_leaf_nodes=None,
                                                                       min_impurity_decrease=0.0,
                                                                       min_samples_leaf=1,
                                                                       min_samples_split=2,
                                                                       min_weight_fraction_leaf=0.0,
                                                                       random_state=123,
                                                                       splitter='best'),
                                     criterion='gini', max_depth=None,
                                     max_features=None, max_leaf_nodes=None,
                                     min_impurity_decrease=0.0,
                                     min_samples_leaf=1, min_samples_split=2,
                                     min_weight_fraction_leaf=0.0,
                                     probability_threshold=0.5,
                                     random_state=123, splitter='best'), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002CF4F09EE20>, system=True)
2023-05-13 18:55:42,089:INFO:Checking exceptions
2023-05-13 18:56:36,958:INFO:Initializing evaluate_model()
2023-05-13 18:56:36,958:INFO:evaluate_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002CF45207BB0>, estimator=CustomProbabilityThresholdClassifier(bootstrap=True, ccp_alpha=0.0,
                                     class_weight=None,
                                     classifier=RandomForestClassifier(bootstrap=True,
                                                                       ccp_alpha=0.0,
                                                                       class_weight=None,
                                                                       criterion='gini',
                                                                       max_depth=None,
                                                                       max_features='sqrt',
                                                                       max_leaf_nodes=None,
                                                                       max_samples=None,
                                                                       min_impurity_decrease=0.0,
                                                                       min_samples_leaf=1,
                                                                       min_samples_split=2,
                                                                       min_weight_fraction_leaf=0.0,
                                                                       n_...
                                                                       oob_score=False,
                                                                       random_state=123,
                                                                       verbose=0,
                                                                       warm_start=False),
                                     criterion='gini', max_depth=None,
                                     max_features='sqrt', max_leaf_nodes=None,
                                     max_samples=None,
                                     min_impurity_decrease=0.0,
                                     min_samples_leaf=1, min_samples_split=2,
                                     min_weight_fraction_leaf=0.0,
                                     n_estimators=100, n_jobs=-1,
                                     oob_score=False, probability_threshold=0.5,
                                     random_state=123, verbose=0,
                                     warm_start=False), fold=None, fit_kwargs=None, plot_kwargs=None, feature_name=None, groups=None, use_train_data=False)
2023-05-13 18:56:36,986:INFO:Initializing plot_model()
2023-05-13 18:56:36,987:INFO:plot_model(plot=pipeline, fold=KFold(n_splits=10, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=CustomProbabilityThresholdClassifier(bootstrap=True, ccp_alpha=0.0,
                                     class_weight=None,
                                     classifier=RandomForestClassifier(bootstrap=True,
                                                                       ccp_alpha=0.0,
                                                                       class_weight=None,
                                                                       criterion='gini',
                                                                       max_depth=None,
                                                                       max_features='sqrt',
                                                                       max_leaf_nodes=None,
                                                                       max_samples=None,
                                                                       min_impurity_decrease=0.0,
                                                                       min_samples_leaf=1,
                                                                       min_samples_split=2,
                                                                       min_weight_fraction_leaf=0.0,
                                                                       n_...
                                                                       oob_score=False,
                                                                       random_state=123,
                                                                       verbose=0,
                                                                       warm_start=False),
                                     criterion='gini', max_depth=None,
                                     max_features='sqrt', max_leaf_nodes=None,
                                     max_samples=None,
                                     min_impurity_decrease=0.0,
                                     min_samples_leaf=1, min_samples_split=2,
                                     min_weight_fraction_leaf=0.0,
                                     n_estimators=100, n_jobs=-1,
                                     oob_score=False, probability_threshold=0.5,
                                     random_state=123, verbose=0,
                                     warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002CF45207BB0>, system=True)
2023-05-13 18:56:36,987:INFO:Checking exceptions
2023-05-13 18:56:37,037:INFO:Preloading libraries
2023-05-13 18:56:37,093:INFO:Copying training dataset
2023-05-13 18:56:37,093:INFO:Plot type: pipeline
2023-05-13 18:56:39,966:INFO:Initializing plot_model()
2023-05-13 18:56:39,967:INFO:plot_model(plot=auc, fold=KFold(n_splits=10, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=CustomProbabilityThresholdClassifier(bootstrap=True, ccp_alpha=0.0,
                                     class_weight=None,
                                     classifier=RandomForestClassifier(bootstrap=True,
                                                                       ccp_alpha=0.0,
                                                                       class_weight=None,
                                                                       criterion='gini',
                                                                       max_depth=None,
                                                                       max_features='sqrt',
                                                                       max_leaf_nodes=None,
                                                                       max_samples=None,
                                                                       min_impurity_decrease=0.0,
                                                                       min_samples_leaf=1,
                                                                       min_samples_split=2,
                                                                       min_weight_fraction_leaf=0.0,
                                                                       n_...
                                                                       oob_score=False,
                                                                       random_state=123,
                                                                       verbose=0,
                                                                       warm_start=False),
                                     criterion='gini', max_depth=None,
                                     max_features='sqrt', max_leaf_nodes=None,
                                     max_samples=None,
                                     min_impurity_decrease=0.0,
                                     min_samples_leaf=1, min_samples_split=2,
                                     min_weight_fraction_leaf=0.0,
                                     n_estimators=100, n_jobs=-1,
                                     oob_score=False, probability_threshold=0.5,
                                     random_state=123, verbose=0,
                                     warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002CF45207BB0>, system=True)
2023-05-13 18:56:39,967:INFO:Checking exceptions
2023-05-13 18:56:40,009:INFO:Preloading libraries
2023-05-13 18:56:40,054:INFO:Copying training dataset
2023-05-13 18:56:40,054:INFO:Plot type: auc
2023-05-13 18:56:40,614:INFO:Fitting Model
2023-05-13 18:56:40,615:WARNING:c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\sklearn\base.py:439: UserWarning: X does not have valid feature names, but RandomForestClassifier was fitted with feature names
  warnings.warn(

2023-05-13 18:56:40,616:INFO:Scoring test/hold-out set
2023-05-13 18:56:41,111:INFO:Visual Rendered Successfully
2023-05-13 18:56:41,354:INFO:plot_model() successfully completed......................................
2023-05-13 18:57:05,200:INFO:Initializing plot_model()
2023-05-13 18:57:05,200:INFO:plot_model(plot=confusion_matrix, fold=KFold(n_splits=10, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=CustomProbabilityThresholdClassifier(bootstrap=True, ccp_alpha=0.0,
                                     class_weight=None,
                                     classifier=RandomForestClassifier(bootstrap=True,
                                                                       ccp_alpha=0.0,
                                                                       class_weight=None,
                                                                       criterion='gini',
                                                                       max_depth=None,
                                                                       max_features='sqrt',
                                                                       max_leaf_nodes=None,
                                                                       max_samples=None,
                                                                       min_impurity_decrease=0.0,
                                                                       min_samples_leaf=1,
                                                                       min_samples_split=2,
                                                                       min_weight_fraction_leaf=0.0,
                                                                       n_...
                                                                       oob_score=False,
                                                                       random_state=123,
                                                                       verbose=0,
                                                                       warm_start=False),
                                     criterion='gini', max_depth=None,
                                     max_features='sqrt', max_leaf_nodes=None,
                                     max_samples=None,
                                     min_impurity_decrease=0.0,
                                     min_samples_leaf=1, min_samples_split=2,
                                     min_weight_fraction_leaf=0.0,
                                     n_estimators=100, n_jobs=-1,
                                     oob_score=False, probability_threshold=0.5,
                                     random_state=123, verbose=0,
                                     warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002CF45207BB0>, system=True)
2023-05-13 18:57:05,200:INFO:Checking exceptions
2023-05-13 18:57:05,239:INFO:Preloading libraries
2023-05-13 18:57:05,280:INFO:Copying training dataset
2023-05-13 18:57:05,280:INFO:Plot type: confusion_matrix
2023-05-13 18:57:05,777:INFO:Fitting Model
2023-05-13 18:57:05,777:WARNING:c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\sklearn\base.py:439: UserWarning: X does not have valid feature names, but RandomForestClassifier was fitted with feature names
  warnings.warn(

2023-05-13 18:57:05,778:INFO:Scoring test/hold-out set
2023-05-13 18:57:06,111:INFO:Visual Rendered Successfully
2023-05-13 18:57:06,291:INFO:plot_model() successfully completed......................................
2023-05-13 18:57:36,971:INFO:Initializing plot_model()
2023-05-13 18:57:36,971:INFO:plot_model(plot=threshold, fold=KFold(n_splits=10, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=CustomProbabilityThresholdClassifier(bootstrap=True, ccp_alpha=0.0,
                                     class_weight=None,
                                     classifier=RandomForestClassifier(bootstrap=True,
                                                                       ccp_alpha=0.0,
                                                                       class_weight=None,
                                                                       criterion='gini',
                                                                       max_depth=None,
                                                                       max_features='sqrt',
                                                                       max_leaf_nodes=None,
                                                                       max_samples=None,
                                                                       min_impurity_decrease=0.0,
                                                                       min_samples_leaf=1,
                                                                       min_samples_split=2,
                                                                       min_weight_fraction_leaf=0.0,
                                                                       n_...
                                                                       oob_score=False,
                                                                       random_state=123,
                                                                       verbose=0,
                                                                       warm_start=False),
                                     criterion='gini', max_depth=None,
                                     max_features='sqrt', max_leaf_nodes=None,
                                     max_samples=None,
                                     min_impurity_decrease=0.0,
                                     min_samples_leaf=1, min_samples_split=2,
                                     min_weight_fraction_leaf=0.0,
                                     n_estimators=100, n_jobs=-1,
                                     oob_score=False, probability_threshold=0.5,
                                     random_state=123, verbose=0,
                                     warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002CF45207BB0>, system=True)
2023-05-13 18:57:36,972:INFO:Checking exceptions
2023-05-13 18:57:37,010:INFO:Preloading libraries
2023-05-13 18:57:37,051:INFO:Copying training dataset
2023-05-13 18:57:37,051:INFO:Plot type: threshold
2023-05-13 18:57:37,499:INFO:Fitting Model
2023-05-13 18:59:49,723:WARNING:c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\sklearn\base.py:439: UserWarning: X does not have valid feature names, but RandomForestClassifier was fitted with feature names
  warnings.warn(

2023-05-13 18:59:49,750:INFO:Scoring test/hold-out set
2023-05-13 18:59:50,347:INFO:Visual Rendered Successfully
2023-05-13 18:59:50,557:INFO:plot_model() successfully completed......................................
2023-05-13 18:59:50,621:INFO:Initializing evaluate_model()
2023-05-13 18:59:50,622:INFO:evaluate_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002CF45207BB0>, estimator=CustomProbabilityThresholdClassifier(bootstrap=True, ccp_alpha=0.0,
                                     class_weight=None,
                                     classifier=RandomForestClassifier(bootstrap=True,
                                                                       ccp_alpha=0.0,
                                                                       class_weight=None,
                                                                       criterion='gini',
                                                                       max_depth=None,
                                                                       max_features='sqrt',
                                                                       max_leaf_nodes=None,
                                                                       max_samples=None,
                                                                       min_impurity_decrease=0.0,
                                                                       min_samples_leaf=1,
                                                                       min_samples_split=2,
                                                                       min_weight_fraction_leaf=0.0,
                                                                       n_...
                                                                       oob_score=False,
                                                                       random_state=123,
                                                                       verbose=0,
                                                                       warm_start=False),
                                     criterion='gini', max_depth=None,
                                     max_features='sqrt', max_leaf_nodes=None,
                                     max_samples=None,
                                     min_impurity_decrease=0.0,
                                     min_samples_leaf=1, min_samples_split=2,
                                     min_weight_fraction_leaf=0.0,
                                     n_estimators=100, n_jobs=-1,
                                     oob_score=False, probability_threshold=0.5,
                                     random_state=123, verbose=0,
                                     warm_start=False), fold=None, fit_kwargs=None, plot_kwargs=None, feature_name=None, groups=None, use_train_data=False)
2023-05-13 18:59:50,664:INFO:Initializing plot_model()
2023-05-13 18:59:50,665:INFO:plot_model(plot=pipeline, fold=KFold(n_splits=10, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=CustomProbabilityThresholdClassifier(bootstrap=True, ccp_alpha=0.0,
                                     class_weight=None,
                                     classifier=RandomForestClassifier(bootstrap=True,
                                                                       ccp_alpha=0.0,
                                                                       class_weight=None,
                                                                       criterion='gini',
                                                                       max_depth=None,
                                                                       max_features='sqrt',
                                                                       max_leaf_nodes=None,
                                                                       max_samples=None,
                                                                       min_impurity_decrease=0.0,
                                                                       min_samples_leaf=1,
                                                                       min_samples_split=2,
                                                                       min_weight_fraction_leaf=0.0,
                                                                       n_...
                                                                       oob_score=False,
                                                                       random_state=123,
                                                                       verbose=0,
                                                                       warm_start=False),
                                     criterion='gini', max_depth=None,
                                     max_features='sqrt', max_leaf_nodes=None,
                                     max_samples=None,
                                     min_impurity_decrease=0.0,
                                     min_samples_leaf=1, min_samples_split=2,
                                     min_weight_fraction_leaf=0.0,
                                     n_estimators=100, n_jobs=-1,
                                     oob_score=False, probability_threshold=0.5,
                                     random_state=123, verbose=0,
                                     warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002CF45207BB0>, system=True)
2023-05-13 18:59:50,666:INFO:Checking exceptions
2023-05-13 18:59:50,710:INFO:Preloading libraries
2023-05-13 18:59:50,781:INFO:Copying training dataset
2023-05-13 18:59:50,781:INFO:Plot type: pipeline
2023-05-13 18:59:51,355:INFO:Initializing plot_model()
2023-05-13 18:59:51,355:INFO:plot_model(plot=feature_all, fold=KFold(n_splits=10, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=CustomProbabilityThresholdClassifier(bootstrap=True, ccp_alpha=0.0,
                                     class_weight=None,
                                     classifier=RandomForestClassifier(bootstrap=True,
                                                                       ccp_alpha=0.0,
                                                                       class_weight=None,
                                                                       criterion='gini',
                                                                       max_depth=None,
                                                                       max_features='sqrt',
                                                                       max_leaf_nodes=None,
                                                                       max_samples=None,
                                                                       min_impurity_decrease=0.0,
                                                                       min_samples_leaf=1,
                                                                       min_samples_split=2,
                                                                       min_weight_fraction_leaf=0.0,
                                                                       n_...
                                                                       oob_score=False,
                                                                       random_state=123,
                                                                       verbose=0,
                                                                       warm_start=False),
                                     criterion='gini', max_depth=None,
                                     max_features='sqrt', max_leaf_nodes=None,
                                     max_samples=None,
                                     min_impurity_decrease=0.0,
                                     min_samples_leaf=1, min_samples_split=2,
                                     min_weight_fraction_leaf=0.0,
                                     n_estimators=100, n_jobs=-1,
                                     oob_score=False, probability_threshold=0.5,
                                     random_state=123, verbose=0,
                                     warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002CF45207BB0>, system=True)
2023-05-13 18:59:51,355:INFO:Checking exceptions
2023-05-13 18:59:51,397:INFO:Preloading libraries
2023-05-13 18:59:51,437:INFO:Copying training dataset
2023-05-13 18:59:51,438:INFO:Plot type: feature_all
2023-05-13 18:59:51,666:WARNING:No coef_ found. Trying feature_importances_
2023-05-13 18:59:52,343:INFO:Visual Rendered Successfully
2023-05-13 18:59:52,547:INFO:plot_model() successfully completed......................................
2023-05-13 18:59:54,610:INFO:Initializing plot_model()
2023-05-13 18:59:54,611:INFO:plot_model(plot=feature_all, fold=KFold(n_splits=10, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=CustomProbabilityThresholdClassifier(bootstrap=True, ccp_alpha=0.0,
                                     class_weight=None,
                                     classifier=RandomForestClassifier(bootstrap=True,
                                                                       ccp_alpha=0.0,
                                                                       class_weight=None,
                                                                       criterion='gini',
                                                                       max_depth=None,
                                                                       max_features='sqrt',
                                                                       max_leaf_nodes=None,
                                                                       max_samples=None,
                                                                       min_impurity_decrease=0.0,
                                                                       min_samples_leaf=1,
                                                                       min_samples_split=2,
                                                                       min_weight_fraction_leaf=0.0,
                                                                       n_...
                                                                       oob_score=False,
                                                                       random_state=123,
                                                                       verbose=0,
                                                                       warm_start=False),
                                     criterion='gini', max_depth=None,
                                     max_features='sqrt', max_leaf_nodes=None,
                                     max_samples=None,
                                     min_impurity_decrease=0.0,
                                     min_samples_leaf=1, min_samples_split=2,
                                     min_weight_fraction_leaf=0.0,
                                     n_estimators=100, n_jobs=-1,
                                     oob_score=False, probability_threshold=0.5,
                                     random_state=123, verbose=0,
                                     warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002CF45207BB0>, system=True)
2023-05-13 18:59:54,611:INFO:Checking exceptions
2023-05-13 18:59:54,652:INFO:Preloading libraries
2023-05-13 18:59:54,683:INFO:Copying training dataset
2023-05-13 18:59:54,683:INFO:Plot type: feature_all
2023-05-13 18:59:54,806:WARNING:No coef_ found. Trying feature_importances_
2023-05-13 18:59:55,523:INFO:Visual Rendered Successfully
2023-05-13 18:59:55,749:INFO:plot_model() successfully completed......................................
2023-05-13 18:59:55,788:INFO:Initializing plot_model()
2023-05-13 18:59:55,788:INFO:plot_model(plot=feature, fold=KFold(n_splits=10, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=CustomProbabilityThresholdClassifier(bootstrap=True, ccp_alpha=0.0,
                                     class_weight=None,
                                     classifier=RandomForestClassifier(bootstrap=True,
                                                                       ccp_alpha=0.0,
                                                                       class_weight=None,
                                                                       criterion='gini',
                                                                       max_depth=None,
                                                                       max_features='sqrt',
                                                                       max_leaf_nodes=None,
                                                                       max_samples=None,
                                                                       min_impurity_decrease=0.0,
                                                                       min_samples_leaf=1,
                                                                       min_samples_split=2,
                                                                       min_weight_fraction_leaf=0.0,
                                                                       n_...
                                                                       oob_score=False,
                                                                       random_state=123,
                                                                       verbose=0,
                                                                       warm_start=False),
                                     criterion='gini', max_depth=None,
                                     max_features='sqrt', max_leaf_nodes=None,
                                     max_samples=None,
                                     min_impurity_decrease=0.0,
                                     min_samples_leaf=1, min_samples_split=2,
                                     min_weight_fraction_leaf=0.0,
                                     n_estimators=100, n_jobs=-1,
                                     oob_score=False, probability_threshold=0.5,
                                     random_state=123, verbose=0,
                                     warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002CF45207BB0>, system=True)
2023-05-13 18:59:55,789:INFO:Checking exceptions
2023-05-13 18:59:55,823:INFO:Preloading libraries
2023-05-13 18:59:55,859:INFO:Copying training dataset
2023-05-13 18:59:55,860:INFO:Plot type: feature
2023-05-13 18:59:55,860:WARNING:No coef_ found. Trying feature_importances_
2023-05-13 18:59:56,315:INFO:Visual Rendered Successfully
2023-05-13 18:59:56,525:INFO:plot_model() successfully completed......................................
2023-05-13 19:00:38,428:INFO:Initializing plot_model()
2023-05-13 19:00:38,428:INFO:plot_model(plot=confusion_matrix, fold=KFold(n_splits=10, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=CustomProbabilityThresholdClassifier(bootstrap=True, ccp_alpha=0.0,
                                     class_weight=None,
                                     classifier=RandomForestClassifier(bootstrap=True,
                                                                       ccp_alpha=0.0,
                                                                       class_weight=None,
                                                                       criterion='gini',
                                                                       max_depth=None,
                                                                       max_features='sqrt',
                                                                       max_leaf_nodes=None,
                                                                       max_samples=None,
                                                                       min_impurity_decrease=0.0,
                                                                       min_samples_leaf=1,
                                                                       min_samples_split=2,
                                                                       min_weight_fraction_leaf=0.0,
                                                                       n_...
                                                                       oob_score=False,
                                                                       random_state=123,
                                                                       verbose=0,
                                                                       warm_start=False),
                                     criterion='gini', max_depth=None,
                                     max_features='sqrt', max_leaf_nodes=None,
                                     max_samples=None,
                                     min_impurity_decrease=0.0,
                                     min_samples_leaf=1, min_samples_split=2,
                                     min_weight_fraction_leaf=0.0,
                                     n_estimators=100, n_jobs=-1,
                                     oob_score=False, probability_threshold=0.5,
                                     random_state=123, verbose=0,
                                     warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002CF45207BB0>, system=True)
2023-05-13 19:00:38,428:INFO:Checking exceptions
2023-05-13 19:00:38,465:INFO:Preloading libraries
2023-05-13 19:00:38,502:INFO:Copying training dataset
2023-05-13 19:00:38,502:INFO:Plot type: confusion_matrix
2023-05-13 19:00:38,968:INFO:Fitting Model
2023-05-13 19:00:38,969:WARNING:c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\sklearn\base.py:439: UserWarning: X does not have valid feature names, but RandomForestClassifier was fitted with feature names
  warnings.warn(

2023-05-13 19:00:38,969:INFO:Scoring test/hold-out set
2023-05-13 19:00:39,288:INFO:Visual Rendered Successfully
2023-05-13 19:00:39,514:INFO:plot_model() successfully completed......................................
2023-05-13 19:02:02,342:INFO:Initializing plot_model()
2023-05-13 19:02:02,342:INFO:plot_model(plot=auc, fold=KFold(n_splits=10, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=CustomProbabilityThresholdClassifier(bootstrap=True, ccp_alpha=0.0,
                                     class_weight=None,
                                     classifier=RandomForestClassifier(bootstrap=True,
                                                                       ccp_alpha=0.0,
                                                                       class_weight=None,
                                                                       criterion='gini',
                                                                       max_depth=None,
                                                                       max_features='sqrt',
                                                                       max_leaf_nodes=None,
                                                                       max_samples=None,
                                                                       min_impurity_decrease=0.0,
                                                                       min_samples_leaf=1,
                                                                       min_samples_split=2,
                                                                       min_weight_fraction_leaf=0.0,
                                                                       n_...
                                                                       oob_score=False,
                                                                       random_state=123,
                                                                       verbose=0,
                                                                       warm_start=False),
                                     criterion='gini', max_depth=None,
                                     max_features='sqrt', max_leaf_nodes=None,
                                     max_samples=None,
                                     min_impurity_decrease=0.0,
                                     min_samples_leaf=1, min_samples_split=2,
                                     min_weight_fraction_leaf=0.0,
                                     n_estimators=100, n_jobs=-1,
                                     oob_score=False, probability_threshold=0.5,
                                     random_state=123, verbose=0,
                                     warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002CF45207BB0>, system=True)
2023-05-13 19:02:02,342:INFO:Checking exceptions
2023-05-13 19:02:02,381:INFO:Preloading libraries
2023-05-13 19:02:02,416:INFO:Copying training dataset
2023-05-13 19:02:02,416:INFO:Plot type: auc
2023-05-13 19:02:02,877:INFO:Fitting Model
2023-05-13 19:02:02,878:WARNING:c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\sklearn\base.py:439: UserWarning: X does not have valid feature names, but RandomForestClassifier was fitted with feature names
  warnings.warn(

2023-05-13 19:02:02,879:INFO:Scoring test/hold-out set
2023-05-13 19:02:03,336:INFO:Visual Rendered Successfully
2023-05-13 19:02:03,582:INFO:plot_model() successfully completed......................................
2023-05-13 19:02:17,306:INFO:Initializing plot_model()
2023-05-13 19:02:17,307:INFO:plot_model(plot=pr, fold=KFold(n_splits=10, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=CustomProbabilityThresholdClassifier(bootstrap=True, ccp_alpha=0.0,
                                     class_weight=None,
                                     classifier=RandomForestClassifier(bootstrap=True,
                                                                       ccp_alpha=0.0,
                                                                       class_weight=None,
                                                                       criterion='gini',
                                                                       max_depth=None,
                                                                       max_features='sqrt',
                                                                       max_leaf_nodes=None,
                                                                       max_samples=None,
                                                                       min_impurity_decrease=0.0,
                                                                       min_samples_leaf=1,
                                                                       min_samples_split=2,
                                                                       min_weight_fraction_leaf=0.0,
                                                                       n_...
                                                                       oob_score=False,
                                                                       random_state=123,
                                                                       verbose=0,
                                                                       warm_start=False),
                                     criterion='gini', max_depth=None,
                                     max_features='sqrt', max_leaf_nodes=None,
                                     max_samples=None,
                                     min_impurity_decrease=0.0,
                                     min_samples_leaf=1, min_samples_split=2,
                                     min_weight_fraction_leaf=0.0,
                                     n_estimators=100, n_jobs=-1,
                                     oob_score=False, probability_threshold=0.5,
                                     random_state=123, verbose=0,
                                     warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002CF45207BB0>, system=True)
2023-05-13 19:02:17,307:INFO:Checking exceptions
2023-05-13 19:02:17,347:INFO:Preloading libraries
2023-05-13 19:02:17,380:INFO:Copying training dataset
2023-05-13 19:02:17,381:INFO:Plot type: pr
2023-05-13 19:02:17,843:INFO:Fitting Model
2023-05-13 19:02:17,845:WARNING:c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\sklearn\base.py:439: UserWarning: X does not have valid feature names, but RandomForestClassifier was fitted with feature names
  warnings.warn(

2023-05-13 19:02:17,846:INFO:Scoring test/hold-out set
2023-05-13 19:02:18,280:INFO:Visual Rendered Successfully
2023-05-13 19:02:18,500:INFO:plot_model() successfully completed......................................
2023-05-13 19:02:27,485:INFO:Initializing plot_model()
2023-05-13 19:02:27,485:INFO:plot_model(plot=error, fold=KFold(n_splits=10, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=CustomProbabilityThresholdClassifier(bootstrap=True, ccp_alpha=0.0,
                                     class_weight=None,
                                     classifier=RandomForestClassifier(bootstrap=True,
                                                                       ccp_alpha=0.0,
                                                                       class_weight=None,
                                                                       criterion='gini',
                                                                       max_depth=None,
                                                                       max_features='sqrt',
                                                                       max_leaf_nodes=None,
                                                                       max_samples=None,
                                                                       min_impurity_decrease=0.0,
                                                                       min_samples_leaf=1,
                                                                       min_samples_split=2,
                                                                       min_weight_fraction_leaf=0.0,
                                                                       n_...
                                                                       oob_score=False,
                                                                       random_state=123,
                                                                       verbose=0,
                                                                       warm_start=False),
                                     criterion='gini', max_depth=None,
                                     max_features='sqrt', max_leaf_nodes=None,
                                     max_samples=None,
                                     min_impurity_decrease=0.0,
                                     min_samples_leaf=1, min_samples_split=2,
                                     min_weight_fraction_leaf=0.0,
                                     n_estimators=100, n_jobs=-1,
                                     oob_score=False, probability_threshold=0.5,
                                     random_state=123, verbose=0,
                                     warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002CF45207BB0>, system=True)
2023-05-13 19:02:27,485:INFO:Checking exceptions
2023-05-13 19:02:27,521:INFO:Preloading libraries
2023-05-13 19:02:27,555:INFO:Copying training dataset
2023-05-13 19:02:27,555:INFO:Plot type: error
2023-05-13 19:02:28,015:INFO:Fitting Model
2023-05-13 19:02:28,016:WARNING:c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\sklearn\base.py:439: UserWarning: X does not have valid feature names, but RandomForestClassifier was fitted with feature names
  warnings.warn(

2023-05-13 19:02:28,016:INFO:Scoring test/hold-out set
2023-05-13 19:02:28,436:INFO:Visual Rendered Successfully
2023-05-13 19:02:28,656:INFO:plot_model() successfully completed......................................
2023-05-13 19:02:33,683:INFO:Initializing plot_model()
2023-05-13 19:02:33,683:INFO:plot_model(plot=rfe, fold=KFold(n_splits=10, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=CustomProbabilityThresholdClassifier(bootstrap=True, ccp_alpha=0.0,
                                     class_weight=None,
                                     classifier=RandomForestClassifier(bootstrap=True,
                                                                       ccp_alpha=0.0,
                                                                       class_weight=None,
                                                                       criterion='gini',
                                                                       max_depth=None,
                                                                       max_features='sqrt',
                                                                       max_leaf_nodes=None,
                                                                       max_samples=None,
                                                                       min_impurity_decrease=0.0,
                                                                       min_samples_leaf=1,
                                                                       min_samples_split=2,
                                                                       min_weight_fraction_leaf=0.0,
                                                                       n_...
                                                                       oob_score=False,
                                                                       random_state=123,
                                                                       verbose=0,
                                                                       warm_start=False),
                                     criterion='gini', max_depth=None,
                                     max_features='sqrt', max_leaf_nodes=None,
                                     max_samples=None,
                                     min_impurity_decrease=0.0,
                                     min_samples_leaf=1, min_samples_split=2,
                                     min_weight_fraction_leaf=0.0,
                                     n_estimators=100, n_jobs=-1,
                                     oob_score=False, probability_threshold=0.5,
                                     random_state=123, verbose=0,
                                     warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002CF45207BB0>, system=True)
2023-05-13 19:02:33,683:INFO:Checking exceptions
2023-05-13 19:02:33,722:INFO:Preloading libraries
2023-05-13 19:02:33,754:INFO:Copying training dataset
2023-05-13 19:02:33,754:INFO:Plot type: rfe
2023-05-13 19:02:34,241:INFO:Fitting Model
2023-05-13 19:20:13,930:INFO:Initializing compare_models()
2023-05-13 19:20:13,930:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002CF45207BB0>, include=['lr', 'dt', 'rf', 'ada', 'svm', 'knn'], fold=None, round=4, cross_validation=True, sort=Accuracy, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x000002CF45207BB0>, 'include': ['lr', 'dt', 'rf', 'ada', 'svm', 'knn'], 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2023-05-13 19:20:13,931:INFO:Checking exceptions
2023-05-13 19:20:13,945:INFO:Preparing display monitor
2023-05-13 19:20:13,991:INFO:Initializing Logistic Regression
2023-05-13 19:20:13,991:INFO:Total runtime is 1.661380132039388e-05 minutes
2023-05-13 19:20:13,998:INFO:SubProcess create_model() called ==================================
2023-05-13 19:20:13,998:INFO:Initializing create_model()
2023-05-13 19:20:13,998:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002CF45207BB0>, estimator=lr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002CF4EF6D100>, model_only=True, return_train_score=False, kwargs={})
2023-05-13 19:20:13,998:INFO:Checking exceptions
2023-05-13 19:20:13,998:INFO:Importing libraries
2023-05-13 19:20:13,998:INFO:Copying training dataset
2023-05-13 19:20:14,032:INFO:Defining folds
2023-05-13 19:20:14,032:INFO:Declaring metric variables
2023-05-13 19:20:14,038:INFO:Importing untrained model
2023-05-13 19:20:14,048:INFO:Logistic Regression Imported successfully
2023-05-13 19:20:14,066:INFO:Starting cross validation
2023-05-13 19:20:14,086:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-05-13 19:20:28,805:INFO:Calculating mean and std
2023-05-13 19:20:28,807:INFO:Creating metrics dataframe
2023-05-13 19:20:29,217:INFO:Uploading results into container
2023-05-13 19:20:29,219:INFO:Uploading model into container now
2023-05-13 19:20:29,219:INFO:_master_model_container: 7
2023-05-13 19:20:29,220:INFO:_display_container: 3
2023-05-13 19:20:29,221:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2023-05-13 19:20:29,221:INFO:create_model() successfully completed......................................
2023-05-13 19:20:29,496:INFO:SubProcess create_model() end ==================================
2023-05-13 19:20:29,496:INFO:Creating metrics dataframe
2023-05-13 19:20:29,511:INFO:Initializing Decision Tree Classifier
2023-05-13 19:20:29,511:INFO:Total runtime is 0.2586880048116048 minutes
2023-05-13 19:20:29,519:INFO:SubProcess create_model() called ==================================
2023-05-13 19:20:29,520:INFO:Initializing create_model()
2023-05-13 19:20:29,521:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002CF45207BB0>, estimator=dt, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002CF4EF6D100>, model_only=True, return_train_score=False, kwargs={})
2023-05-13 19:20:29,521:INFO:Checking exceptions
2023-05-13 19:20:29,521:INFO:Importing libraries
2023-05-13 19:20:29,521:INFO:Copying training dataset
2023-05-13 19:20:29,555:INFO:Defining folds
2023-05-13 19:20:29,555:INFO:Declaring metric variables
2023-05-13 19:20:29,563:INFO:Importing untrained model
2023-05-13 19:20:29,571:INFO:Decision Tree Classifier Imported successfully
2023-05-13 19:20:29,586:INFO:Starting cross validation
2023-05-13 19:20:29,610:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-05-13 19:21:23,265:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-13 19:21:23,266:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-13 19:21:23,266:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-13 19:21:23,266:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-13 19:21:24,112:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-05-13 19:21:51,913:INFO:PyCaret ClassificationExperiment
2023-05-13 19:21:51,913:INFO:Logging name: clf-default-name
2023-05-13 19:21:51,913:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2023-05-13 19:21:51,913:INFO:version 3.0.0
2023-05-13 19:21:51,914:INFO:Initializing setup()
2023-05-13 19:21:51,914:INFO:self.USI: f0f1
2023-05-13 19:21:51,914:INFO:self._variable_keys: {'_available_plots', 'data', 'memory', 'exp_name_log', '_ml_usecase', 'fix_imbalance', 'y', 'X', 'gpu_n_jobs_param', 'X_test', 'fold_generator', 'target_param', 'y_train', 'X_train', 'USI', 'is_multiclass', 'y_test', 'exp_id', 'log_plots_param', 'html_param', 'logging_param', 'gpu_param', 'idx', 'fold_groups_param', 'fold_shuffle_param', 'pipeline', 'n_jobs_param', 'seed'}
2023-05-13 19:21:51,914:INFO:Checking environment
2023-05-13 19:21:51,914:INFO:python_version: 3.8.16
2023-05-13 19:21:51,914:INFO:python_build: ('default', 'Mar  2 2023 03:18:16')
2023-05-13 19:21:51,914:INFO:machine: AMD64
2023-05-13 19:21:51,914:INFO:platform: Windows-10-10.0.19045-SP0
2023-05-13 19:21:51,917:INFO:Memory: svmem(total=34292408320, available=21474004992, percent=37.4, used=12818403328, free=21474004992)
2023-05-13 19:21:51,918:INFO:Physical Core: 4
2023-05-13 19:21:51,918:INFO:Logical Core: 8
2023-05-13 19:21:51,918:INFO:Checking libraries
2023-05-13 19:21:51,918:INFO:System:
2023-05-13 19:21:51,918:INFO:    python: 3.8.16 (default, Mar  2 2023, 03:18:16) [MSC v.1916 64 bit (AMD64)]
2023-05-13 19:21:51,918:INFO:executable: c:\Users\camil\anaconda3\envs\pycaretenv\python.exe
2023-05-13 19:21:51,918:INFO:   machine: Windows-10-10.0.19045-SP0
2023-05-13 19:21:51,918:INFO:PyCaret required dependencies:
2023-05-13 19:21:51,918:INFO:                 pip: 23.0.1
2023-05-13 19:21:51,918:INFO:          setuptools: 66.0.0
2023-05-13 19:21:51,918:INFO:             pycaret: 3.0.0
2023-05-13 19:21:51,919:INFO:             IPython: 8.12.2
2023-05-13 19:21:51,919:INFO:          ipywidgets: 8.0.6
2023-05-13 19:21:51,919:INFO:                tqdm: 4.65.0
2023-05-13 19:21:51,919:INFO:               numpy: 1.24.3
2023-05-13 19:21:51,919:INFO:              pandas: 1.5.3
2023-05-13 19:21:51,919:INFO:              jinja2: 3.1.2
2023-05-13 19:21:51,919:INFO:               scipy: 1.10.1
2023-05-13 19:21:51,919:INFO:              joblib: 1.2.0
2023-05-13 19:21:51,919:INFO:             sklearn: 1.2.2
2023-05-13 19:21:51,919:INFO:                pyod: 1.0.9
2023-05-13 19:21:51,919:INFO:            imblearn: 0.10.1
2023-05-13 19:21:51,919:INFO:   category_encoders: 2.6.0
2023-05-13 19:21:51,919:INFO:            lightgbm: 3.3.5
2023-05-13 19:21:51,919:INFO:               numba: 0.57.0
2023-05-13 19:21:51,919:INFO:            requests: 2.30.0
2023-05-13 19:21:51,919:INFO:          matplotlib: 3.7.1
2023-05-13 19:21:51,919:INFO:          scikitplot: 0.3.7
2023-05-13 19:21:51,919:INFO:         yellowbrick: 1.5
2023-05-13 19:21:51,920:INFO:              plotly: 5.14.1
2023-05-13 19:21:51,920:INFO:             kaleido: 0.2.1
2023-05-13 19:21:51,920:INFO:         statsmodels: 0.14.0
2023-05-13 19:21:51,920:INFO:              sktime: 0.18.0
2023-05-13 19:21:51,921:INFO:               tbats: 1.1.3
2023-05-13 19:21:51,921:INFO:            pmdarima: 2.0.3
2023-05-13 19:21:51,921:INFO:              psutil: 5.9.5
2023-05-13 19:21:51,921:INFO:PyCaret optional dependencies:
2023-05-13 19:21:51,941:INFO:                shap: Not installed
2023-05-13 19:21:51,941:INFO:           interpret: Not installed
2023-05-13 19:21:51,941:INFO:                umap: Not installed
2023-05-13 19:21:51,942:INFO:    pandas_profiling: Not installed
2023-05-13 19:21:51,942:INFO:  explainerdashboard: Not installed
2023-05-13 19:21:51,942:INFO:             autoviz: Not installed
2023-05-13 19:21:51,942:INFO:           fairlearn: Not installed
2023-05-13 19:21:51,942:INFO:             xgboost: Not installed
2023-05-13 19:21:51,942:INFO:            catboost: Not installed
2023-05-13 19:21:51,942:INFO:              kmodes: Not installed
2023-05-13 19:21:51,942:INFO:             mlxtend: Not installed
2023-05-13 19:21:51,942:INFO:       statsforecast: Not installed
2023-05-13 19:21:51,942:INFO:        tune_sklearn: Not installed
2023-05-13 19:21:51,942:INFO:                 ray: Not installed
2023-05-13 19:21:51,942:INFO:            hyperopt: Not installed
2023-05-13 19:21:51,942:INFO:              optuna: Not installed
2023-05-13 19:21:51,942:INFO:               skopt: Not installed
2023-05-13 19:21:51,942:INFO:              mlflow: Not installed
2023-05-13 19:21:51,942:INFO:              gradio: Not installed
2023-05-13 19:21:51,942:INFO:             fastapi: Not installed
2023-05-13 19:21:51,942:INFO:             uvicorn: Not installed
2023-05-13 19:21:51,943:INFO:              m2cgen: Not installed
2023-05-13 19:21:51,943:INFO:           evidently: Not installed
2023-05-13 19:21:51,943:INFO:               fugue: Not installed
2023-05-13 19:21:51,943:INFO:           streamlit: Not installed
2023-05-13 19:21:51,943:INFO:             prophet: Not installed
2023-05-13 19:21:51,943:INFO:None
2023-05-13 19:21:51,943:INFO:Set up data.
2023-05-13 19:21:52,147:INFO:Set up train/test split.
2023-05-13 19:21:52,244:INFO:Set up index.
2023-05-13 19:21:52,245:INFO:Set up folding strategy.
2023-05-13 19:21:52,247:INFO:Assigning column types.
2023-05-13 19:21:52,270:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-05-13 19:21:52,347:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-05-13 19:21:52,353:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-05-13 19:21:52,407:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-13 19:21:52,430:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-13 19:21:52,488:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-05-13 19:21:52,489:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-05-13 19:21:52,531:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-13 19:21:52,531:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-13 19:21:52,532:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-05-13 19:21:52,644:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-05-13 19:21:52,717:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-13 19:21:52,718:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-13 19:21:52,788:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-05-13 19:21:52,830:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-13 19:21:52,830:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-13 19:21:52,831:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2023-05-13 19:21:52,933:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-13 19:21:52,933:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-13 19:21:53,046:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-13 19:21:53,047:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-13 19:21:53,050:INFO:Preparing preprocessing pipeline...
2023-05-13 19:21:53,053:INFO:Set up label encoding.
2023-05-13 19:21:53,053:INFO:Set up date feature engineering.
2023-05-13 19:21:53,053:INFO:Set up simple imputation.
2023-05-13 19:21:53,072:INFO:Set up encoding of ordinal features.
2023-05-13 19:21:53,094:INFO:Set up encoding of categorical features.
2023-05-13 19:21:53,094:INFO:Set up removing multicollinearity.
2023-05-13 19:21:53,094:INFO:Set up removing outliers.
2023-05-13 19:21:53,094:INFO:Set up imbalanced handling.
2023-05-13 19:21:53,094:INFO:Set up feature normalization.
2023-05-13 19:21:53,096:INFO:Set up column name cleaning.
2023-05-13 19:21:53,823:INFO:Finished creating preprocessing pipeline.
2023-05-13 19:21:53,889:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\camil\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('date_feature_extractor',
                 TransformerWrapper(exclude=None, include=['Fecha.Expedicion'],
                                    transformer=ExtractDateTimeFeatures(features=['day',
                                                                                  'month',
                                                                                  'year']))),
                ('nu...
                                    transformer=FixImbalancer(estimator=SMOTE(k_neighbors=5,
                                                                              n_jobs=None,
                                                                              random_state=None,
                                                                              sampling_strategy='auto')))),
                ('normalize',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False)
2023-05-13 19:21:53,889:INFO:Creating final display dataframe.
2023-05-13 19:21:55,275:INFO:Setup _display_container:                     Description             Value
0                    Session id               123
1                        Target            Target
2                   Target type            Binary
3                Target mapping        0: 0, 1: 1
4           Original data shape       (50001, 35)
5        Transformed data shape       (79575, 45)
6   Transformed train set shape       (64574, 45)
7    Transformed test set shape       (15001, 45)
8               Ignore features                 7
9              Ordinal features                 4
10             Numeric features                15
11                Date features                 1
12         Categorical features                11
13     Rows with missing values            100.0%
14                   Preprocess              True
15              Imputation type            simple
16           Numeric imputation              mean
17       Categorical imputation              mode
18     Maximum one-hot encoding                25
19              Encoding method              None
20     Remove multicollinearity              True
21  Multicollinearity threshold               0.9
22              Remove outliers              True
23           Outliers threshold              0.05
24                Fix imbalance              True
25         Fix imbalance method             SMOTE
26                    Normalize              True
27             Normalize method            zscore
28               Fold Generator             KFold
29                  Fold Number                10
30                     CPU Jobs                -1
31                      Use GPU             False
32               Log Experiment             False
33              Experiment Name  clf-default-name
34                          USI              f0f1
2023-05-13 19:21:55,393:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-13 19:21:55,393:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-13 19:21:55,489:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-13 19:21:55,489:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-13 19:21:55,490:INFO:setup() successfully completed in 3.92s...............
2023-05-13 19:22:51,148:INFO:Initializing get_config()
2023-05-13 19:22:51,149:INFO:get_config(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001BB853092E0>, variable=X_train)
2023-05-13 19:22:51,149:INFO:Variable: 'X_train' used to return the transformed values in PyCaret 2.x. From PyCaret 3.x, this will return the raw values. If you need the transformed values, call get_config with 'X_train_transformed' instead.
2023-05-13 19:22:51,151:WARNING:c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\pycaret\internal\pycaret_experiment\pycaret_experiment.py:322: UserWarning: Variable: 'X_train' used to return the transformed values in PyCaret 2.x. From PyCaret 3.x, this will return the raw values. If you need the transformed values, call get_config with 'X_train_transformed' instead.
  warnings.warn(msg)  # print on screen

2023-05-13 19:22:51,192:INFO:Variable:  returned as       Fecha.Expedicion  Disponible.Avances  Limite.Avances  Total.Intereses  \
1219        2006-12-16        2.254981e+05        240000.0     15895.450195   
6555        2014-06-26        7.600000e+05        760000.0         0.000000   
26689       2014-04-28        2.400000e+05        240000.0         0.000000   
30872       2007-05-05        4.480000e+06       4480000.0       600.659973   
31178       2008-06-28        2.700000e+05        270000.0         0.000000   
...                ...                 ...             ...              ...   
5345        2007-02-08        8.845490e+05       1680000.0         0.000000   
48737       2017-01-11        4.500000e+04         45000.0         0.000000   
23822       2011-08-17        2.250000e+05        225000.0      2371.169922   
30564       2012-12-27        5.800000e+05        580000.0     38052.289062   
8743        2010-11-25        1.200000e+05        120000.0         0.000000   

       Saldos.Mes.Ant  Pagos.Mes.Ant  Vtas.Mes.Ant  Edad.Mora  Limite.Cupo  \
1219     5.745019e+05            0.0           0.0     3210.0     800000.0   
6555     0.000000e+00            0.0           0.0        0.0    1900000.0   
26689    1.464575e+04            0.0           0.0        0.0     800000.0   
30872    1.049563e+04            0.0           0.0        0.0    8960000.0   
31178    2.375500e+04            0.0           0.0        0.0     900000.0   
...               ...            ...           ...        ...          ...   
5345     1.175295e+06       237064.0           0.0        0.0    4200000.0   
48737    0.000000e+00            0.0           0.0        0.0     150000.0   
23822    1.005874e+05        55818.0           0.0        0.0     750000.0   
30564    6.928145e+05            0.0       19143.0        0.0    1450000.0   
8743     0.000000e+00            0.0           0.0        0.0     400000.0   

       Pago.del.Mes    Pago.Minimo        Vr.Mora  Vr.Cuota.Manejo  \
1219            0.0  574501.875000  171431.171875      9000.000000   
6555            0.0       0.000000       0.000000         0.000000   
26689           0.0   14645.750000       0.000000     14645.750000   
30872           0.0   10495.629883       0.000000      9894.000000   
31178       23755.0       0.000000       0.000000         0.000000   
...             ...            ...            ...              ...   
5345       234924.0       0.000000       0.000000         0.000000   
48737           0.0       0.000000       0.000000         0.000000   
23822           0.0   54853.000000       0.000000      4947.000000   
30564           0.0  692814.500000       0.000000     32078.449219   
8743            0.0       0.000000       0.000000         0.000000   

               Saldo categoria         segmento  edad      nivel_educativo  \
1219   574501.875000         A   Segmento_Joven  23.0           secundaria   
6555        0.000000         B   Segmento_Medio  45.0  tecnico_tecnologico   
26689   14645.750000         A  Segemnto_Basico  37.0           secundaria   
30872   10495.629883         C    Segmento_Alto  26.0  tecnico_tecnologico   
31178       0.000000         B   Segmento_Medio  55.0           secundaria   
...              ...       ...              ...   ...                  ...   
5345   940371.250000         C   Segmento_Medio  21.0  tecnico_tecnologico   
48737       0.000000         A  Segemnto_Basico  27.0             primaria   
23822  100587.406250         A  Segemnto_Basico  54.0             primaria   
30564  692814.500000         B   Segmento_Medio  33.0  tecnico_tecnologico   
8743        0.000000         A  Segemnto_Basico  29.0             primaria   

      estado_civil Genero PAC contrato estrato cuota_monetaria sub_vivenda  \
1219       soltero      M   2        4     NaN               1           0   
6555      separado      M   1        3     NaN               0           0   
26689      soltero      F   2        1     NaN               1           0   
30872       casado      F   1        2     NaN               0           0   
31178     separado      M   2        3     NaN               1           0   
...            ...    ...  ..      ...     ...             ...         ...   
5345        casado      M   1        3     4.0               0           0   
48737       casado      F   3        2     NaN               1           0   
23822      soltero      M   3        3     NaN               1           0   
30564     separado      M   1        4     NaN               0           0   
8743      separado      M   3        1     NaN               1           0   

      bono_lonchera  porc_avances  
1219              1           0.3  
6555              0           0.4  
26689             1           0.3  
30872             0           0.5  
31178             1           0.3  
...             ...           ...  
5345              0           0.4  
48737             1           0.3  
23822             1           0.3  
30564             0           0.4  
8743              1           0.3  

[35000 rows x 27 columns]
2023-05-13 19:22:51,192:INFO:get_config() successfully completed......................................
2023-05-13 19:23:08,359:INFO:Initializing get_config()
2023-05-13 19:23:08,362:INFO:get_config(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001BB853092E0>, variable=X_test)
2023-05-13 19:23:08,363:INFO:Variable: 'X_test' used to return the transformed values in PyCaret 2.x. From PyCaret 3.x, this will return the raw values. If you need the transformed values, call get_config with 'X_test_transformed' instead.
2023-05-13 19:23:08,363:WARNING:c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\pycaret\internal\pycaret_experiment\pycaret_experiment.py:322: UserWarning: Variable: 'X_test' used to return the transformed values in PyCaret 2.x. From PyCaret 3.x, this will return the raw values. If you need the transformed values, call get_config with 'X_test_transformed' instead.
  warnings.warn(msg)  # print on screen

2023-05-13 19:23:08,399:INFO:Variable:  returned as       Fecha.Expedicion  Disponible.Avances  Limite.Avances  Total.Intereses  \
5694        2010-03-19           2625000.0       2625000.0         0.000000   
7540        2008-07-10                 0.0        270000.0    494045.468750   
30169       2014-06-03            225000.0        225000.0       338.959991   
13879       2016-07-27            560000.0        560000.0         0.000000   
33377       2016-02-03            210000.0        210000.0         0.000000   
...                ...                 ...             ...              ...   
29541       2018-02-14            174000.0        174000.0         0.000000   
16826       2009-08-27            600000.0        600000.0         0.000000   
23554       2013-04-11            120000.0        120000.0       613.940002   
23012       2014-04-25            876000.0        876000.0     20172.650391   
33047       2016-03-23             10300.0        210000.0     13705.400391   

       Saldos.Mes.Ant  Pagos.Mes.Ant  Vtas.Mes.Ant  Edad.Mora  Limite.Cupo  \
5694     0.000000e+00           0.00          0.00        0.0    5250000.0   
7540     1.329984e+06           0.00          0.00       60.0     900000.0   
30169    5.285100e+03       41022.00          0.00        0.0     750000.0   
13879    0.000000e+00           0.00          0.00        0.0    1400000.0   
33377    0.000000e+00           0.00          0.00        0.0     700000.0   
...               ...            ...           ...        ...          ...   
29541    0.000000e+00           0.00          0.00        0.0     580000.0   
16826    0.000000e+00           0.00          0.00        0.0    1500000.0   
23554    7.169794e+04           0.00          0.00        0.0     400000.0   
23012    8.962524e+05      510263.75     363323.75        0.0    2190000.0   
33047    6.386579e+05       50000.00          0.00        0.0     700000.0   

       Pago.del.Mes    Pago.Minimo       Vr.Mora  Vr.Cuota.Manejo  \
5694            0.0       0.000000      0.000000         0.000000   
7540            0.0  712041.000000  12673.410156    151574.000000   
30169           0.0    5285.100098      0.000000      4946.140137   
13879           0.0       0.000000      0.000000         0.000000   
33377           0.0       0.000000      0.000000         0.000000   
...             ...            ...           ...              ...   
29541           0.0       0.000000      0.000000         0.000000   
16826           0.0       0.000000      0.000000         0.000000   
23554           0.0   71697.937500      0.000000     71084.000000   
23012           0.0  492231.000000      0.000000      4947.000000   
33047           0.0   35000.000000      0.000000      4947.000000   

              Saldo categoria         segmento  edad      nivel_educativo  \
5694   0.000000e+00         C   Segmento_Medio  32.0  tecnico_tecnologico   
7540   1.329984e+06         B   Segmento_Medio  27.0           secundaria   
30169  5.285100e+03         A  Segemnto_Basico  42.0             primaria   
13879  0.000000e+00         B   Segmento_Medio  40.0  tecnico_tecnologico   
33377  0.000000e+00         A  Segemnto_Basico  30.0             primaria   
...             ...       ...              ...   ...                  ...   
29541  0.000000e+00         A  Segemnto_Basico  47.0             primaria   
16826  0.000000e+00         B   Segmento_Medio  27.0  tecnico_tecnologico   
23554  7.169794e+04         A  Segemnto_Basico  52.0             primaria   
23012  8.962524e+05         B   Segmento_Medio  36.0  tecnico_tecnologico   
33047  6.386579e+05         A  Segemnto_Basico  25.0             primaria   

      estado_civil Genero PAC contrato estrato cuota_monetaria sub_vivenda  \
5694      separado      M   1        4     NaN               0           0   
7540       soltero      F   2        4     NaN               1           0   
30169        viudo      M   3        3     NaN               1           0   
13879        viudo      F   1        4     NaN               0           0   
33377       casado      M   3        1     NaN               1           0   
...            ...    ...  ..      ...     ...             ...         ...   
29541      soltero      F   3        2     NaN               1           0   
16826       casado      F   1        1     NaN               0           0   
23554     separado      F   3        4     NaN               1           0   
23012        viudo      M   1        4     NaN               0           0   
33047      soltero      F   3        3     NaN               1           0   

      bono_lonchera  porc_avances  
5694              0           0.5  
7540              1           0.3  
30169             1           0.3  
13879             0           0.4  
33377             1           0.3  
...             ...           ...  
29541             1           0.3  
16826             0           0.4  
23554             1           0.3  
23012             0           0.4  
33047             1           0.3  

[15001 rows x 27 columns]
2023-05-13 19:23:08,399:INFO:get_config() successfully completed......................................
2023-05-13 19:23:49,681:INFO:Initializing get_config()
2023-05-13 19:23:49,681:INFO:get_config(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001BB853092E0>, variable=Y_train)
2023-05-13 19:23:59,455:INFO:Initializing get_config()
2023-05-13 19:23:59,456:INFO:get_config(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001BB853092E0>, variable=y_train)
2023-05-13 19:23:59,456:INFO:Variable: 'y_train' used to return the transformed values in PyCaret 2.x. From PyCaret 3.x, this will return the raw values. If you need the transformed values, call get_config with 'y_train_transformed' instead.
2023-05-13 19:23:59,456:WARNING:c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\pycaret\internal\pycaret_experiment\pycaret_experiment.py:322: UserWarning: Variable: 'y_train' used to return the transformed values in PyCaret 2.x. From PyCaret 3.x, this will return the raw values. If you need the transformed values, call get_config with 'y_train_transformed' instead.
  warnings.warn(msg)  # print on screen

2023-05-13 19:23:59,468:INFO:Variable:  returned as 1219     0
6555     0
26689    0
30872    0
31178    0
        ..
5345     0
48737    0
23822    0
30564    0
8743     0
Name: Target, Length: 35000, dtype: category
Categories (2, object): ['0', '1']
2023-05-13 19:23:59,468:INFO:get_config() successfully completed......................................
2023-05-13 19:24:07,438:INFO:Initializing get_config()
2023-05-13 19:24:07,439:INFO:get_config(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001BB853092E0>, variable=y_train)
2023-05-13 19:24:07,440:INFO:Variable: 'y_train' used to return the transformed values in PyCaret 2.x. From PyCaret 3.x, this will return the raw values. If you need the transformed values, call get_config with 'y_train_transformed' instead.
2023-05-13 19:24:07,440:WARNING:c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\pycaret\internal\pycaret_experiment\pycaret_experiment.py:322: UserWarning: Variable: 'y_train' used to return the transformed values in PyCaret 2.x. From PyCaret 3.x, this will return the raw values. If you need the transformed values, call get_config with 'y_train_transformed' instead.
  warnings.warn(msg)  # print on screen

2023-05-13 19:24:07,451:INFO:Variable:  returned as 1219     0
6555     0
26689    0
30872    0
31178    0
        ..
5345     0
48737    0
23822    0
30564    0
8743     0
Name: Target, Length: 35000, dtype: category
Categories (2, object): ['0', '1']
2023-05-13 19:24:07,452:INFO:get_config() successfully completed......................................
2023-05-13 19:24:23,619:INFO:PyCaret ClassificationExperiment
2023-05-13 19:24:23,619:INFO:Logging name: clf-default-name
2023-05-13 19:24:23,619:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2023-05-13 19:24:23,619:INFO:version 3.0.0
2023-05-13 19:24:23,619:INFO:Initializing setup()
2023-05-13 19:24:23,619:INFO:self.USI: f7b2
2023-05-13 19:24:23,619:INFO:self._variable_keys: {'_available_plots', 'data', 'memory', 'exp_name_log', '_ml_usecase', 'fix_imbalance', 'y', 'X', 'gpu_n_jobs_param', 'X_test', 'fold_generator', 'target_param', 'y_train', 'X_train', 'USI', 'is_multiclass', 'y_test', 'exp_id', 'log_plots_param', 'html_param', 'logging_param', 'gpu_param', 'idx', 'fold_groups_param', 'fold_shuffle_param', 'pipeline', 'n_jobs_param', 'seed'}
2023-05-13 19:24:23,619:INFO:Checking environment
2023-05-13 19:24:23,619:INFO:python_version: 3.8.16
2023-05-13 19:24:23,619:INFO:python_build: ('default', 'Mar  2 2023 03:18:16')
2023-05-13 19:24:23,619:INFO:machine: AMD64
2023-05-13 19:24:23,620:INFO:platform: Windows-10-10.0.19045-SP0
2023-05-13 19:24:23,623:INFO:Memory: svmem(total=34292408320, available=21382062080, percent=37.6, used=12910346240, free=21382062080)
2023-05-13 19:24:23,623:INFO:Physical Core: 4
2023-05-13 19:24:23,623:INFO:Logical Core: 8
2023-05-13 19:24:23,623:INFO:Checking libraries
2023-05-13 19:24:23,623:INFO:System:
2023-05-13 19:24:23,623:INFO:    python: 3.8.16 (default, Mar  2 2023, 03:18:16) [MSC v.1916 64 bit (AMD64)]
2023-05-13 19:24:23,623:INFO:executable: c:\Users\camil\anaconda3\envs\pycaretenv\python.exe
2023-05-13 19:24:23,623:INFO:   machine: Windows-10-10.0.19045-SP0
2023-05-13 19:24:23,623:INFO:PyCaret required dependencies:
2023-05-13 19:24:23,623:INFO:                 pip: 23.0.1
2023-05-13 19:24:23,623:INFO:          setuptools: 66.0.0
2023-05-13 19:24:23,624:INFO:             pycaret: 3.0.0
2023-05-13 19:24:23,624:INFO:             IPython: 8.12.2
2023-05-13 19:24:23,624:INFO:          ipywidgets: 8.0.6
2023-05-13 19:24:23,624:INFO:                tqdm: 4.65.0
2023-05-13 19:24:23,624:INFO:               numpy: 1.24.3
2023-05-13 19:24:23,624:INFO:              pandas: 1.5.3
2023-05-13 19:24:23,624:INFO:              jinja2: 3.1.2
2023-05-13 19:24:23,624:INFO:               scipy: 1.10.1
2023-05-13 19:24:23,624:INFO:              joblib: 1.2.0
2023-05-13 19:24:23,624:INFO:             sklearn: 1.2.2
2023-05-13 19:24:23,624:INFO:                pyod: 1.0.9
2023-05-13 19:24:23,624:INFO:            imblearn: 0.10.1
2023-05-13 19:24:23,624:INFO:   category_encoders: 2.6.0
2023-05-13 19:24:23,624:INFO:            lightgbm: 3.3.5
2023-05-13 19:24:23,624:INFO:               numba: 0.57.0
2023-05-13 19:24:23,624:INFO:            requests: 2.30.0
2023-05-13 19:24:23,624:INFO:          matplotlib: 3.7.1
2023-05-13 19:24:23,624:INFO:          scikitplot: 0.3.7
2023-05-13 19:24:23,625:INFO:         yellowbrick: 1.5
2023-05-13 19:24:23,625:INFO:              plotly: 5.14.1
2023-05-13 19:24:23,625:INFO:             kaleido: 0.2.1
2023-05-13 19:24:23,625:INFO:         statsmodels: 0.14.0
2023-05-13 19:24:23,625:INFO:              sktime: 0.18.0
2023-05-13 19:24:23,625:INFO:               tbats: 1.1.3
2023-05-13 19:24:23,625:INFO:            pmdarima: 2.0.3
2023-05-13 19:24:23,625:INFO:              psutil: 5.9.5
2023-05-13 19:24:23,625:INFO:PyCaret optional dependencies:
2023-05-13 19:24:23,625:INFO:                shap: Not installed
2023-05-13 19:24:23,625:INFO:           interpret: Not installed
2023-05-13 19:24:23,625:INFO:                umap: Not installed
2023-05-13 19:24:23,625:INFO:    pandas_profiling: Not installed
2023-05-13 19:24:23,625:INFO:  explainerdashboard: Not installed
2023-05-13 19:24:23,625:INFO:             autoviz: Not installed
2023-05-13 19:24:23,625:INFO:           fairlearn: Not installed
2023-05-13 19:24:23,625:INFO:             xgboost: Not installed
2023-05-13 19:24:23,626:INFO:            catboost: Not installed
2023-05-13 19:24:23,626:INFO:              kmodes: Not installed
2023-05-13 19:24:23,626:INFO:             mlxtend: Not installed
2023-05-13 19:24:23,626:INFO:       statsforecast: Not installed
2023-05-13 19:24:23,626:INFO:        tune_sklearn: Not installed
2023-05-13 19:24:23,626:INFO:                 ray: Not installed
2023-05-13 19:24:23,626:INFO:            hyperopt: Not installed
2023-05-13 19:24:23,626:INFO:              optuna: Not installed
2023-05-13 19:24:23,626:INFO:               skopt: Not installed
2023-05-13 19:24:23,626:INFO:              mlflow: Not installed
2023-05-13 19:24:23,626:INFO:              gradio: Not installed
2023-05-13 19:24:23,626:INFO:             fastapi: Not installed
2023-05-13 19:24:23,626:INFO:             uvicorn: Not installed
2023-05-13 19:24:23,626:INFO:              m2cgen: Not installed
2023-05-13 19:24:23,626:INFO:           evidently: Not installed
2023-05-13 19:24:23,626:INFO:               fugue: Not installed
2023-05-13 19:24:23,626:INFO:           streamlit: Not installed
2023-05-13 19:24:23,626:INFO:             prophet: Not installed
2023-05-13 19:24:23,627:INFO:None
2023-05-13 19:24:23,627:INFO:Set up data.
2023-05-13 19:24:23,819:INFO:Set up train/test split.
2023-05-13 19:24:23,909:INFO:Set up index.
2023-05-13 19:24:23,909:INFO:Set up folding strategy.
2023-05-13 19:24:23,909:INFO:Assigning column types.
2023-05-13 19:24:23,926:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-05-13 19:24:23,987:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-05-13 19:24:23,988:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-05-13 19:24:24,026:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-13 19:24:24,027:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-13 19:24:24,088:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-05-13 19:24:24,089:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-05-13 19:24:24,128:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-13 19:24:24,128:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-13 19:24:24,129:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-05-13 19:24:24,189:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-05-13 19:24:24,229:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-13 19:24:24,229:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-13 19:24:24,301:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-05-13 19:24:24,344:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-13 19:24:24,344:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-13 19:24:24,344:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2023-05-13 19:24:24,446:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-13 19:24:24,446:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-13 19:24:24,544:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-13 19:24:24,544:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-13 19:24:24,545:INFO:Preparing preprocessing pipeline...
2023-05-13 19:24:24,549:INFO:Set up label encoding.
2023-05-13 19:24:24,549:INFO:Set up date feature engineering.
2023-05-13 19:24:24,549:INFO:Set up simple imputation.
2023-05-13 19:24:24,566:INFO:Set up encoding of ordinal features.
2023-05-13 19:24:24,585:INFO:Set up encoding of categorical features.
2023-05-13 19:24:24,586:INFO:Set up removing multicollinearity.
2023-05-13 19:24:24,586:INFO:Set up removing outliers.
2023-05-13 19:24:24,586:INFO:Set up feature normalization.
2023-05-13 19:24:24,588:INFO:Set up column name cleaning.
2023-05-13 19:24:25,202:INFO:Finished creating preprocessing pipeline.
2023-05-13 19:24:25,263:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\camil\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('date_feature_extractor',
                 TransformerWrapper(exclude=None, include=['Fecha.Expedicion'],
                                    transformer=ExtractDateTimeFeatures(features=['day',
                                                                                  'month',
                                                                                  'year']))),
                ('nu...
                                    transformer=RemoveOutliers(method='iforest',
                                                               n_jobs=1,
                                                               random_state=123,
                                                               threshold=0.05))),
                ('normalize',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False)
2023-05-13 19:24:25,264:INFO:Creating final display dataframe.
2023-05-13 19:24:26,509:INFO:Setup _display_container:                     Description             Value
0                    Session id               123
1                        Target            Target
2                   Target type            Binary
3                Target mapping        0: 0, 1: 1
4           Original data shape       (50001, 35)
5        Transformed data shape       (48251, 45)
6   Transformed train set shape       (33250, 45)
7    Transformed test set shape       (15001, 45)
8               Ignore features                 7
9              Ordinal features                 4
10             Numeric features                15
11                Date features                 1
12         Categorical features                11
13     Rows with missing values            100.0%
14                   Preprocess              True
15              Imputation type            simple
16           Numeric imputation              mean
17       Categorical imputation              mode
18     Maximum one-hot encoding                25
19              Encoding method              None
20     Remove multicollinearity              True
21  Multicollinearity threshold               0.9
22              Remove outliers              True
23           Outliers threshold              0.05
24                    Normalize              True
25             Normalize method            zscore
26               Fold Generator             KFold
27                  Fold Number                10
28                     CPU Jobs                -1
29                      Use GPU             False
30               Log Experiment             False
31              Experiment Name  clf-default-name
32                          USI              f7b2
2023-05-13 19:24:26,633:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-13 19:24:26,634:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-13 19:24:26,739:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-13 19:24:26,739:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-13 19:24:26,740:INFO:setup() successfully completed in 3.48s...............
2023-05-13 19:26:33,132:INFO:Initializing compare_models()
2023-05-13 19:26:33,132:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001BB867A4550>, include=['lr', 'dt', 'rf', 'ada', 'svm', 'knn'], fold=None, round=4, cross_validation=True, sort=Accuracy, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x000001BB867A4550>, 'include': ['lr', 'dt', 'rf', 'ada', 'svm', 'knn'], 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2023-05-13 19:26:33,133:INFO:Checking exceptions
2023-05-13 19:26:33,153:INFO:Preparing display monitor
2023-05-13 19:26:33,197:INFO:Initializing Logistic Regression
2023-05-13 19:26:33,197:INFO:Total runtime is 0.0 minutes
2023-05-13 19:26:33,203:INFO:SubProcess create_model() called ==================================
2023-05-13 19:26:33,204:INFO:Initializing create_model()
2023-05-13 19:26:33,204:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001BB867A4550>, estimator=lr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001BB8676C8B0>, model_only=True, return_train_score=False, kwargs={})
2023-05-13 19:26:33,204:INFO:Checking exceptions
2023-05-13 19:26:33,204:INFO:Importing libraries
2023-05-13 19:26:33,204:INFO:Copying training dataset
2023-05-13 19:26:33,236:INFO:Defining folds
2023-05-13 19:26:33,236:INFO:Declaring metric variables
2023-05-13 19:26:33,243:INFO:Importing untrained model
2023-05-13 19:26:33,250:INFO:Logistic Regression Imported successfully
2023-05-13 19:26:33,263:INFO:Starting cross validation
2023-05-13 19:26:33,268:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-05-13 19:26:47,163:INFO:Calculating mean and std
2023-05-13 19:26:47,165:INFO:Creating metrics dataframe
2023-05-13 19:26:47,624:INFO:Uploading results into container
2023-05-13 19:26:47,625:INFO:Uploading model into container now
2023-05-13 19:26:47,626:INFO:_master_model_container: 1
2023-05-13 19:26:47,626:INFO:_display_container: 2
2023-05-13 19:26:47,627:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2023-05-13 19:26:47,627:INFO:create_model() successfully completed......................................
2023-05-13 19:26:47,732:INFO:SubProcess create_model() end ==================================
2023-05-13 19:26:47,732:INFO:Creating metrics dataframe
2023-05-13 19:26:47,746:INFO:Initializing Decision Tree Classifier
2023-05-13 19:26:47,746:INFO:Total runtime is 0.24248411258061728 minutes
2023-05-13 19:26:47,751:INFO:SubProcess create_model() called ==================================
2023-05-13 19:26:47,752:INFO:Initializing create_model()
2023-05-13 19:26:47,753:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001BB867A4550>, estimator=dt, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001BB8676C8B0>, model_only=True, return_train_score=False, kwargs={})
2023-05-13 19:26:47,753:INFO:Checking exceptions
2023-05-13 19:26:47,754:INFO:Importing libraries
2023-05-13 19:26:47,754:INFO:Copying training dataset
2023-05-13 19:26:47,777:INFO:Defining folds
2023-05-13 19:26:47,778:INFO:Declaring metric variables
2023-05-13 19:26:47,786:INFO:Importing untrained model
2023-05-13 19:26:47,792:INFO:Decision Tree Classifier Imported successfully
2023-05-13 19:26:47,803:INFO:Starting cross validation
2023-05-13 19:26:47,806:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-05-13 19:26:54,496:INFO:Calculating mean and std
2023-05-13 19:26:54,497:INFO:Creating metrics dataframe
2023-05-13 19:26:54,958:INFO:Uploading results into container
2023-05-13 19:26:54,959:INFO:Uploading model into container now
2023-05-13 19:26:54,960:INFO:_master_model_container: 2
2023-05-13 19:26:54,961:INFO:_display_container: 2
2023-05-13 19:26:54,961:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=123, splitter='best')
2023-05-13 19:26:54,961:INFO:create_model() successfully completed......................................
2023-05-13 19:26:55,050:INFO:SubProcess create_model() end ==================================
2023-05-13 19:26:55,051:INFO:Creating metrics dataframe
2023-05-13 19:26:55,067:INFO:Initializing Random Forest Classifier
2023-05-13 19:26:55,067:INFO:Total runtime is 0.36451038122177126 minutes
2023-05-13 19:26:55,074:INFO:SubProcess create_model() called ==================================
2023-05-13 19:26:55,075:INFO:Initializing create_model()
2023-05-13 19:26:55,075:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001BB867A4550>, estimator=rf, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001BB8676C8B0>, model_only=True, return_train_score=False, kwargs={})
2023-05-13 19:26:55,075:INFO:Checking exceptions
2023-05-13 19:26:55,075:INFO:Importing libraries
2023-05-13 19:26:55,075:INFO:Copying training dataset
2023-05-13 19:26:55,097:INFO:Defining folds
2023-05-13 19:26:55,097:INFO:Declaring metric variables
2023-05-13 19:26:55,104:INFO:Importing untrained model
2023-05-13 19:26:55,110:INFO:Random Forest Classifier Imported successfully
2023-05-13 19:26:55,122:INFO:Starting cross validation
2023-05-13 19:26:55,126:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-05-13 19:27:03,368:WARNING:c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 1.63s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  fitted_estimator = self._memory_fit(

2023-05-13 19:27:03,592:WARNING:c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 0.74s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  fitted_estimator = self._memory_fit(

2023-05-13 19:27:04,893:WARNING:c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 0.51s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-05-13 19:27:04,971:WARNING:c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 0.52s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-05-13 19:27:11,959:INFO:Calculating mean and std
2023-05-13 19:27:11,960:INFO:Creating metrics dataframe
2023-05-13 19:27:12,467:INFO:Uploading results into container
2023-05-13 19:27:12,467:INFO:Uploading model into container now
2023-05-13 19:27:12,468:INFO:_master_model_container: 3
2023-05-13 19:27:12,468:INFO:_display_container: 2
2023-05-13 19:27:12,468:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=123, verbose=0, warm_start=False)
2023-05-13 19:27:12,468:INFO:create_model() successfully completed......................................
2023-05-13 19:27:12,560:INFO:SubProcess create_model() end ==================================
2023-05-13 19:27:12,561:INFO:Creating metrics dataframe
2023-05-13 19:27:12,577:INFO:Initializing Ada Boost Classifier
2023-05-13 19:27:12,577:INFO:Total runtime is 0.656345796585083 minutes
2023-05-13 19:27:12,584:INFO:SubProcess create_model() called ==================================
2023-05-13 19:27:12,584:INFO:Initializing create_model()
2023-05-13 19:27:12,584:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001BB867A4550>, estimator=ada, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001BB8676C8B0>, model_only=True, return_train_score=False, kwargs={})
2023-05-13 19:27:12,585:INFO:Checking exceptions
2023-05-13 19:27:12,585:INFO:Importing libraries
2023-05-13 19:27:12,585:INFO:Copying training dataset
2023-05-13 19:27:12,611:INFO:Defining folds
2023-05-13 19:27:12,611:INFO:Declaring metric variables
2023-05-13 19:27:12,619:INFO:Importing untrained model
2023-05-13 19:27:12,624:INFO:Ada Boost Classifier Imported successfully
2023-05-13 19:27:12,636:INFO:Starting cross validation
2023-05-13 19:27:12,643:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-05-13 19:27:24,449:INFO:Calculating mean and std
2023-05-13 19:27:24,451:INFO:Creating metrics dataframe
2023-05-13 19:27:24,938:INFO:Uploading results into container
2023-05-13 19:27:24,939:INFO:Uploading model into container now
2023-05-13 19:27:24,939:INFO:_master_model_container: 4
2023-05-13 19:27:24,939:INFO:_display_container: 2
2023-05-13 19:27:24,940:INFO:AdaBoostClassifier(algorithm='SAMME.R', base_estimator='deprecated',
                   estimator=None, learning_rate=1.0, n_estimators=50,
                   random_state=123)
2023-05-13 19:27:24,940:INFO:create_model() successfully completed......................................
2023-05-13 19:27:25,028:INFO:SubProcess create_model() end ==================================
2023-05-13 19:27:25,029:INFO:Creating metrics dataframe
2023-05-13 19:27:25,051:INFO:Initializing SVM - Linear Kernel
2023-05-13 19:27:25,052:INFO:Total runtime is 0.8642507831255595 minutes
2023-05-13 19:27:25,073:INFO:SubProcess create_model() called ==================================
2023-05-13 19:27:25,074:INFO:Initializing create_model()
2023-05-13 19:27:25,074:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001BB867A4550>, estimator=svm, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001BB8676C8B0>, model_only=True, return_train_score=False, kwargs={})
2023-05-13 19:27:25,075:INFO:Checking exceptions
2023-05-13 19:27:25,075:INFO:Importing libraries
2023-05-13 19:27:25,075:INFO:Copying training dataset
2023-05-13 19:27:25,104:INFO:Defining folds
2023-05-13 19:27:25,104:INFO:Declaring metric variables
2023-05-13 19:27:25,109:INFO:Importing untrained model
2023-05-13 19:27:25,116:INFO:SVM - Linear Kernel Imported successfully
2023-05-13 19:27:25,127:INFO:Starting cross validation
2023-05-13 19:27:25,131:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-05-13 19:27:27,343:WARNING:c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-05-13 19:27:27,358:WARNING:c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-05-13 19:27:27,367:WARNING:c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-05-13 19:27:27,443:WARNING:c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-13 19:27:27,451:WARNING:c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-05-13 19:27:27,468:WARNING:c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-13 19:27:27,497:WARNING:c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-05-13 19:27:27,504:WARNING:c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-05-13 19:27:27,514:WARNING:c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-05-13 19:27:27,567:WARNING:c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-13 19:27:27,602:WARNING:c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-05-13 19:27:27,622:WARNING:c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-13 19:27:27,718:WARNING:c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-13 19:27:29,688:WARNING:c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-05-13 19:27:29,722:WARNING:c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-05-13 19:27:29,747:WARNING:c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-13 19:27:31,721:INFO:Calculating mean and std
2023-05-13 19:27:31,722:INFO:Creating metrics dataframe
2023-05-13 19:27:32,240:INFO:Uploading results into container
2023-05-13 19:27:32,241:INFO:Uploading model into container now
2023-05-13 19:27:32,241:INFO:_master_model_container: 5
2023-05-13 19:27:32,241:INFO:_display_container: 2
2023-05-13 19:27:32,242:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=123, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2023-05-13 19:27:32,242:INFO:create_model() successfully completed......................................
2023-05-13 19:27:32,333:INFO:SubProcess create_model() end ==================================
2023-05-13 19:27:32,333:INFO:Creating metrics dataframe
2023-05-13 19:27:32,350:INFO:Initializing K Neighbors Classifier
2023-05-13 19:27:32,350:INFO:Total runtime is 0.9858885645866394 minutes
2023-05-13 19:27:32,355:INFO:SubProcess create_model() called ==================================
2023-05-13 19:27:32,355:INFO:Initializing create_model()
2023-05-13 19:27:32,355:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001BB867A4550>, estimator=knn, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001BB8676C8B0>, model_only=True, return_train_score=False, kwargs={})
2023-05-13 19:27:32,356:INFO:Checking exceptions
2023-05-13 19:27:32,356:INFO:Importing libraries
2023-05-13 19:27:32,356:INFO:Copying training dataset
2023-05-13 19:27:32,382:INFO:Defining folds
2023-05-13 19:27:32,383:INFO:Declaring metric variables
2023-05-13 19:27:32,388:INFO:Importing untrained model
2023-05-13 19:27:32,394:INFO:K Neighbors Classifier Imported successfully
2023-05-13 19:27:32,407:INFO:Starting cross validation
2023-05-13 19:27:32,410:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-05-13 19:27:37,488:WARNING:c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-13 19:27:42,096:INFO:Calculating mean and std
2023-05-13 19:27:42,100:INFO:Creating metrics dataframe
2023-05-13 19:27:42,608:INFO:Uploading results into container
2023-05-13 19:27:42,609:INFO:Uploading model into container now
2023-05-13 19:27:42,609:INFO:_master_model_container: 6
2023-05-13 19:27:42,609:INFO:_display_container: 2
2023-05-13 19:27:42,610:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2023-05-13 19:27:42,610:INFO:create_model() successfully completed......................................
2023-05-13 19:27:42,699:INFO:SubProcess create_model() end ==================================
2023-05-13 19:27:42,699:INFO:Creating metrics dataframe
2023-05-13 19:27:42,732:INFO:Initializing create_model()
2023-05-13 19:27:42,733:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001BB867A4550>, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=123, verbose=0, warm_start=False), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-05-13 19:27:42,733:INFO:Checking exceptions
2023-05-13 19:27:42,735:INFO:Importing libraries
2023-05-13 19:27:42,736:INFO:Copying training dataset
2023-05-13 19:27:42,758:INFO:Defining folds
2023-05-13 19:27:42,758:INFO:Declaring metric variables
2023-05-13 19:27:42,758:INFO:Importing untrained model
2023-05-13 19:27:42,758:INFO:Declaring custom model
2023-05-13 19:27:42,759:INFO:Random Forest Classifier Imported successfully
2023-05-13 19:27:42,763:INFO:Cross validation set to False
2023-05-13 19:27:42,763:INFO:Fitting Model
2023-05-13 19:27:45,000:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=123, verbose=0, warm_start=False)
2023-05-13 19:27:45,000:INFO:create_model() successfully completed......................................
2023-05-13 19:27:45,125:INFO:_master_model_container: 6
2023-05-13 19:27:45,126:INFO:_display_container: 2
2023-05-13 19:27:45,126:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=123, verbose=0, warm_start=False)
2023-05-13 19:27:45,126:INFO:compare_models() successfully completed......................................
2023-05-13 19:28:05,404:INFO:Initializing compare_models()
2023-05-13 19:28:05,404:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001BB867A4550>, include=None, fold=None, round=4, cross_validation=True, sort=Accuracy, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x000001BB867A4550>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2023-05-13 19:28:05,404:INFO:Checking exceptions
2023-05-13 19:28:05,415:INFO:Preparing display monitor
2023-05-13 19:28:05,454:INFO:Initializing Logistic Regression
2023-05-13 19:28:05,456:INFO:Total runtime is 3.043015797932943e-05 minutes
2023-05-13 19:28:05,465:INFO:SubProcess create_model() called ==================================
2023-05-13 19:28:05,466:INFO:Initializing create_model()
2023-05-13 19:28:05,466:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001BB867A4550>, estimator=lr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001BB85ABD160>, model_only=True, return_train_score=False, kwargs={})
2023-05-13 19:28:05,466:INFO:Checking exceptions
2023-05-13 19:28:05,466:INFO:Importing libraries
2023-05-13 19:28:05,466:INFO:Copying training dataset
2023-05-13 19:28:05,498:INFO:Defining folds
2023-05-13 19:28:05,498:INFO:Declaring metric variables
2023-05-13 19:28:05,506:INFO:Importing untrained model
2023-05-13 19:28:05,513:INFO:Logistic Regression Imported successfully
2023-05-13 19:28:05,527:INFO:Starting cross validation
2023-05-13 19:28:05,531:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-05-13 19:28:11,879:INFO:Calculating mean and std
2023-05-13 19:28:11,880:INFO:Creating metrics dataframe
2023-05-13 19:28:12,424:INFO:Uploading results into container
2023-05-13 19:28:12,426:INFO:Uploading model into container now
2023-05-13 19:28:12,426:INFO:_master_model_container: 7
2023-05-13 19:28:12,426:INFO:_display_container: 3
2023-05-13 19:28:12,426:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2023-05-13 19:28:12,426:INFO:create_model() successfully completed......................................
2023-05-13 19:28:12,518:INFO:SubProcess create_model() end ==================================
2023-05-13 19:28:12,518:INFO:Creating metrics dataframe
2023-05-13 19:28:12,533:INFO:Initializing K Neighbors Classifier
2023-05-13 19:28:12,533:INFO:Total runtime is 0.11797976096471151 minutes
2023-05-13 19:28:12,539:INFO:SubProcess create_model() called ==================================
2023-05-13 19:28:12,539:INFO:Initializing create_model()
2023-05-13 19:28:12,539:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001BB867A4550>, estimator=knn, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001BB85ABD160>, model_only=True, return_train_score=False, kwargs={})
2023-05-13 19:28:12,539:INFO:Checking exceptions
2023-05-13 19:28:12,540:INFO:Importing libraries
2023-05-13 19:28:12,540:INFO:Copying training dataset
2023-05-13 19:28:12,565:INFO:Defining folds
2023-05-13 19:28:12,566:INFO:Declaring metric variables
2023-05-13 19:28:12,571:INFO:Importing untrained model
2023-05-13 19:28:12,578:INFO:K Neighbors Classifier Imported successfully
2023-05-13 19:28:12,587:INFO:Starting cross validation
2023-05-13 19:28:12,592:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-05-13 19:28:16,659:WARNING:c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-13 19:28:21,003:INFO:Calculating mean and std
2023-05-13 19:28:21,004:INFO:Creating metrics dataframe
2023-05-13 19:28:21,512:INFO:Uploading results into container
2023-05-13 19:28:21,513:INFO:Uploading model into container now
2023-05-13 19:28:21,514:INFO:_master_model_container: 8
2023-05-13 19:28:21,514:INFO:_display_container: 3
2023-05-13 19:28:21,514:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2023-05-13 19:28:21,515:INFO:create_model() successfully completed......................................
2023-05-13 19:28:21,606:INFO:SubProcess create_model() end ==================================
2023-05-13 19:28:21,606:INFO:Creating metrics dataframe
2023-05-13 19:28:21,619:INFO:Initializing Naive Bayes
2023-05-13 19:28:21,619:INFO:Total runtime is 0.26941349903742473 minutes
2023-05-13 19:28:21,625:INFO:SubProcess create_model() called ==================================
2023-05-13 19:28:21,626:INFO:Initializing create_model()
2023-05-13 19:28:21,626:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001BB867A4550>, estimator=nb, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001BB85ABD160>, model_only=True, return_train_score=False, kwargs={})
2023-05-13 19:28:21,626:INFO:Checking exceptions
2023-05-13 19:28:21,626:INFO:Importing libraries
2023-05-13 19:28:21,626:INFO:Copying training dataset
2023-05-13 19:28:21,649:INFO:Defining folds
2023-05-13 19:28:21,649:INFO:Declaring metric variables
2023-05-13 19:28:21,654:INFO:Importing untrained model
2023-05-13 19:28:21,660:INFO:Naive Bayes Imported successfully
2023-05-13 19:28:21,670:INFO:Starting cross validation
2023-05-13 19:28:21,674:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-05-13 19:28:27,965:INFO:Calculating mean and std
2023-05-13 19:28:27,966:INFO:Creating metrics dataframe
2023-05-13 19:28:28,493:INFO:Uploading results into container
2023-05-13 19:28:28,494:INFO:Uploading model into container now
2023-05-13 19:28:28,494:INFO:_master_model_container: 9
2023-05-13 19:28:28,494:INFO:_display_container: 3
2023-05-13 19:28:28,494:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2023-05-13 19:28:28,494:INFO:create_model() successfully completed......................................
2023-05-13 19:28:28,584:INFO:SubProcess create_model() end ==================================
2023-05-13 19:28:28,584:INFO:Creating metrics dataframe
2023-05-13 19:28:28,600:INFO:Initializing Decision Tree Classifier
2023-05-13 19:28:28,601:INFO:Total runtime is 0.38577882846196493 minutes
2023-05-13 19:28:28,607:INFO:SubProcess create_model() called ==================================
2023-05-13 19:28:28,608:INFO:Initializing create_model()
2023-05-13 19:28:28,608:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001BB867A4550>, estimator=dt, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001BB85ABD160>, model_only=True, return_train_score=False, kwargs={})
2023-05-13 19:28:28,608:INFO:Checking exceptions
2023-05-13 19:28:28,608:INFO:Importing libraries
2023-05-13 19:28:28,608:INFO:Copying training dataset
2023-05-13 19:28:28,632:INFO:Defining folds
2023-05-13 19:28:28,632:INFO:Declaring metric variables
2023-05-13 19:28:28,637:INFO:Importing untrained model
2023-05-13 19:28:28,644:INFO:Decision Tree Classifier Imported successfully
2023-05-13 19:28:28,656:INFO:Starting cross validation
2023-05-13 19:28:28,661:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-05-13 19:28:34,221:INFO:Calculating mean and std
2023-05-13 19:28:34,222:INFO:Creating metrics dataframe
2023-05-13 19:28:34,767:INFO:Uploading results into container
2023-05-13 19:28:34,768:INFO:Uploading model into container now
2023-05-13 19:28:34,770:INFO:_master_model_container: 10
2023-05-13 19:28:34,771:INFO:_display_container: 3
2023-05-13 19:28:34,771:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=123, splitter='best')
2023-05-13 19:28:34,772:INFO:create_model() successfully completed......................................
2023-05-13 19:28:34,862:INFO:SubProcess create_model() end ==================================
2023-05-13 19:28:34,862:INFO:Creating metrics dataframe
2023-05-13 19:28:34,876:INFO:Initializing SVM - Linear Kernel
2023-05-13 19:28:34,876:INFO:Total runtime is 0.4903594930966695 minutes
2023-05-13 19:28:34,880:INFO:SubProcess create_model() called ==================================
2023-05-13 19:28:34,881:INFO:Initializing create_model()
2023-05-13 19:28:34,881:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001BB867A4550>, estimator=svm, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001BB85ABD160>, model_only=True, return_train_score=False, kwargs={})
2023-05-13 19:28:34,881:INFO:Checking exceptions
2023-05-13 19:28:34,881:INFO:Importing libraries
2023-05-13 19:28:34,882:INFO:Copying training dataset
2023-05-13 19:28:34,904:INFO:Defining folds
2023-05-13 19:28:34,905:INFO:Declaring metric variables
2023-05-13 19:28:34,911:INFO:Importing untrained model
2023-05-13 19:28:34,917:INFO:SVM - Linear Kernel Imported successfully
2023-05-13 19:28:34,928:INFO:Starting cross validation
2023-05-13 19:28:34,932:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-05-13 19:28:36,063:WARNING:c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-05-13 19:28:36,079:WARNING:c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-05-13 19:28:36,092:WARNING:c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-05-13 19:28:36,101:WARNING:c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-05-13 19:28:36,113:WARNING:c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-05-13 19:28:36,139:WARNING:c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-05-13 19:28:36,145:WARNING:c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-05-13 19:28:36,147:WARNING:c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-05-13 19:28:36,163:WARNING:c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-13 19:28:36,187:WARNING:c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-13 19:28:36,198:WARNING:c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-13 19:28:36,233:WARNING:c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-13 19:28:36,246:WARNING:c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-13 19:28:37,712:WARNING:c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-05-13 19:28:37,712:WARNING:c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-05-13 19:28:37,775:WARNING:c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-13 19:28:40,398:INFO:Calculating mean and std
2023-05-13 19:28:40,400:INFO:Creating metrics dataframe
2023-05-13 19:28:40,917:INFO:Uploading results into container
2023-05-13 19:28:40,918:INFO:Uploading model into container now
2023-05-13 19:28:40,919:INFO:_master_model_container: 11
2023-05-13 19:28:40,919:INFO:_display_container: 3
2023-05-13 19:28:40,919:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=123, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2023-05-13 19:28:40,919:INFO:create_model() successfully completed......................................
2023-05-13 19:28:41,015:INFO:SubProcess create_model() end ==================================
2023-05-13 19:28:41,016:INFO:Creating metrics dataframe
2023-05-13 19:28:41,033:INFO:Initializing Ridge Classifier
2023-05-13 19:28:41,033:INFO:Total runtime is 0.5929751833279927 minutes
2023-05-13 19:28:41,039:INFO:SubProcess create_model() called ==================================
2023-05-13 19:28:41,039:INFO:Initializing create_model()
2023-05-13 19:28:41,039:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001BB867A4550>, estimator=ridge, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001BB85ABD160>, model_only=True, return_train_score=False, kwargs={})
2023-05-13 19:28:41,039:INFO:Checking exceptions
2023-05-13 19:28:41,040:INFO:Importing libraries
2023-05-13 19:28:41,040:INFO:Copying training dataset
2023-05-13 19:28:41,061:INFO:Defining folds
2023-05-13 19:28:41,061:INFO:Declaring metric variables
2023-05-13 19:28:41,067:INFO:Importing untrained model
2023-05-13 19:28:41,074:INFO:Ridge Classifier Imported successfully
2023-05-13 19:28:41,085:INFO:Starting cross validation
2023-05-13 19:28:41,088:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-05-13 19:28:42,857:WARNING:c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-05-13 19:28:42,873:WARNING:c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-05-13 19:28:42,907:WARNING:c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-05-13 19:28:42,913:WARNING:c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-05-13 19:28:42,916:WARNING:c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-05-13 19:28:42,946:WARNING:c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-05-13 19:28:42,956:WARNING:c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-05-13 19:28:42,957:WARNING:c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-13 19:28:42,989:WARNING:c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-05-13 19:28:43,005:WARNING:c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-13 19:28:43,013:WARNING:c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-13 19:28:43,015:WARNING:c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-13 19:28:44,892:WARNING:c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-05-13 19:28:44,958:WARNING:c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-05-13 19:28:47,313:INFO:Calculating mean and std
2023-05-13 19:28:47,314:INFO:Creating metrics dataframe
2023-05-13 19:28:47,833:INFO:Uploading results into container
2023-05-13 19:28:47,834:INFO:Uploading model into container now
2023-05-13 19:28:47,834:INFO:_master_model_container: 12
2023-05-13 19:28:47,835:INFO:_display_container: 3
2023-05-13 19:28:47,836:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=123, solver='auto',
                tol=0.0001)
2023-05-13 19:28:47,836:INFO:create_model() successfully completed......................................
2023-05-13 19:28:47,928:INFO:SubProcess create_model() end ==================================
2023-05-13 19:28:47,929:INFO:Creating metrics dataframe
2023-05-13 19:28:47,944:INFO:Initializing Random Forest Classifier
2023-05-13 19:28:47,944:INFO:Total runtime is 0.708161473274231 minutes
2023-05-13 19:28:47,950:INFO:SubProcess create_model() called ==================================
2023-05-13 19:28:47,951:INFO:Initializing create_model()
2023-05-13 19:28:47,951:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001BB867A4550>, estimator=rf, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001BB85ABD160>, model_only=True, return_train_score=False, kwargs={})
2023-05-13 19:28:47,951:INFO:Checking exceptions
2023-05-13 19:28:47,951:INFO:Importing libraries
2023-05-13 19:28:47,951:INFO:Copying training dataset
2023-05-13 19:28:47,974:INFO:Defining folds
2023-05-13 19:28:47,974:INFO:Declaring metric variables
2023-05-13 19:28:47,981:INFO:Importing untrained model
2023-05-13 19:28:47,987:INFO:Random Forest Classifier Imported successfully
2023-05-13 19:28:47,999:INFO:Starting cross validation
2023-05-13 19:28:48,003:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-05-13 19:28:54,410:INFO:Calculating mean and std
2023-05-13 19:28:54,412:INFO:Creating metrics dataframe
2023-05-13 19:28:54,934:INFO:Uploading results into container
2023-05-13 19:28:54,936:INFO:Uploading model into container now
2023-05-13 19:28:54,937:INFO:_master_model_container: 13
2023-05-13 19:28:54,937:INFO:_display_container: 3
2023-05-13 19:28:54,938:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=123, verbose=0, warm_start=False)
2023-05-13 19:28:54,938:INFO:create_model() successfully completed......................................
2023-05-13 19:28:55,027:INFO:SubProcess create_model() end ==================================
2023-05-13 19:28:55,028:INFO:Creating metrics dataframe
2023-05-13 19:28:55,045:INFO:Initializing Quadratic Discriminant Analysis
2023-05-13 19:28:55,045:INFO:Total runtime is 0.8265214959780375 minutes
2023-05-13 19:28:55,054:INFO:SubProcess create_model() called ==================================
2023-05-13 19:28:55,055:INFO:Initializing create_model()
2023-05-13 19:28:55,055:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001BB867A4550>, estimator=qda, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001BB85ABD160>, model_only=True, return_train_score=False, kwargs={})
2023-05-13 19:28:55,055:INFO:Checking exceptions
2023-05-13 19:28:55,055:INFO:Importing libraries
2023-05-13 19:28:55,055:INFO:Copying training dataset
2023-05-13 19:28:55,080:INFO:Defining folds
2023-05-13 19:28:55,080:INFO:Declaring metric variables
2023-05-13 19:28:55,086:INFO:Importing untrained model
2023-05-13 19:28:55,092:INFO:Quadratic Discriminant Analysis Imported successfully
2023-05-13 19:28:55,104:INFO:Starting cross validation
2023-05-13 19:28:55,108:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-05-13 19:28:56,705:WARNING:c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-05-13 19:28:56,711:WARNING:c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-05-13 19:28:56,720:WARNING:c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-05-13 19:28:56,777:WARNING:c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-05-13 19:28:56,842:WARNING:c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-05-13 19:28:56,860:WARNING:c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-05-13 19:28:56,884:WARNING:c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-05-13 19:28:56,890:WARNING:c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-05-13 19:28:59,423:WARNING:c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-05-13 19:28:59,495:WARNING:c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-05-13 19:29:02,311:INFO:Calculating mean and std
2023-05-13 19:29:02,313:INFO:Creating metrics dataframe
2023-05-13 19:29:02,848:INFO:Uploading results into container
2023-05-13 19:29:02,849:INFO:Uploading model into container now
2023-05-13 19:29:02,849:INFO:_master_model_container: 14
2023-05-13 19:29:02,849:INFO:_display_container: 3
2023-05-13 19:29:02,850:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2023-05-13 19:29:02,850:INFO:create_model() successfully completed......................................
2023-05-13 19:29:02,940:INFO:SubProcess create_model() end ==================================
2023-05-13 19:29:02,941:INFO:Creating metrics dataframe
2023-05-13 19:29:02,956:INFO:Initializing Ada Boost Classifier
2023-05-13 19:29:02,956:INFO:Total runtime is 0.9583724061648051 minutes
2023-05-13 19:29:02,961:INFO:SubProcess create_model() called ==================================
2023-05-13 19:29:02,961:INFO:Initializing create_model()
2023-05-13 19:29:02,961:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001BB867A4550>, estimator=ada, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001BB85ABD160>, model_only=True, return_train_score=False, kwargs={})
2023-05-13 19:29:02,961:INFO:Checking exceptions
2023-05-13 19:29:02,962:INFO:Importing libraries
2023-05-13 19:29:02,962:INFO:Copying training dataset
2023-05-13 19:29:02,984:INFO:Defining folds
2023-05-13 19:29:02,985:INFO:Declaring metric variables
2023-05-13 19:29:02,990:INFO:Importing untrained model
2023-05-13 19:29:02,997:INFO:Ada Boost Classifier Imported successfully
2023-05-13 19:29:03,007:INFO:Starting cross validation
2023-05-13 19:29:03,013:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-05-13 19:29:09,233:INFO:Calculating mean and std
2023-05-13 19:29:09,234:INFO:Creating metrics dataframe
2023-05-13 19:29:09,752:INFO:Uploading results into container
2023-05-13 19:29:09,753:INFO:Uploading model into container now
2023-05-13 19:29:09,753:INFO:_master_model_container: 15
2023-05-13 19:29:09,753:INFO:_display_container: 3
2023-05-13 19:29:09,753:INFO:AdaBoostClassifier(algorithm='SAMME.R', base_estimator='deprecated',
                   estimator=None, learning_rate=1.0, n_estimators=50,
                   random_state=123)
2023-05-13 19:29:09,753:INFO:create_model() successfully completed......................................
2023-05-13 19:29:09,841:INFO:SubProcess create_model() end ==================================
2023-05-13 19:29:09,841:INFO:Creating metrics dataframe
2023-05-13 19:29:09,860:INFO:Initializing Gradient Boosting Classifier
2023-05-13 19:29:09,860:INFO:Total runtime is 1.0734372735023499 minutes
2023-05-13 19:29:09,866:INFO:SubProcess create_model() called ==================================
2023-05-13 19:29:09,866:INFO:Initializing create_model()
2023-05-13 19:29:09,866:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001BB867A4550>, estimator=gbc, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001BB85ABD160>, model_only=True, return_train_score=False, kwargs={})
2023-05-13 19:29:09,866:INFO:Checking exceptions
2023-05-13 19:29:09,866:INFO:Importing libraries
2023-05-13 19:29:09,866:INFO:Copying training dataset
2023-05-13 19:29:09,890:INFO:Defining folds
2023-05-13 19:29:09,891:INFO:Declaring metric variables
2023-05-13 19:29:09,898:INFO:Importing untrained model
2023-05-13 19:29:09,903:INFO:Gradient Boosting Classifier Imported successfully
2023-05-13 19:29:09,914:INFO:Starting cross validation
2023-05-13 19:29:09,919:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-05-13 19:29:39,049:INFO:Calculating mean and std
2023-05-13 19:29:39,051:INFO:Creating metrics dataframe
2023-05-13 19:29:39,583:INFO:Uploading results into container
2023-05-13 19:29:39,585:INFO:Uploading model into container now
2023-05-13 19:29:39,585:INFO:_master_model_container: 16
2023-05-13 19:29:39,586:INFO:_display_container: 3
2023-05-13 19:29:39,586:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=123, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2023-05-13 19:29:39,587:INFO:create_model() successfully completed......................................
2023-05-13 19:29:39,676:INFO:SubProcess create_model() end ==================================
2023-05-13 19:29:39,676:INFO:Creating metrics dataframe
2023-05-13 19:29:39,695:INFO:Initializing Linear Discriminant Analysis
2023-05-13 19:29:39,695:INFO:Total runtime is 1.570687739054362 minutes
2023-05-13 19:29:39,701:INFO:SubProcess create_model() called ==================================
2023-05-13 19:29:39,702:INFO:Initializing create_model()
2023-05-13 19:29:39,703:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001BB867A4550>, estimator=lda, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001BB85ABD160>, model_only=True, return_train_score=False, kwargs={})
2023-05-13 19:29:39,703:INFO:Checking exceptions
2023-05-13 19:29:39,703:INFO:Importing libraries
2023-05-13 19:29:39,703:INFO:Copying training dataset
2023-05-13 19:29:39,728:INFO:Defining folds
2023-05-13 19:29:39,728:INFO:Declaring metric variables
2023-05-13 19:29:39,734:INFO:Importing untrained model
2023-05-13 19:29:39,740:INFO:Linear Discriminant Analysis Imported successfully
2023-05-13 19:29:39,750:INFO:Starting cross validation
2023-05-13 19:29:39,755:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-05-13 19:29:47,227:INFO:Calculating mean and std
2023-05-13 19:29:47,229:INFO:Creating metrics dataframe
2023-05-13 19:29:47,759:INFO:Uploading results into container
2023-05-13 19:29:47,760:INFO:Uploading model into container now
2023-05-13 19:29:47,761:INFO:_master_model_container: 17
2023-05-13 19:29:47,762:INFO:_display_container: 3
2023-05-13 19:29:47,762:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2023-05-13 19:29:47,763:INFO:create_model() successfully completed......................................
2023-05-13 19:29:47,852:INFO:SubProcess create_model() end ==================================
2023-05-13 19:29:47,852:INFO:Creating metrics dataframe
2023-05-13 19:29:47,869:INFO:Initializing Extra Trees Classifier
2023-05-13 19:29:47,869:INFO:Total runtime is 1.706923524538676 minutes
2023-05-13 19:29:47,874:INFO:SubProcess create_model() called ==================================
2023-05-13 19:29:47,876:INFO:Initializing create_model()
2023-05-13 19:29:47,876:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001BB867A4550>, estimator=et, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001BB85ABD160>, model_only=True, return_train_score=False, kwargs={})
2023-05-13 19:29:47,876:INFO:Checking exceptions
2023-05-13 19:29:47,876:INFO:Importing libraries
2023-05-13 19:29:47,876:INFO:Copying training dataset
2023-05-13 19:29:47,898:INFO:Defining folds
2023-05-13 19:29:47,898:INFO:Declaring metric variables
2023-05-13 19:29:47,904:INFO:Importing untrained model
2023-05-13 19:29:47,910:INFO:Extra Trees Classifier Imported successfully
2023-05-13 19:29:47,920:INFO:Starting cross validation
2023-05-13 19:29:47,925:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-05-13 19:29:55,709:WARNING:c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 1.25s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  fitted_estimator = self._memory_fit(

2023-05-13 19:29:56,313:WARNING:c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 0.72s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  fitted_estimator = self._memory_fit(

2023-05-13 19:29:56,349:WARNING:c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 0.79s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  fitted_estimator = self._memory_fit(

2023-05-13 19:29:56,503:WARNING:c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 0.51s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  fitted_estimator = self._memory_fit(

2023-05-13 19:29:57,598:WARNING:c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 0.52s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-05-13 19:29:57,615:WARNING:c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 0.51s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-05-13 19:29:58,001:WARNING:c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 0.57s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-05-13 19:29:58,099:WARNING:c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 0.62s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-05-13 19:30:04,304:INFO:Calculating mean and std
2023-05-13 19:30:04,305:INFO:Creating metrics dataframe
2023-05-13 19:30:04,878:INFO:Uploading results into container
2023-05-13 19:30:04,880:INFO:Uploading model into container now
2023-05-13 19:30:04,880:INFO:_master_model_container: 18
2023-05-13 19:30:04,880:INFO:_display_container: 3
2023-05-13 19:30:04,881:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     n_estimators=100, n_jobs=-1, oob_score=False,
                     random_state=123, verbose=0, warm_start=False)
2023-05-13 19:30:04,882:INFO:create_model() successfully completed......................................
2023-05-13 19:30:04,974:INFO:SubProcess create_model() end ==================================
2023-05-13 19:30:04,975:INFO:Creating metrics dataframe
2023-05-13 19:30:04,991:INFO:Initializing Light Gradient Boosting Machine
2023-05-13 19:30:04,991:INFO:Total runtime is 1.9922868569691976 minutes
2023-05-13 19:30:04,996:INFO:SubProcess create_model() called ==================================
2023-05-13 19:30:04,997:INFO:Initializing create_model()
2023-05-13 19:30:04,997:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001BB867A4550>, estimator=lightgbm, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001BB85ABD160>, model_only=True, return_train_score=False, kwargs={})
2023-05-13 19:30:04,997:INFO:Checking exceptions
2023-05-13 19:30:04,997:INFO:Importing libraries
2023-05-13 19:30:04,998:INFO:Copying training dataset
2023-05-13 19:30:05,020:INFO:Defining folds
2023-05-13 19:30:05,020:INFO:Declaring metric variables
2023-05-13 19:30:05,025:INFO:Importing untrained model
2023-05-13 19:30:05,031:INFO:Light Gradient Boosting Machine Imported successfully
2023-05-13 19:30:05,044:INFO:Starting cross validation
2023-05-13 19:30:05,049:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-05-13 19:30:13,286:INFO:Calculating mean and std
2023-05-13 19:30:13,288:INFO:Creating metrics dataframe
2023-05-13 19:30:13,888:INFO:Uploading results into container
2023-05-13 19:30:13,889:INFO:Uploading model into container now
2023-05-13 19:30:13,889:INFO:_master_model_container: 19
2023-05-13 19:30:13,889:INFO:_display_container: 3
2023-05-13 19:30:13,890:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=123, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0)
2023-05-13 19:30:13,891:INFO:create_model() successfully completed......................................
2023-05-13 19:30:13,982:INFO:SubProcess create_model() end ==================================
2023-05-13 19:30:13,982:INFO:Creating metrics dataframe
2023-05-13 19:30:14,002:INFO:Initializing Dummy Classifier
2023-05-13 19:30:14,002:INFO:Total runtime is 2.142461578051249 minutes
2023-05-13 19:30:14,006:INFO:SubProcess create_model() called ==================================
2023-05-13 19:30:14,007:INFO:Initializing create_model()
2023-05-13 19:30:14,007:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001BB867A4550>, estimator=dummy, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001BB85ABD160>, model_only=True, return_train_score=False, kwargs={})
2023-05-13 19:30:14,007:INFO:Checking exceptions
2023-05-13 19:30:14,007:INFO:Importing libraries
2023-05-13 19:30:14,007:INFO:Copying training dataset
2023-05-13 19:30:14,031:INFO:Defining folds
2023-05-13 19:30:14,032:INFO:Declaring metric variables
2023-05-13 19:30:14,036:INFO:Importing untrained model
2023-05-13 19:30:14,043:INFO:Dummy Classifier Imported successfully
2023-05-13 19:30:14,052:INFO:Starting cross validation
2023-05-13 19:30:14,056:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-05-13 19:30:15,937:WARNING:c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-13 19:30:15,940:WARNING:c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-13 19:30:15,949:WARNING:c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-13 19:30:15,954:WARNING:c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-13 19:30:15,976:WARNING:c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-13 19:30:15,994:WARNING:c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-13 19:30:16,030:WARNING:c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-13 19:30:16,046:WARNING:c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-13 19:30:18,084:WARNING:c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-13 19:30:18,124:WARNING:c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-13 19:30:20,920:INFO:Calculating mean and std
2023-05-13 19:30:20,922:INFO:Creating metrics dataframe
2023-05-13 19:30:21,530:INFO:Uploading results into container
2023-05-13 19:30:21,531:INFO:Uploading model into container now
2023-05-13 19:30:21,531:INFO:_master_model_container: 20
2023-05-13 19:30:21,531:INFO:_display_container: 3
2023-05-13 19:30:21,531:INFO:DummyClassifier(constant=None, random_state=123, strategy='prior')
2023-05-13 19:30:21,531:INFO:create_model() successfully completed......................................
2023-05-13 19:30:21,624:INFO:SubProcess create_model() end ==================================
2023-05-13 19:30:21,624:INFO:Creating metrics dataframe
2023-05-13 19:30:21,659:INFO:Initializing create_model()
2023-05-13 19:30:21,660:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001BB867A4550>, estimator=LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=123, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-05-13 19:30:21,660:INFO:Checking exceptions
2023-05-13 19:30:21,661:INFO:Importing libraries
2023-05-13 19:30:21,662:INFO:Copying training dataset
2023-05-13 19:30:21,686:INFO:Defining folds
2023-05-13 19:30:21,686:INFO:Declaring metric variables
2023-05-13 19:30:21,686:INFO:Importing untrained model
2023-05-13 19:30:21,686:INFO:Declaring custom model
2023-05-13 19:30:21,687:INFO:Light Gradient Boosting Machine Imported successfully
2023-05-13 19:30:21,690:INFO:Cross validation set to False
2023-05-13 19:30:21,690:INFO:Fitting Model
2023-05-13 19:30:23,287:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=123, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0)
2023-05-13 19:30:23,287:INFO:create_model() successfully completed......................................
2023-05-13 19:30:23,424:INFO:_master_model_container: 20
2023-05-13 19:30:23,424:INFO:_display_container: 3
2023-05-13 19:30:23,424:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=123, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0)
2023-05-13 19:30:23,424:INFO:compare_models() successfully completed......................................
2023-05-13 19:31:35,260:INFO:Initializing evaluate_model()
2023-05-13 19:31:35,260:INFO:evaluate_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001BB867A4550>, estimator=LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=123, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0), fold=None, fit_kwargs=None, plot_kwargs=None, feature_name=None, groups=None, use_train_data=False)
2023-05-13 19:31:35,292:INFO:Initializing plot_model()
2023-05-13 19:31:35,293:INFO:plot_model(plot=pipeline, fold=KFold(n_splits=10, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=123, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001BB867A4550>, system=True)
2023-05-13 19:31:35,293:INFO:Checking exceptions
2023-05-13 19:31:35,306:INFO:Preloading libraries
2023-05-13 19:31:35,318:INFO:Copying training dataset
2023-05-13 19:31:35,318:INFO:Plot type: pipeline
2023-05-13 19:31:38,561:INFO:Initializing plot_model()
2023-05-13 19:31:38,562:INFO:plot_model(plot=auc, fold=KFold(n_splits=10, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=123, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001BB867A4550>, system=True)
2023-05-13 19:31:38,562:INFO:Checking exceptions
2023-05-13 19:31:38,573:INFO:Preloading libraries
2023-05-13 19:31:38,582:INFO:Copying training dataset
2023-05-13 19:31:38,582:INFO:Plot type: auc
2023-05-13 19:31:38,886:INFO:Fitting Model
2023-05-13 19:31:38,887:INFO:Scoring test/hold-out set
2023-05-13 19:31:39,399:INFO:Visual Rendered Successfully
2023-05-13 19:31:39,964:INFO:plot_model() successfully completed......................................
2023-05-13 19:31:43,638:INFO:Initializing plot_model()
2023-05-13 19:31:43,638:INFO:plot_model(plot=feature, fold=KFold(n_splits=10, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=123, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001BB867A4550>, system=True)
2023-05-13 19:31:43,639:INFO:Checking exceptions
2023-05-13 19:31:43,649:INFO:Preloading libraries
2023-05-13 19:31:43,662:INFO:Copying training dataset
2023-05-13 19:31:43,662:INFO:Plot type: feature
2023-05-13 19:31:43,663:WARNING:No coef_ found. Trying feature_importances_
2023-05-13 19:31:44,044:INFO:Visual Rendered Successfully
2023-05-13 19:31:44,132:INFO:plot_model() successfully completed......................................
2023-05-13 19:31:58,775:INFO:Initializing plot_model()
2023-05-13 19:31:58,775:INFO:plot_model(plot=rfe, fold=KFold(n_splits=10, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=123, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001BB867A4550>, system=True)
2023-05-13 19:31:58,776:INFO:Checking exceptions
2023-05-13 19:31:58,784:INFO:Preloading libraries
2023-05-13 19:31:58,796:INFO:Copying training dataset
2023-05-13 19:31:58,796:INFO:Plot type: rfe
2023-05-13 19:31:59,093:INFO:Fitting Model
2023-05-13 19:34:02,487:INFO:Initializing plot_model()
2023-05-13 19:34:02,487:INFO:plot_model(plot=confusion_matrix, fold=KFold(n_splits=10, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=123, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001BB867A4550>, system=True)
2023-05-13 19:34:02,487:INFO:Checking exceptions
2023-05-13 19:34:02,502:INFO:Preloading libraries
2023-05-13 19:34:02,514:INFO:Copying training dataset
2023-05-13 19:34:02,514:INFO:Plot type: confusion_matrix
2023-05-13 19:34:02,863:INFO:Fitting Model
2023-05-13 19:34:02,863:INFO:Scoring test/hold-out set
2023-05-13 19:34:03,167:INFO:Visual Rendered Successfully
2023-05-13 19:34:03,285:INFO:plot_model() successfully completed......................................
2023-05-13 19:36:00,167:INFO:Initializing plot_model()
2023-05-13 19:36:00,167:INFO:plot_model(plot=confusion_matrix, fold=None, use_train_data=False, verbose=True, display=None, display_format=None, estimator=LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=123, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001BB867A4550>, system=True)
2023-05-13 19:36:00,168:INFO:Checking exceptions
2023-05-13 19:36:00,180:INFO:Preloading libraries
2023-05-13 19:36:00,191:INFO:Copying training dataset
2023-05-13 19:36:00,191:INFO:Plot type: confusion_matrix
2023-05-13 19:36:00,587:INFO:Fitting Model
2023-05-13 19:36:00,588:INFO:Scoring test/hold-out set
2023-05-13 19:36:00,905:INFO:Visual Rendered Successfully
2023-05-13 19:36:01,023:INFO:plot_model() successfully completed......................................
2023-05-13 19:36:03,525:INFO:Initializing plot_model()
2023-05-13 19:36:03,526:INFO:plot_model(plot=feature, fold=None, use_train_data=False, verbose=True, display=None, display_format=None, estimator=LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=123, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001BB867A4550>, system=True)
2023-05-13 19:36:03,527:INFO:Checking exceptions
2023-05-13 19:36:03,539:INFO:Preloading libraries
2023-05-13 19:36:03,548:INFO:Copying training dataset
2023-05-13 19:36:03,549:INFO:Plot type: feature
2023-05-13 19:36:03,549:WARNING:No coef_ found. Trying feature_importances_
2023-05-13 19:36:03,998:INFO:Visual Rendered Successfully
2023-05-13 19:36:04,126:INFO:plot_model() successfully completed......................................
2023-05-13 19:36:06,802:INFO:Initializing plot_model()
2023-05-13 19:36:06,803:INFO:plot_model(plot=auc, fold=None, use_train_data=False, verbose=True, display=None, display_format=None, estimator=LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=123, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001BB867A4550>, system=True)
2023-05-13 19:36:06,803:INFO:Checking exceptions
2023-05-13 19:36:06,817:INFO:Preloading libraries
2023-05-13 19:36:06,829:INFO:Copying training dataset
2023-05-13 19:36:06,830:INFO:Plot type: auc
2023-05-13 19:36:07,141:INFO:Fitting Model
2023-05-13 19:36:07,142:INFO:Scoring test/hold-out set
2023-05-13 19:36:07,651:INFO:Visual Rendered Successfully
2023-05-13 19:36:07,779:INFO:plot_model() successfully completed......................................
2023-05-13 19:36:14,915:INFO:Initializing plot_model()
2023-05-13 19:36:14,915:INFO:plot_model(plot=confusion_matrix, fold=None, use_train_data=False, verbose=True, display=None, display_format=None, estimator=LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=123, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001BB867A4550>, system=True)
2023-05-13 19:36:14,916:INFO:Checking exceptions
2023-05-13 19:36:14,930:INFO:Preloading libraries
2023-05-13 19:36:14,941:INFO:Copying training dataset
2023-05-13 19:36:14,941:INFO:Plot type: confusion_matrix
2023-05-13 19:36:15,259:INFO:Fitting Model
2023-05-13 19:36:15,260:INFO:Scoring test/hold-out set
2023-05-13 19:36:15,562:INFO:Visual Rendered Successfully
2023-05-13 19:36:15,688:INFO:plot_model() successfully completed......................................
2023-05-13 19:36:15,689:INFO:Initializing plot_model()
2023-05-13 19:36:15,689:INFO:plot_model(plot=feature, fold=None, use_train_data=False, verbose=True, display=None, display_format=None, estimator=LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=123, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001BB867A4550>, system=True)
2023-05-13 19:36:15,690:INFO:Checking exceptions
2023-05-13 19:36:15,701:INFO:Preloading libraries
2023-05-13 19:36:15,714:INFO:Copying training dataset
2023-05-13 19:36:15,714:INFO:Plot type: feature
2023-05-13 19:36:15,715:WARNING:No coef_ found. Trying feature_importances_
2023-05-13 19:36:16,155:INFO:Visual Rendered Successfully
2023-05-13 19:36:16,271:INFO:plot_model() successfully completed......................................
2023-05-13 19:36:29,726:INFO:Initializing plot_model()
2023-05-13 19:36:29,726:INFO:plot_model(plot=auc, fold=None, use_train_data=False, verbose=True, display=None, display_format=None, estimator=LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=123, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001BB867A4550>, system=True)
2023-05-13 19:36:29,726:INFO:Checking exceptions
2023-05-13 19:36:29,740:INFO:Preloading libraries
2023-05-13 19:36:29,752:INFO:Copying training dataset
2023-05-13 19:36:29,752:INFO:Plot type: auc
2023-05-13 19:36:30,047:INFO:Fitting Model
2023-05-13 19:36:30,048:INFO:Scoring test/hold-out set
2023-05-13 19:36:30,549:INFO:Visual Rendered Successfully
2023-05-13 19:36:30,690:INFO:plot_model() successfully completed......................................
2023-05-13 19:36:30,691:INFO:Initializing plot_model()
2023-05-13 19:36:30,691:INFO:plot_model(plot=confusion_matrix, fold=None, use_train_data=False, verbose=True, display=None, display_format=None, estimator=LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=123, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001BB867A4550>, system=True)
2023-05-13 19:36:30,691:INFO:Checking exceptions
2023-05-13 19:36:30,700:INFO:Preloading libraries
2023-05-13 19:36:30,712:INFO:Copying training dataset
2023-05-13 19:36:30,712:INFO:Plot type: confusion_matrix
2023-05-13 19:36:31,024:INFO:Fitting Model
2023-05-13 19:36:31,025:INFO:Scoring test/hold-out set
2023-05-13 19:36:31,321:INFO:Visual Rendered Successfully
2023-05-13 19:36:31,449:INFO:plot_model() successfully completed......................................
2023-05-13 19:36:31,449:INFO:Initializing plot_model()
2023-05-13 19:36:31,450:INFO:plot_model(plot=feature, fold=None, use_train_data=False, verbose=True, display=None, display_format=None, estimator=LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=123, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001BB867A4550>, system=True)
2023-05-13 19:36:31,450:INFO:Checking exceptions
2023-05-13 19:36:31,462:INFO:Preloading libraries
2023-05-13 19:36:31,475:INFO:Copying training dataset
2023-05-13 19:36:31,475:INFO:Plot type: feature
2023-05-13 19:36:31,476:WARNING:No coef_ found. Trying feature_importances_
2023-05-13 19:36:31,953:INFO:Visual Rendered Successfully
2023-05-13 19:36:32,115:INFO:plot_model() successfully completed......................................
2023-05-13 19:46:37,149:INFO:PyCaret ClassificationExperiment
2023-05-13 19:46:37,150:INFO:Logging name: clf-default-name
2023-05-13 19:46:37,150:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2023-05-13 19:46:37,150:INFO:version 3.0.0
2023-05-13 19:46:37,150:INFO:Initializing setup()
2023-05-13 19:46:37,150:INFO:self.USI: 1955
2023-05-13 19:46:37,150:INFO:self._variable_keys: {'_available_plots', 'data', 'memory', 'exp_name_log', '_ml_usecase', 'fix_imbalance', 'y', 'X', 'gpu_n_jobs_param', 'X_test', 'fold_generator', 'target_param', 'y_train', 'X_train', 'USI', 'is_multiclass', 'y_test', 'exp_id', 'log_plots_param', 'html_param', 'logging_param', 'gpu_param', 'idx', 'fold_groups_param', 'fold_shuffle_param', 'pipeline', 'n_jobs_param', 'seed'}
2023-05-13 19:46:37,150:INFO:Checking environment
2023-05-13 19:46:37,150:INFO:python_version: 3.8.16
2023-05-13 19:46:37,150:INFO:python_build: ('default', 'Mar  2 2023 03:18:16')
2023-05-13 19:46:37,150:INFO:machine: AMD64
2023-05-13 19:46:37,151:INFO:platform: Windows-10-10.0.19045-SP0
2023-05-13 19:46:37,154:INFO:Memory: svmem(total=34292408320, available=20777406464, percent=39.4, used=13515001856, free=20777406464)
2023-05-13 19:46:37,154:INFO:Physical Core: 4
2023-05-13 19:46:37,154:INFO:Logical Core: 8
2023-05-13 19:46:37,154:INFO:Checking libraries
2023-05-13 19:46:37,154:INFO:System:
2023-05-13 19:46:37,154:INFO:    python: 3.8.16 (default, Mar  2 2023, 03:18:16) [MSC v.1916 64 bit (AMD64)]
2023-05-13 19:46:37,154:INFO:executable: c:\Users\camil\anaconda3\envs\pycaretenv\python.exe
2023-05-13 19:46:37,154:INFO:   machine: Windows-10-10.0.19045-SP0
2023-05-13 19:46:37,154:INFO:PyCaret required dependencies:
2023-05-13 19:46:37,154:INFO:                 pip: 23.0.1
2023-05-13 19:46:37,154:INFO:          setuptools: 66.0.0
2023-05-13 19:46:37,155:INFO:             pycaret: 3.0.0
2023-05-13 19:46:37,155:INFO:             IPython: 8.12.2
2023-05-13 19:46:37,155:INFO:          ipywidgets: 8.0.6
2023-05-13 19:46:37,155:INFO:                tqdm: 4.65.0
2023-05-13 19:46:37,155:INFO:               numpy: 1.24.3
2023-05-13 19:46:37,155:INFO:              pandas: 1.5.3
2023-05-13 19:46:37,155:INFO:              jinja2: 3.1.2
2023-05-13 19:46:37,155:INFO:               scipy: 1.10.1
2023-05-13 19:46:37,155:INFO:              joblib: 1.2.0
2023-05-13 19:46:37,155:INFO:             sklearn: 1.2.2
2023-05-13 19:46:37,155:INFO:                pyod: 1.0.9
2023-05-13 19:46:37,155:INFO:            imblearn: 0.10.1
2023-05-13 19:46:37,155:INFO:   category_encoders: 2.6.0
2023-05-13 19:46:37,155:INFO:            lightgbm: 3.3.5
2023-05-13 19:46:37,155:INFO:               numba: 0.57.0
2023-05-13 19:46:37,155:INFO:            requests: 2.30.0
2023-05-13 19:46:37,155:INFO:          matplotlib: 3.7.1
2023-05-13 19:46:37,156:INFO:          scikitplot: 0.3.7
2023-05-13 19:46:37,156:INFO:         yellowbrick: 1.5
2023-05-13 19:46:37,156:INFO:              plotly: 5.14.1
2023-05-13 19:46:37,156:INFO:             kaleido: 0.2.1
2023-05-13 19:46:37,156:INFO:         statsmodels: 0.14.0
2023-05-13 19:46:37,156:INFO:              sktime: 0.18.0
2023-05-13 19:46:37,156:INFO:               tbats: 1.1.3
2023-05-13 19:46:37,156:INFO:            pmdarima: 2.0.3
2023-05-13 19:46:37,156:INFO:              psutil: 5.9.5
2023-05-13 19:46:37,156:INFO:PyCaret optional dependencies:
2023-05-13 19:46:37,156:INFO:                shap: Not installed
2023-05-13 19:46:37,156:INFO:           interpret: Not installed
2023-05-13 19:46:37,156:INFO:                umap: Not installed
2023-05-13 19:46:37,156:INFO:    pandas_profiling: Not installed
2023-05-13 19:46:37,156:INFO:  explainerdashboard: Not installed
2023-05-13 19:46:37,156:INFO:             autoviz: Not installed
2023-05-13 19:46:37,156:INFO:           fairlearn: Not installed
2023-05-13 19:46:37,157:INFO:             xgboost: Not installed
2023-05-13 19:46:37,157:INFO:            catboost: Not installed
2023-05-13 19:46:37,157:INFO:              kmodes: Not installed
2023-05-13 19:46:37,157:INFO:             mlxtend: Not installed
2023-05-13 19:46:37,157:INFO:       statsforecast: Not installed
2023-05-13 19:46:37,157:INFO:        tune_sklearn: Not installed
2023-05-13 19:46:37,157:INFO:                 ray: Not installed
2023-05-13 19:46:37,157:INFO:            hyperopt: Not installed
2023-05-13 19:46:37,157:INFO:              optuna: Not installed
2023-05-13 19:46:37,157:INFO:               skopt: Not installed
2023-05-13 19:46:37,157:INFO:              mlflow: Not installed
2023-05-13 19:46:37,157:INFO:              gradio: Not installed
2023-05-13 19:46:37,157:INFO:             fastapi: Not installed
2023-05-13 19:46:37,157:INFO:             uvicorn: Not installed
2023-05-13 19:46:37,157:INFO:              m2cgen: Not installed
2023-05-13 19:46:37,157:INFO:           evidently: Not installed
2023-05-13 19:46:37,157:INFO:               fugue: Not installed
2023-05-13 19:46:37,157:INFO:           streamlit: Not installed
2023-05-13 19:46:37,158:INFO:             prophet: Not installed
2023-05-13 19:46:37,158:INFO:None
2023-05-13 19:46:37,158:INFO:Set up data.
2023-05-13 19:46:37,377:INFO:Set up train/test split.
2023-05-13 19:46:37,473:INFO:Set up index.
2023-05-13 19:46:37,474:INFO:Set up folding strategy.
2023-05-13 19:46:37,474:INFO:Assigning column types.
2023-05-13 19:46:37,491:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-05-13 19:46:37,556:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-05-13 19:46:37,558:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-05-13 19:46:37,620:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-13 19:46:37,621:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-13 19:46:37,709:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-05-13 19:46:37,711:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-05-13 19:46:37,760:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-13 19:46:37,761:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-13 19:46:37,762:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-05-13 19:46:37,854:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-05-13 19:46:37,902:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-13 19:46:37,903:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-13 19:46:37,976:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-05-13 19:46:38,031:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-13 19:46:38,032:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-13 19:46:38,033:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2023-05-13 19:46:38,169:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-13 19:46:38,169:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-13 19:46:38,281:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-13 19:46:38,281:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-13 19:46:38,283:INFO:Preparing preprocessing pipeline...
2023-05-13 19:46:38,286:INFO:Set up label encoding.
2023-05-13 19:46:38,286:INFO:Set up date feature engineering.
2023-05-13 19:46:38,286:INFO:Set up simple imputation.
2023-05-13 19:46:38,314:INFO:Set up encoding of ordinal features.
2023-05-13 19:46:38,335:INFO:Set up encoding of categorical features.
2023-05-13 19:46:38,335:INFO:Set up removing multicollinearity.
2023-05-13 19:46:38,335:INFO:Set up removing outliers.
2023-05-13 19:46:38,335:INFO:Set up imbalanced handling.
2023-05-13 19:46:38,335:INFO:Set up feature normalization.
2023-05-13 19:46:38,337:INFO:Set up column name cleaning.
2023-05-13 19:46:39,137:INFO:Finished creating preprocessing pipeline.
2023-05-13 19:46:39,203:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\camil\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('date_feature_extractor',
                 TransformerWrapper(exclude=None, include=['Fecha.Expedicion'],
                                    transformer=ExtractDateTimeFeatures(features=['day',
                                                                                  'month',
                                                                                  'year']))),
                ('nu...
                                    transformer=FixImbalancer(estimator=SMOTE(k_neighbors=5,
                                                                              n_jobs=None,
                                                                              random_state=None,
                                                                              sampling_strategy='auto')))),
                ('normalize',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False)
2023-05-13 19:46:39,204:INFO:Creating final display dataframe.
2023-05-13 19:46:39,520:INFO:Setup _display_container:                     Description             Value
0                    Session id               123
1                        Target            Target
2                   Target type            Binary
3                Target mapping        0: 0, 1: 1
4           Original data shape       (50001, 35)
5        Transformed data shape       (79575, 45)
6   Transformed train set shape       (64574, 45)
7    Transformed test set shape       (15001, 45)
8               Ignore features                 7
9              Ordinal features                 4
10             Numeric features                15
11                Date features                 1
12         Categorical features                11
13     Rows with missing values            100.0%
14                   Preprocess              True
15              Imputation type            simple
16           Numeric imputation              mean
17       Categorical imputation              mode
18     Maximum one-hot encoding                25
19              Encoding method              None
20     Remove multicollinearity              True
21  Multicollinearity threshold               0.9
22              Remove outliers              True
23           Outliers threshold              0.05
24                Fix imbalance              True
25         Fix imbalance method             SMOTE
26                    Normalize              True
27             Normalize method            zscore
28               Fold Generator             KFold
29                  Fold Number                10
30                     CPU Jobs                -1
31                      Use GPU             False
32               Log Experiment             False
33              Experiment Name  clf-default-name
34                          USI              1955
2023-05-13 19:46:39,654:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-13 19:46:39,654:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-13 19:46:39,760:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-13 19:46:39,761:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-13 19:46:39,761:INFO:setup() successfully completed in 3.14s...............
2023-05-13 19:47:05,954:INFO:Initializing get_config()
2023-05-13 19:47:05,954:INFO:get_config(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001BB8AEEAE50>, variable=y_train)
2023-05-13 19:47:05,955:INFO:Variable: 'y_train' used to return the transformed values in PyCaret 2.x. From PyCaret 3.x, this will return the raw values. If you need the transformed values, call get_config with 'y_train_transformed' instead.
2023-05-13 19:47:05,955:WARNING:c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\pycaret\internal\pycaret_experiment\pycaret_experiment.py:322: UserWarning: Variable: 'y_train' used to return the transformed values in PyCaret 2.x. From PyCaret 3.x, this will return the raw values. If you need the transformed values, call get_config with 'y_train_transformed' instead.
  warnings.warn(msg)  # print on screen

2023-05-13 19:47:05,968:INFO:Variable:  returned as 1219     0
6555     0
26689    0
30872    0
31178    0
        ..
5345     0
48737    0
23822    0
30564    0
8743     0
Name: Target, Length: 35000, dtype: category
Categories (2, object): ['0', '1']
2023-05-13 19:47:05,968:INFO:get_config() successfully completed......................................
2023-05-13 19:47:24,425:INFO:Initializing compare_models()
2023-05-13 19:47:24,425:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001BB8AEEAE50>, include=None, fold=None, round=4, cross_validation=False, sort=F1, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x000001BB8AEEAE50>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': False, 'sort': 'F1', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2023-05-13 19:47:24,426:INFO:Checking exceptions
2023-05-13 19:47:24,442:INFO:Preparing display monitor
2023-05-13 19:47:24,485:INFO:Initializing Logistic Regression
2023-05-13 19:47:24,486:INFO:Total runtime is 1.6860167185465495e-05 minutes
2023-05-13 19:47:24,491:INFO:SubProcess create_model() called ==================================
2023-05-13 19:47:24,492:INFO:Initializing create_model()
2023-05-13 19:47:24,492:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001BB8AEEAE50>, estimator=lr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001BB8C6EB040>, model_only=True, return_train_score=False, kwargs={})
2023-05-13 19:47:24,492:INFO:Checking exceptions
2023-05-13 19:47:24,493:INFO:Importing libraries
2023-05-13 19:47:24,493:INFO:Copying training dataset
2023-05-13 19:47:24,525:INFO:Defining folds
2023-05-13 19:47:24,525:INFO:Declaring metric variables
2023-05-13 19:47:24,532:INFO:Importing untrained model
2023-05-13 19:47:24,538:INFO:Logistic Regression Imported successfully
2023-05-13 19:47:24,546:INFO:Cross validation set to False
2023-05-13 19:47:24,547:INFO:Fitting Model
2023-05-13 19:47:26,655:INFO:Initializing predict_model()
2023-05-13 19:47:26,655:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001BB8AEEAE50>, estimator=Pipeline(memory=FastMemory(location=C:\Users\camil\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('date_feature_extractor',
                 TransformerWrapper(exclude=None, include=['Fecha.Expedicion'],
                                    transformer=ExtractDateTimeFeatures(features=['day',
                                                                                  'month',
                                                                                  'year']))),
                ('nu...
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+'))),
                ('actual_estimator',
                 LogisticRegression(C=1.0, class_weight=None, dual=False,
                                    fit_intercept=True, intercept_scaling=1,
                                    l1_ratio=None, max_iter=1000,
                                    multi_class='auto', n_jobs=None,
                                    penalty='l2', random_state=123,
                                    solver='lbfgs', tol=0.0001, verbose=0,
                                    warm_start=False))],
         verbose=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x000001BB8BE6FCA0>)
2023-05-13 19:47:26,655:INFO:Checking exceptions
2023-05-13 19:47:26,657:INFO:Preloading libraries
2023-05-13 19:47:26,993:INFO:_display_container: 2
2023-05-13 19:47:27,448:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2023-05-13 19:47:27,448:INFO:create_model() successfully completed......................................
2023-05-13 19:47:27,603:INFO:SubProcess create_model() end ==================================
2023-05-13 19:47:27,603:INFO:Creating metrics dataframe
2023-05-13 19:47:27,620:INFO:Initializing K Neighbors Classifier
2023-05-13 19:47:27,620:INFO:Total runtime is 0.052260486284891765 minutes
2023-05-13 19:47:27,626:INFO:SubProcess create_model() called ==================================
2023-05-13 19:47:27,627:INFO:Initializing create_model()
2023-05-13 19:47:27,627:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001BB8AEEAE50>, estimator=knn, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001BB8C6EB040>, model_only=True, return_train_score=False, kwargs={})
2023-05-13 19:47:27,627:INFO:Checking exceptions
2023-05-13 19:47:27,627:INFO:Importing libraries
2023-05-13 19:47:27,627:INFO:Copying training dataset
2023-05-13 19:47:27,657:INFO:Defining folds
2023-05-13 19:47:27,657:INFO:Declaring metric variables
2023-05-13 19:47:27,663:INFO:Importing untrained model
2023-05-13 19:47:27,671:INFO:K Neighbors Classifier Imported successfully
2023-05-13 19:47:27,680:INFO:Cross validation set to False
2023-05-13 19:47:27,680:INFO:Fitting Model
2023-05-13 19:47:28,572:INFO:Initializing predict_model()
2023-05-13 19:47:28,573:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001BB8AEEAE50>, estimator=Pipeline(memory=FastMemory(location=C:\Users\camil\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('date_feature_extractor',
                 TransformerWrapper(exclude=None, include=['Fecha.Expedicion'],
                                    transformer=ExtractDateTimeFeatures(features=['day',
                                                                                  'month',
                                                                                  'year']))),
                ('nu...
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+'))),
                ('actual_estimator',
                 KNeighborsClassifier(algorithm='auto', leaf_size=30,
                                      metric='minkowski', metric_params=None,
                                      n_jobs=-1, n_neighbors=5, p=2,
                                      weights='uniform'))],
         verbose=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x000001BB8C5D68B0>)
2023-05-13 19:47:28,573:INFO:Checking exceptions
2023-05-13 19:47:28,573:INFO:Preloading libraries
2023-05-13 19:47:33,013:INFO:_display_container: 2
2023-05-13 19:47:33,481:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2023-05-13 19:47:33,481:INFO:create_model() successfully completed......................................
2023-05-13 19:47:33,625:INFO:SubProcess create_model() end ==================================
2023-05-13 19:47:33,626:INFO:Creating metrics dataframe
2023-05-13 19:47:33,642:INFO:Initializing Naive Bayes
2023-05-13 19:47:33,642:INFO:Total runtime is 0.15262765487035115 minutes
2023-05-13 19:47:33,648:INFO:SubProcess create_model() called ==================================
2023-05-13 19:47:33,649:INFO:Initializing create_model()
2023-05-13 19:47:33,649:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001BB8AEEAE50>, estimator=nb, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001BB8C6EB040>, model_only=True, return_train_score=False, kwargs={})
2023-05-13 19:47:33,649:INFO:Checking exceptions
2023-05-13 19:47:33,650:INFO:Importing libraries
2023-05-13 19:47:33,650:INFO:Copying training dataset
2023-05-13 19:47:33,674:INFO:Defining folds
2023-05-13 19:47:33,675:INFO:Declaring metric variables
2023-05-13 19:47:33,680:INFO:Importing untrained model
2023-05-13 19:47:33,688:INFO:Naive Bayes Imported successfully
2023-05-13 19:47:33,697:INFO:Cross validation set to False
2023-05-13 19:47:33,698:INFO:Fitting Model
2023-05-13 19:47:34,577:INFO:Initializing predict_model()
2023-05-13 19:47:34,577:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001BB8AEEAE50>, estimator=Pipeline(memory=FastMemory(location=C:\Users\camil\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('date_feature_extractor',
                 TransformerWrapper(exclude=None, include=['Fecha.Expedicion'],
                                    transformer=ExtractDateTimeFeatures(features=['day',
                                                                                  'month',
                                                                                  'year']))),
                ('nu...
                                                                              sampling_strategy='auto')))),
                ('normalize',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+'))),
                ('actual_estimator',
                 GaussianNB(priors=None, var_smoothing=1e-09))],
         verbose=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x000001BB8BE6F670>)
2023-05-13 19:47:34,577:INFO:Checking exceptions
2023-05-13 19:47:34,577:INFO:Preloading libraries
2023-05-13 19:47:34,942:INFO:_display_container: 2
2023-05-13 19:47:35,404:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2023-05-13 19:47:35,405:INFO:create_model() successfully completed......................................
2023-05-13 19:47:35,560:INFO:SubProcess create_model() end ==================================
2023-05-13 19:47:35,561:INFO:Creating metrics dataframe
2023-05-13 19:47:35,576:INFO:Initializing Decision Tree Classifier
2023-05-13 19:47:35,577:INFO:Total runtime is 0.18486538728078206 minutes
2023-05-13 19:47:35,582:INFO:SubProcess create_model() called ==================================
2023-05-13 19:47:35,583:INFO:Initializing create_model()
2023-05-13 19:47:35,583:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001BB8AEEAE50>, estimator=dt, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001BB8C6EB040>, model_only=True, return_train_score=False, kwargs={})
2023-05-13 19:47:35,583:INFO:Checking exceptions
2023-05-13 19:47:35,583:INFO:Importing libraries
2023-05-13 19:47:35,583:INFO:Copying training dataset
2023-05-13 19:47:35,609:INFO:Defining folds
2023-05-13 19:47:35,609:INFO:Declaring metric variables
2023-05-13 19:47:35,614:INFO:Importing untrained model
2023-05-13 19:47:35,621:INFO:Decision Tree Classifier Imported successfully
2023-05-13 19:47:35,630:INFO:Cross validation set to False
2023-05-13 19:47:35,630:INFO:Fitting Model
2023-05-13 19:47:37,326:INFO:Initializing predict_model()
2023-05-13 19:47:37,327:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001BB8AEEAE50>, estimator=Pipeline(memory=FastMemory(location=C:\Users\camil\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('date_feature_extractor',
                 TransformerWrapper(exclude=None, include=['Fecha.Expedicion'],
                                    transformer=ExtractDateTimeFeatures(features=['day',
                                                                                  'month',
                                                                                  'year']))),
                ('nu...
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+'))),
                ('actual_estimator',
                 DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None,
                                        criterion='gini', max_depth=None,
                                        max_features=None, max_leaf_nodes=None,
                                        min_impurity_decrease=0.0,
                                        min_samples_leaf=1, min_samples_split=2,
                                        min_weight_fraction_leaf=0.0,
                                        random_state=123, splitter='best'))],
         verbose=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x000001BB8BE6F940>)
2023-05-13 19:47:37,327:INFO:Checking exceptions
2023-05-13 19:47:37,327:INFO:Preloading libraries
2023-05-13 19:47:37,648:INFO:_display_container: 2
2023-05-13 19:47:38,085:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=123, splitter='best')
2023-05-13 19:47:38,086:INFO:create_model() successfully completed......................................
2023-05-13 19:47:38,242:INFO:SubProcess create_model() end ==================================
2023-05-13 19:47:38,242:INFO:Creating metrics dataframe
2023-05-13 19:47:38,258:INFO:Initializing SVM - Linear Kernel
2023-05-13 19:47:38,258:INFO:Total runtime is 0.22955105702082315 minutes
2023-05-13 19:47:38,263:INFO:SubProcess create_model() called ==================================
2023-05-13 19:47:38,264:INFO:Initializing create_model()
2023-05-13 19:47:38,264:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001BB8AEEAE50>, estimator=svm, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001BB8C6EB040>, model_only=True, return_train_score=False, kwargs={})
2023-05-13 19:47:38,264:INFO:Checking exceptions
2023-05-13 19:47:38,264:INFO:Importing libraries
2023-05-13 19:47:38,265:INFO:Copying training dataset
2023-05-13 19:47:38,290:INFO:Defining folds
2023-05-13 19:47:38,290:INFO:Declaring metric variables
2023-05-13 19:47:38,295:INFO:Importing untrained model
2023-05-13 19:47:38,302:INFO:SVM - Linear Kernel Imported successfully
2023-05-13 19:47:38,313:INFO:Cross validation set to False
2023-05-13 19:47:38,313:INFO:Fitting Model
2023-05-13 19:47:39,839:INFO:Initializing predict_model()
2023-05-13 19:47:39,839:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001BB8AEEAE50>, estimator=Pipeline(memory=FastMemory(location=C:\Users\camil\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('date_feature_extractor',
                 TransformerWrapper(exclude=None, include=['Fecha.Expedicion'],
                                    transformer=ExtractDateTimeFeatures(features=['day',
                                                                                  'month',
                                                                                  'year']))),
                ('nu...
                ('actual_estimator',
                 SGDClassifier(alpha=0.0001, average=False, class_weight=None,
                               early_stopping=False, epsilon=0.1, eta0=0.001,
                               fit_intercept=True, l1_ratio=0.15,
                               learning_rate='optimal', loss='hinge',
                               max_iter=1000, n_iter_no_change=5, n_jobs=-1,
                               penalty='l2', power_t=0.5, random_state=123,
                               shuffle=True, tol=0.001, validation_fraction=0.1,
                               verbose=0, warm_start=False))],
         verbose=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x000001BB8BE6F5E0>)
2023-05-13 19:47:39,839:INFO:Checking exceptions
2023-05-13 19:47:39,839:INFO:Preloading libraries
2023-05-13 19:47:40,157:INFO:_display_container: 2
2023-05-13 19:47:40,599:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=123, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2023-05-13 19:47:40,599:INFO:create_model() successfully completed......................................
2023-05-13 19:47:40,744:INFO:SubProcess create_model() end ==================================
2023-05-13 19:47:40,744:INFO:Creating metrics dataframe
2023-05-13 19:47:40,759:INFO:Initializing Ridge Classifier
2023-05-13 19:47:40,760:INFO:Total runtime is 0.27126078605651854 minutes
2023-05-13 19:47:40,765:INFO:SubProcess create_model() called ==================================
2023-05-13 19:47:40,765:INFO:Initializing create_model()
2023-05-13 19:47:40,766:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001BB8AEEAE50>, estimator=ridge, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001BB8C6EB040>, model_only=True, return_train_score=False, kwargs={})
2023-05-13 19:47:40,766:INFO:Checking exceptions
2023-05-13 19:47:40,766:INFO:Importing libraries
2023-05-13 19:47:40,766:INFO:Copying training dataset
2023-05-13 19:47:40,792:INFO:Defining folds
2023-05-13 19:47:40,792:INFO:Declaring metric variables
2023-05-13 19:47:40,796:INFO:Importing untrained model
2023-05-13 19:47:40,802:INFO:Ridge Classifier Imported successfully
2023-05-13 19:47:40,812:INFO:Cross validation set to False
2023-05-13 19:47:40,812:INFO:Fitting Model
2023-05-13 19:47:42,102:INFO:Initializing predict_model()
2023-05-13 19:47:42,102:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001BB8AEEAE50>, estimator=Pipeline(memory=FastMemory(location=C:\Users\camil\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('date_feature_extractor',
                 TransformerWrapper(exclude=None, include=['Fecha.Expedicion'],
                                    transformer=ExtractDateTimeFeatures(features=['day',
                                                                                  'month',
                                                                                  'year']))),
                ('nu...
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+'))),
                ('actual_estimator',
                 RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True,
                                 fit_intercept=True, max_iter=None,
                                 positive=False, random_state=123,
                                 solver='auto', tol=0.0001))],
         verbose=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x000001BB8BE6FDC0>)
2023-05-13 19:47:42,103:INFO:Checking exceptions
2023-05-13 19:47:42,104:INFO:Preloading libraries
2023-05-13 19:47:42,413:INFO:_display_container: 2
2023-05-13 19:47:42,864:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=123, solver='auto',
                tol=0.0001)
2023-05-13 19:47:42,864:INFO:create_model() successfully completed......................................
2023-05-13 19:47:43,010:INFO:SubProcess create_model() end ==================================
2023-05-13 19:47:43,010:INFO:Creating metrics dataframe
2023-05-13 19:47:43,024:INFO:Initializing Random Forest Classifier
2023-05-13 19:47:43,025:INFO:Total runtime is 0.30900070667266843 minutes
2023-05-13 19:47:43,031:INFO:SubProcess create_model() called ==================================
2023-05-13 19:47:43,032:INFO:Initializing create_model()
2023-05-13 19:47:43,032:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001BB8AEEAE50>, estimator=rf, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001BB8C6EB040>, model_only=True, return_train_score=False, kwargs={})
2023-05-13 19:47:43,032:INFO:Checking exceptions
2023-05-13 19:47:43,032:INFO:Importing libraries
2023-05-13 19:47:43,032:INFO:Copying training dataset
2023-05-13 19:47:43,055:INFO:Defining folds
2023-05-13 19:47:43,055:INFO:Declaring metric variables
2023-05-13 19:47:43,062:INFO:Importing untrained model
2023-05-13 19:47:43,068:INFO:Random Forest Classifier Imported successfully
2023-05-13 19:47:43,076:INFO:Cross validation set to False
2023-05-13 19:47:43,077:INFO:Fitting Model
2023-05-13 19:47:47,096:INFO:Initializing predict_model()
2023-05-13 19:47:47,096:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001BB8AEEAE50>, estimator=Pipeline(memory=FastMemory(location=C:\Users\camil\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('date_feature_extractor',
                 TransformerWrapper(exclude=None, include=['Fecha.Expedicion'],
                                    transformer=ExtractDateTimeFeatures(features=['day',
                                                                                  'month',
                                                                                  'year']))),
                ('nu...
                 RandomForestClassifier(bootstrap=True, ccp_alpha=0.0,
                                        class_weight=None, criterion='gini',
                                        max_depth=None, max_features='sqrt',
                                        max_leaf_nodes=None, max_samples=None,
                                        min_impurity_decrease=0.0,
                                        min_samples_leaf=1, min_samples_split=2,
                                        min_weight_fraction_leaf=0.0,
                                        n_estimators=100, n_jobs=-1,
                                        oob_score=False, random_state=123,
                                        verbose=0, warm_start=False))],
         verbose=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x000001BB8BE6FDC0>)
2023-05-13 19:47:47,096:INFO:Checking exceptions
2023-05-13 19:47:47,096:INFO:Preloading libraries
2023-05-13 19:47:47,622:INFO:_display_container: 2
2023-05-13 19:47:48,100:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=123, verbose=0, warm_start=False)
2023-05-13 19:47:48,101:INFO:create_model() successfully completed......................................
2023-05-13 19:47:48,242:INFO:SubProcess create_model() end ==================================
2023-05-13 19:47:48,243:INFO:Creating metrics dataframe
2023-05-13 19:47:48,258:INFO:Initializing Quadratic Discriminant Analysis
2023-05-13 19:47:48,258:INFO:Total runtime is 0.39622460206349686 minutes
2023-05-13 19:47:48,263:INFO:SubProcess create_model() called ==================================
2023-05-13 19:47:48,264:INFO:Initializing create_model()
2023-05-13 19:47:48,264:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001BB8AEEAE50>, estimator=qda, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001BB8C6EB040>, model_only=True, return_train_score=False, kwargs={})
2023-05-13 19:47:48,264:INFO:Checking exceptions
2023-05-13 19:47:48,264:INFO:Importing libraries
2023-05-13 19:47:48,265:INFO:Copying training dataset
2023-05-13 19:47:48,288:INFO:Defining folds
2023-05-13 19:47:48,288:INFO:Declaring metric variables
2023-05-13 19:47:48,294:INFO:Importing untrained model
2023-05-13 19:47:48,301:INFO:Quadratic Discriminant Analysis Imported successfully
2023-05-13 19:47:48,312:INFO:Cross validation set to False
2023-05-13 19:47:48,312:INFO:Fitting Model
2023-05-13 19:47:49,092:WARNING:c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-05-13 19:47:49,302:INFO:Initializing predict_model()
2023-05-13 19:47:49,302:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001BB8AEEAE50>, estimator=Pipeline(memory=FastMemory(location=C:\Users\camil\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('date_feature_extractor',
                 TransformerWrapper(exclude=None, include=['Fecha.Expedicion'],
                                    transformer=ExtractDateTimeFeatures(features=['day',
                                                                                  'month',
                                                                                  'year']))),
                ('nu...
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+'))),
                ('actual_estimator',
                 QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                                               store_covariance=False,
                                               tol=0.0001))],
         verbose=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x000001BB8C63E790>)
2023-05-13 19:47:49,303:INFO:Checking exceptions
2023-05-13 19:47:49,303:INFO:Preloading libraries
2023-05-13 19:47:49,676:INFO:_display_container: 2
2023-05-13 19:47:50,147:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2023-05-13 19:47:50,148:INFO:create_model() successfully completed......................................
2023-05-13 19:47:50,299:INFO:SubProcess create_model() end ==================================
2023-05-13 19:47:50,300:INFO:Creating metrics dataframe
2023-05-13 19:47:50,315:INFO:Initializing Ada Boost Classifier
2023-05-13 19:47:50,315:INFO:Total runtime is 0.43050926129023226 minutes
2023-05-13 19:47:50,320:INFO:SubProcess create_model() called ==================================
2023-05-13 19:47:50,321:INFO:Initializing create_model()
2023-05-13 19:47:50,321:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001BB8AEEAE50>, estimator=ada, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001BB8C6EB040>, model_only=True, return_train_score=False, kwargs={})
2023-05-13 19:47:50,321:INFO:Checking exceptions
2023-05-13 19:47:50,322:INFO:Importing libraries
2023-05-13 19:47:50,322:INFO:Copying training dataset
2023-05-13 19:47:50,351:INFO:Defining folds
2023-05-13 19:47:50,351:INFO:Declaring metric variables
2023-05-13 19:47:50,356:INFO:Importing untrained model
2023-05-13 19:47:50,362:INFO:Ada Boost Classifier Imported successfully
2023-05-13 19:47:50,371:INFO:Cross validation set to False
2023-05-13 19:47:50,371:INFO:Fitting Model
2023-05-13 19:47:58,888:INFO:Initializing predict_model()
2023-05-13 19:47:58,888:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001BB8AEEAE50>, estimator=Pipeline(memory=FastMemory(location=C:\Users\camil\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('date_feature_extractor',
                 TransformerWrapper(exclude=None, include=['Fecha.Expedicion'],
                                    transformer=ExtractDateTimeFeatures(features=['day',
                                                                                  'month',
                                                                                  'year']))),
                ('nu...
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+'))),
                ('actual_estimator',
                 AdaBoostClassifier(algorithm='SAMME.R',
                                    base_estimator='deprecated', estimator=None,
                                    learning_rate=1.0, n_estimators=50,
                                    random_state=123))],
         verbose=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x000001BB8C63ECA0>)
2023-05-13 19:47:58,888:INFO:Checking exceptions
2023-05-13 19:47:58,888:INFO:Preloading libraries
2023-05-13 19:47:59,565:INFO:_display_container: 2
2023-05-13 19:48:00,048:INFO:AdaBoostClassifier(algorithm='SAMME.R', base_estimator='deprecated',
                   estimator=None, learning_rate=1.0, n_estimators=50,
                   random_state=123)
2023-05-13 19:48:00,049:INFO:create_model() successfully completed......................................
2023-05-13 19:48:00,201:INFO:SubProcess create_model() end ==================================
2023-05-13 19:48:00,202:INFO:Creating metrics dataframe
2023-05-13 19:48:00,222:INFO:Initializing Gradient Boosting Classifier
2023-05-13 19:48:00,222:INFO:Total runtime is 0.59561368227005 minutes
2023-05-13 19:48:00,228:INFO:SubProcess create_model() called ==================================
2023-05-13 19:48:00,228:INFO:Initializing create_model()
2023-05-13 19:48:00,229:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001BB8AEEAE50>, estimator=gbc, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001BB8C6EB040>, model_only=True, return_train_score=False, kwargs={})
2023-05-13 19:48:00,229:INFO:Checking exceptions
2023-05-13 19:48:00,229:INFO:Importing libraries
2023-05-13 19:48:00,229:INFO:Copying training dataset
2023-05-13 19:48:00,252:INFO:Defining folds
2023-05-13 19:48:00,252:INFO:Declaring metric variables
2023-05-13 19:48:00,258:INFO:Importing untrained model
2023-05-13 19:48:00,265:INFO:Gradient Boosting Classifier Imported successfully
2023-05-13 19:48:00,276:INFO:Cross validation set to False
2023-05-13 19:48:00,276:INFO:Fitting Model
2023-05-13 19:48:34,708:INFO:Initializing predict_model()
2023-05-13 19:48:34,708:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001BB8AEEAE50>, estimator=Pipeline(memory=FastMemory(location=C:\Users\camil\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('date_feature_extractor',
                 TransformerWrapper(exclude=None, include=['Fecha.Expedicion'],
                                    transformer=ExtractDateTimeFeatures(features=['day',
                                                                                  'month',
                                                                                  'year']))),
                ('nu...
                                            criterion='friedman_mse', init=None,
                                            learning_rate=0.1, loss='log_loss',
                                            max_depth=3, max_features=None,
                                            max_leaf_nodes=None,
                                            min_impurity_decrease=0.0,
                                            min_samples_leaf=1,
                                            min_samples_split=2,
                                            min_weight_fraction_leaf=0.0,
                                            n_estimators=100,
                                            n_iter_no_change=None,
                                            random_state=123, subsample=1.0,
                                            tol=0.0001, validation_fraction=0.1,
                                            verbose=0, warm_start=False))],
         verbose=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x000001BB8C63E670>)
2023-05-13 19:48:34,708:INFO:Checking exceptions
2023-05-13 19:48:34,708:INFO:Preloading libraries
2023-05-13 19:48:35,079:INFO:_display_container: 2
2023-05-13 19:48:35,526:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=123, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2023-05-13 19:48:35,526:INFO:create_model() successfully completed......................................
2023-05-13 19:48:35,670:INFO:SubProcess create_model() end ==================================
2023-05-13 19:48:35,670:INFO:Creating metrics dataframe
2023-05-13 19:48:35,688:INFO:Initializing Linear Discriminant Analysis
2023-05-13 19:48:35,689:INFO:Total runtime is 1.186742615699768 minutes
2023-05-13 19:48:35,695:INFO:SubProcess create_model() called ==================================
2023-05-13 19:48:35,695:INFO:Initializing create_model()
2023-05-13 19:48:35,695:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001BB8AEEAE50>, estimator=lda, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001BB8C6EB040>, model_only=True, return_train_score=False, kwargs={})
2023-05-13 19:48:35,696:INFO:Checking exceptions
2023-05-13 19:48:35,696:INFO:Importing libraries
2023-05-13 19:48:35,696:INFO:Copying training dataset
2023-05-13 19:48:35,719:INFO:Defining folds
2023-05-13 19:48:35,719:INFO:Declaring metric variables
2023-05-13 19:48:35,725:INFO:Importing untrained model
2023-05-13 19:48:35,731:INFO:Linear Discriminant Analysis Imported successfully
2023-05-13 19:48:35,740:INFO:Cross validation set to False
2023-05-13 19:48:35,740:INFO:Fitting Model
2023-05-13 19:48:36,953:INFO:Initializing predict_model()
2023-05-13 19:48:36,953:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001BB8AEEAE50>, estimator=Pipeline(memory=FastMemory(location=C:\Users\camil\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('date_feature_extractor',
                 TransformerWrapper(exclude=None, include=['Fecha.Expedicion'],
                                    transformer=ExtractDateTimeFeatures(features=['day',
                                                                                  'month',
                                                                                  'year']))),
                ('nu...
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+'))),
                ('actual_estimator',
                 LinearDiscriminantAnalysis(covariance_estimator=None,
                                            n_components=None, priors=None,
                                            shrinkage=None, solver='svd',
                                            store_covariance=False,
                                            tol=0.0001))],
         verbose=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x000001BB8C63E700>)
2023-05-13 19:48:36,953:INFO:Checking exceptions
2023-05-13 19:48:36,953:INFO:Preloading libraries
2023-05-13 19:48:37,270:INFO:_display_container: 2
2023-05-13 19:48:37,721:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2023-05-13 19:48:37,721:INFO:create_model() successfully completed......................................
2023-05-13 19:48:37,866:INFO:SubProcess create_model() end ==================================
2023-05-13 19:48:37,866:INFO:Creating metrics dataframe
2023-05-13 19:48:37,885:INFO:Initializing Extra Trees Classifier
2023-05-13 19:48:37,885:INFO:Total runtime is 1.2233444770177204 minutes
2023-05-13 19:48:37,892:INFO:SubProcess create_model() called ==================================
2023-05-13 19:48:37,892:INFO:Initializing create_model()
2023-05-13 19:48:37,892:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001BB8AEEAE50>, estimator=et, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001BB8C6EB040>, model_only=True, return_train_score=False, kwargs={})
2023-05-13 19:48:37,892:INFO:Checking exceptions
2023-05-13 19:48:37,892:INFO:Importing libraries
2023-05-13 19:48:37,892:INFO:Copying training dataset
2023-05-13 19:48:37,915:INFO:Defining folds
2023-05-13 19:48:37,915:INFO:Declaring metric variables
2023-05-13 19:48:37,920:INFO:Importing untrained model
2023-05-13 19:48:37,927:INFO:Extra Trees Classifier Imported successfully
2023-05-13 19:48:37,937:INFO:Cross validation set to False
2023-05-13 19:48:37,937:INFO:Fitting Model
2023-05-13 19:48:41,372:INFO:Initializing predict_model()
2023-05-13 19:48:41,372:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001BB8AEEAE50>, estimator=Pipeline(memory=FastMemory(location=C:\Users\camil\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('date_feature_extractor',
                 TransformerWrapper(exclude=None, include=['Fecha.Expedicion'],
                                    transformer=ExtractDateTimeFeatures(features=['day',
                                                                                  'month',
                                                                                  'year']))),
                ('nu...
                 ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0,
                                      class_weight=None, criterion='gini',
                                      max_depth=None, max_features='sqrt',
                                      max_leaf_nodes=None, max_samples=None,
                                      min_impurity_decrease=0.0,
                                      min_samples_leaf=1, min_samples_split=2,
                                      min_weight_fraction_leaf=0.0,
                                      n_estimators=100, n_jobs=-1,
                                      oob_score=False, random_state=123,
                                      verbose=0, warm_start=False))],
         verbose=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x000001BB8C63EB80>)
2023-05-13 19:48:41,372:INFO:Checking exceptions
2023-05-13 19:48:41,372:INFO:Preloading libraries
2023-05-13 19:48:41,906:INFO:_display_container: 2
2023-05-13 19:48:42,354:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     n_estimators=100, n_jobs=-1, oob_score=False,
                     random_state=123, verbose=0, warm_start=False)
2023-05-13 19:48:42,354:INFO:create_model() successfully completed......................................
2023-05-13 19:48:42,503:INFO:SubProcess create_model() end ==================================
2023-05-13 19:48:42,503:INFO:Creating metrics dataframe
2023-05-13 19:48:42,521:INFO:Initializing Light Gradient Boosting Machine
2023-05-13 19:48:42,522:INFO:Total runtime is 1.300621445973714 minutes
2023-05-13 19:48:42,529:INFO:SubProcess create_model() called ==================================
2023-05-13 19:48:42,530:INFO:Initializing create_model()
2023-05-13 19:48:42,530:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001BB8AEEAE50>, estimator=lightgbm, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001BB8C6EB040>, model_only=True, return_train_score=False, kwargs={})
2023-05-13 19:48:42,530:INFO:Checking exceptions
2023-05-13 19:48:42,530:INFO:Importing libraries
2023-05-13 19:48:42,531:INFO:Copying training dataset
2023-05-13 19:48:42,554:INFO:Defining folds
2023-05-13 19:48:42,554:INFO:Declaring metric variables
2023-05-13 19:48:42,560:INFO:Importing untrained model
2023-05-13 19:48:42,566:INFO:Light Gradient Boosting Machine Imported successfully
2023-05-13 19:48:42,575:INFO:Cross validation set to False
2023-05-13 19:48:42,576:INFO:Fitting Model
2023-05-13 19:48:44,315:INFO:Initializing predict_model()
2023-05-13 19:48:44,315:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001BB8AEEAE50>, estimator=Pipeline(memory=FastMemory(location=C:\Users\camil\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('date_feature_extractor',
                 TransformerWrapper(exclude=None, include=['Fecha.Expedicion'],
                                    transformer=ExtractDateTimeFeatures(features=['day',
                                                                                  'month',
                                                                                  'year']))),
                ('nu...
                 LGBMClassifier(boosting_type='gbdt', class_weight=None,
                                colsample_bytree=1.0, importance_type='split',
                                learning_rate=0.1, max_depth=-1,
                                min_child_samples=20, min_child_weight=0.001,
                                min_split_gain=0.0, n_estimators=100, n_jobs=-1,
                                num_leaves=31, objective=None, random_state=123,
                                reg_alpha=0.0, reg_lambda=0.0, silent='warn',
                                subsample=1.0, subsample_for_bin=200000,
                                subsample_freq=0))],
         verbose=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x000001BB8C63EEE0>)
2023-05-13 19:48:44,315:INFO:Checking exceptions
2023-05-13 19:48:44,315:INFO:Preloading libraries
2023-05-13 19:48:44,787:INFO:_display_container: 2
2023-05-13 19:48:45,258:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=123, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0)
2023-05-13 19:48:45,258:INFO:create_model() successfully completed......................................
2023-05-13 19:48:45,416:INFO:SubProcess create_model() end ==================================
2023-05-13 19:48:45,417:INFO:Creating metrics dataframe
2023-05-13 19:48:45,441:INFO:Initializing Dummy Classifier
2023-05-13 19:48:45,441:INFO:Total runtime is 1.3492670933405557 minutes
2023-05-13 19:48:45,447:INFO:SubProcess create_model() called ==================================
2023-05-13 19:48:45,448:INFO:Initializing create_model()
2023-05-13 19:48:45,448:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001BB8AEEAE50>, estimator=dummy, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001BB8C6EB040>, model_only=True, return_train_score=False, kwargs={})
2023-05-13 19:48:45,449:INFO:Checking exceptions
2023-05-13 19:48:45,449:INFO:Importing libraries
2023-05-13 19:48:45,449:INFO:Copying training dataset
2023-05-13 19:48:45,472:INFO:Defining folds
2023-05-13 19:48:45,472:INFO:Declaring metric variables
2023-05-13 19:48:45,478:INFO:Importing untrained model
2023-05-13 19:48:45,485:INFO:Dummy Classifier Imported successfully
2023-05-13 19:48:45,492:INFO:Cross validation set to False
2023-05-13 19:48:45,493:INFO:Fitting Model
2023-05-13 19:48:46,244:INFO:Initializing predict_model()
2023-05-13 19:48:46,245:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001BB8AEEAE50>, estimator=Pipeline(memory=FastMemory(location=C:\Users\camil\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('date_feature_extractor',
                 TransformerWrapper(exclude=None, include=['Fecha.Expedicion'],
                                    transformer=ExtractDateTimeFeatures(features=['day',
                                                                                  'month',
                                                                                  'year']))),
                ('nu...
                ('normalize',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+'))),
                ('actual_estimator',
                 DummyClassifier(constant=None, random_state=123,
                                 strategy='prior'))],
         verbose=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x000001BB8C5D6CA0>)
2023-05-13 19:48:46,245:INFO:Checking exceptions
2023-05-13 19:48:46,245:INFO:Preloading libraries
2023-05-13 19:48:46,567:INFO:_display_container: 2
2023-05-13 19:48:47,024:INFO:DummyClassifier(constant=None, random_state=123, strategy='prior')
2023-05-13 19:48:47,024:INFO:create_model() successfully completed......................................
2023-05-13 19:48:47,168:INFO:SubProcess create_model() end ==================================
2023-05-13 19:48:47,168:INFO:Creating metrics dataframe
2023-05-13 19:48:47,202:INFO:Initializing create_model()
2023-05-13 19:48:47,202:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001BB8AEEAE50>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-05-13 19:48:47,202:INFO:Checking exceptions
2023-05-13 19:48:47,204:INFO:Importing libraries
2023-05-13 19:48:47,205:INFO:Copying training dataset
2023-05-13 19:48:47,226:INFO:Defining folds
2023-05-13 19:48:47,226:INFO:Declaring metric variables
2023-05-13 19:48:47,226:INFO:Importing untrained model
2023-05-13 19:48:47,226:INFO:Declaring custom model
2023-05-13 19:48:47,228:INFO:Logistic Regression Imported successfully
2023-05-13 19:48:47,230:INFO:Cross validation set to False
2023-05-13 19:48:47,230:INFO:Fitting Model
2023-05-13 19:48:48,365:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2023-05-13 19:48:48,365:INFO:create_model() successfully completed......................................
2023-05-13 19:48:48,565:INFO:_master_model_container: 0
2023-05-13 19:48:48,565:INFO:_display_container: 2
2023-05-13 19:48:48,566:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2023-05-13 19:48:48,566:INFO:compare_models() successfully completed......................................
2023-05-13 19:49:19,536:INFO:Initializing compare_models()
2023-05-13 19:49:19,536:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001BB8AEEAE50>, include=None, fold=None, round=4, cross_validation=True, sort=F1, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x000001BB8AEEAE50>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'F1', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2023-05-13 19:49:19,537:INFO:Checking exceptions
2023-05-13 19:49:19,548:INFO:Preparing display monitor
2023-05-13 19:49:19,590:INFO:Initializing Logistic Regression
2023-05-13 19:49:19,590:INFO:Total runtime is 1.7472108205159505e-05 minutes
2023-05-13 19:49:19,598:INFO:SubProcess create_model() called ==================================
2023-05-13 19:49:19,599:INFO:Initializing create_model()
2023-05-13 19:49:19,599:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001BB8AEEAE50>, estimator=lr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001BB858B0190>, model_only=True, return_train_score=False, kwargs={})
2023-05-13 19:49:19,599:INFO:Checking exceptions
2023-05-13 19:49:19,600:INFO:Importing libraries
2023-05-13 19:49:19,600:INFO:Copying training dataset
2023-05-13 19:49:19,632:INFO:Defining folds
2023-05-13 19:49:19,632:INFO:Declaring metric variables
2023-05-13 19:49:19,640:INFO:Importing untrained model
2023-05-13 19:49:19,646:INFO:Logistic Regression Imported successfully
2023-05-13 19:49:19,659:INFO:Starting cross validation
2023-05-13 19:49:19,665:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-05-13 19:49:33,735:INFO:Calculating mean and std
2023-05-13 19:49:33,737:INFO:Creating metrics dataframe
2023-05-13 19:49:34,369:INFO:Uploading results into container
2023-05-13 19:49:34,370:INFO:Uploading model into container now
2023-05-13 19:49:34,370:INFO:_master_model_container: 1
2023-05-13 19:49:34,370:INFO:_display_container: 3
2023-05-13 19:49:34,371:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2023-05-13 19:49:34,371:INFO:create_model() successfully completed......................................
2023-05-13 19:49:34,533:INFO:SubProcess create_model() end ==================================
2023-05-13 19:49:34,533:INFO:Creating metrics dataframe
2023-05-13 19:49:34,547:INFO:Initializing K Neighbors Classifier
2023-05-13 19:49:34,547:INFO:Total runtime is 0.24928913513819376 minutes
2023-05-13 19:49:34,554:INFO:SubProcess create_model() called ==================================
2023-05-13 19:49:34,554:INFO:Initializing create_model()
2023-05-13 19:49:34,555:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001BB8AEEAE50>, estimator=knn, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001BB858B0190>, model_only=True, return_train_score=False, kwargs={})
2023-05-13 19:49:34,555:INFO:Checking exceptions
2023-05-13 19:49:34,555:INFO:Importing libraries
2023-05-13 19:49:34,555:INFO:Copying training dataset
2023-05-13 19:49:34,580:INFO:Defining folds
2023-05-13 19:49:34,580:INFO:Declaring metric variables
2023-05-13 19:49:34,586:INFO:Importing untrained model
2023-05-13 19:49:34,593:INFO:K Neighbors Classifier Imported successfully
2023-05-13 19:49:34,605:INFO:Starting cross validation
2023-05-13 19:49:34,609:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-05-13 19:49:48,527:INFO:Calculating mean and std
2023-05-13 19:49:48,528:INFO:Creating metrics dataframe
2023-05-13 19:49:49,117:INFO:Uploading results into container
2023-05-13 19:49:49,119:INFO:Uploading model into container now
2023-05-13 19:49:49,120:INFO:_master_model_container: 2
2023-05-13 19:49:49,120:INFO:_display_container: 3
2023-05-13 19:49:49,122:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2023-05-13 19:49:49,122:INFO:create_model() successfully completed......................................
2023-05-13 19:49:49,265:INFO:SubProcess create_model() end ==================================
2023-05-13 19:49:49,265:INFO:Creating metrics dataframe
2023-05-13 19:49:49,284:INFO:Initializing Naive Bayes
2023-05-13 19:49:49,284:INFO:Total runtime is 0.4949097792307536 minutes
2023-05-13 19:49:49,293:INFO:SubProcess create_model() called ==================================
2023-05-13 19:49:49,293:INFO:Initializing create_model()
2023-05-13 19:49:49,293:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001BB8AEEAE50>, estimator=nb, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001BB858B0190>, model_only=True, return_train_score=False, kwargs={})
2023-05-13 19:49:49,294:INFO:Checking exceptions
2023-05-13 19:49:49,294:INFO:Importing libraries
2023-05-13 19:49:49,294:INFO:Copying training dataset
2023-05-13 19:49:49,319:INFO:Defining folds
2023-05-13 19:49:49,320:INFO:Declaring metric variables
2023-05-13 19:49:49,328:INFO:Importing untrained model
2023-05-13 19:49:49,332:INFO:Naive Bayes Imported successfully
2023-05-13 19:49:49,344:INFO:Starting cross validation
2023-05-13 19:49:49,348:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-05-13 19:49:56,672:INFO:Calculating mean and std
2023-05-13 19:49:56,673:INFO:Creating metrics dataframe
2023-05-13 19:49:57,291:INFO:Uploading results into container
2023-05-13 19:49:57,292:INFO:Uploading model into container now
2023-05-13 19:49:57,293:INFO:_master_model_container: 3
2023-05-13 19:49:57,293:INFO:_display_container: 3
2023-05-13 19:49:57,293:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2023-05-13 19:49:57,294:INFO:create_model() successfully completed......................................
2023-05-13 19:49:57,438:INFO:SubProcess create_model() end ==================================
2023-05-13 19:49:57,438:INFO:Creating metrics dataframe
2023-05-13 19:49:57,451:INFO:Initializing Decision Tree Classifier
2023-05-13 19:49:57,451:INFO:Total runtime is 0.6310285250345866 minutes
2023-05-13 19:49:57,459:INFO:SubProcess create_model() called ==================================
2023-05-13 19:49:57,460:INFO:Initializing create_model()
2023-05-13 19:49:57,460:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001BB8AEEAE50>, estimator=dt, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001BB858B0190>, model_only=True, return_train_score=False, kwargs={})
2023-05-13 19:49:57,460:INFO:Checking exceptions
2023-05-13 19:49:57,460:INFO:Importing libraries
2023-05-13 19:49:57,461:INFO:Copying training dataset
2023-05-13 19:49:57,484:INFO:Defining folds
2023-05-13 19:49:57,484:INFO:Declaring metric variables
2023-05-13 19:49:57,491:INFO:Importing untrained model
2023-05-13 19:49:57,497:INFO:Decision Tree Classifier Imported successfully
2023-05-13 19:49:57,508:INFO:Starting cross validation
2023-05-13 19:49:57,513:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-05-13 19:50:04,211:INFO:Calculating mean and std
2023-05-13 19:50:04,212:INFO:Creating metrics dataframe
2023-05-13 19:50:04,844:INFO:Uploading results into container
2023-05-13 19:50:04,845:INFO:Uploading model into container now
2023-05-13 19:50:04,845:INFO:_master_model_container: 4
2023-05-13 19:50:04,845:INFO:_display_container: 3
2023-05-13 19:50:04,846:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=123, splitter='best')
2023-05-13 19:50:04,846:INFO:create_model() successfully completed......................................
2023-05-13 19:50:04,989:INFO:SubProcess create_model() end ==================================
2023-05-13 19:50:04,990:INFO:Creating metrics dataframe
2023-05-13 19:50:05,005:INFO:Initializing SVM - Linear Kernel
2023-05-13 19:50:05,005:INFO:Total runtime is 0.7569278160730998 minutes
2023-05-13 19:50:05,011:INFO:SubProcess create_model() called ==================================
2023-05-13 19:50:05,012:INFO:Initializing create_model()
2023-05-13 19:50:05,012:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001BB8AEEAE50>, estimator=svm, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001BB858B0190>, model_only=True, return_train_score=False, kwargs={})
2023-05-13 19:50:05,012:INFO:Checking exceptions
2023-05-13 19:50:05,012:INFO:Importing libraries
2023-05-13 19:50:05,012:INFO:Copying training dataset
2023-05-13 19:50:05,034:INFO:Defining folds
2023-05-13 19:50:05,035:INFO:Declaring metric variables
2023-05-13 19:50:05,042:INFO:Importing untrained model
2023-05-13 19:50:05,048:INFO:SVM - Linear Kernel Imported successfully
2023-05-13 19:50:05,060:INFO:Starting cross validation
2023-05-13 19:50:05,063:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-05-13 19:50:08,264:WARNING:c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-05-13 19:50:08,411:WARNING:c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-05-13 19:50:08,413:WARNING:c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-05-13 19:50:08,448:WARNING:c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-05-13 19:50:08,534:WARNING:c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-05-13 19:50:08,539:WARNING:c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-05-13 19:50:08,599:WARNING:c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-05-13 19:50:08,611:WARNING:c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-05-13 19:50:11,696:WARNING:c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-05-13 19:50:11,869:WARNING:c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-05-13 19:50:14,088:INFO:Calculating mean and std
2023-05-13 19:50:14,089:INFO:Creating metrics dataframe
2023-05-13 19:50:14,739:INFO:Uploading results into container
2023-05-13 19:50:14,740:INFO:Uploading model into container now
2023-05-13 19:50:14,740:INFO:_master_model_container: 5
2023-05-13 19:50:14,740:INFO:_display_container: 3
2023-05-13 19:50:14,741:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=123, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2023-05-13 19:50:14,741:INFO:create_model() successfully completed......................................
2023-05-13 19:50:14,894:INFO:SubProcess create_model() end ==================================
2023-05-13 19:50:14,894:INFO:Creating metrics dataframe
2023-05-13 19:50:14,911:INFO:Initializing Ridge Classifier
2023-05-13 19:50:14,911:INFO:Total runtime is 0.9220208207766215 minutes
2023-05-13 19:50:14,915:INFO:SubProcess create_model() called ==================================
2023-05-13 19:50:14,916:INFO:Initializing create_model()
2023-05-13 19:50:14,916:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001BB8AEEAE50>, estimator=ridge, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001BB858B0190>, model_only=True, return_train_score=False, kwargs={})
2023-05-13 19:50:14,916:INFO:Checking exceptions
2023-05-13 19:50:14,917:INFO:Importing libraries
2023-05-13 19:50:14,917:INFO:Copying training dataset
2023-05-13 19:50:14,941:INFO:Defining folds
2023-05-13 19:50:14,941:INFO:Declaring metric variables
2023-05-13 19:50:14,946:INFO:Importing untrained model
2023-05-13 19:50:14,954:INFO:Ridge Classifier Imported successfully
2023-05-13 19:50:14,964:INFO:Starting cross validation
2023-05-13 19:50:14,967:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-05-13 19:50:17,062:WARNING:c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-05-13 19:50:17,129:WARNING:c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-05-13 19:50:17,192:WARNING:c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-05-13 19:50:17,201:WARNING:c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-05-13 19:50:17,291:WARNING:c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-05-13 19:50:17,370:WARNING:c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-05-13 19:50:17,586:WARNING:c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-05-13 19:50:17,624:WARNING:c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-05-13 19:50:19,759:WARNING:c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-05-13 19:50:19,767:WARNING:c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-05-13 19:50:22,669:INFO:Calculating mean and std
2023-05-13 19:50:22,671:INFO:Creating metrics dataframe
2023-05-13 19:50:23,309:INFO:Uploading results into container
2023-05-13 19:50:23,310:INFO:Uploading model into container now
2023-05-13 19:50:23,311:INFO:_master_model_container: 6
2023-05-13 19:50:23,311:INFO:_display_container: 3
2023-05-13 19:50:23,312:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=123, solver='auto',
                tol=0.0001)
2023-05-13 19:50:23,312:INFO:create_model() successfully completed......................................
2023-05-13 19:50:23,451:INFO:SubProcess create_model() end ==================================
2023-05-13 19:50:23,451:INFO:Creating metrics dataframe
2023-05-13 19:50:23,470:INFO:Initializing Random Forest Classifier
2023-05-13 19:50:23,471:INFO:Total runtime is 1.0646828254063925 minutes
2023-05-13 19:50:23,476:INFO:SubProcess create_model() called ==================================
2023-05-13 19:50:23,476:INFO:Initializing create_model()
2023-05-13 19:50:23,476:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001BB8AEEAE50>, estimator=rf, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001BB858B0190>, model_only=True, return_train_score=False, kwargs={})
2023-05-13 19:50:23,476:INFO:Checking exceptions
2023-05-13 19:50:23,476:INFO:Importing libraries
2023-05-13 19:50:23,476:INFO:Copying training dataset
2023-05-13 19:50:23,498:INFO:Defining folds
2023-05-13 19:50:23,498:INFO:Declaring metric variables
2023-05-13 19:50:23,504:INFO:Importing untrained model
2023-05-13 19:50:23,510:INFO:Random Forest Classifier Imported successfully
2023-05-13 19:50:23,522:INFO:Starting cross validation
2023-05-13 19:50:23,526:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-05-13 19:50:41,622:WARNING:c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 1.39s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  fitted_estimator = self._memory_fit(

2023-05-13 19:50:41,670:WARNING:c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 1.39s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  fitted_estimator = self._memory_fit(

2023-05-13 19:50:42,990:WARNING:c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 1.32s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  fitted_estimator = self._memory_fit(

2023-05-13 19:50:43,525:WARNING:c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\pycaret\internal\pipeline.py:108: UserWarning: Persisting input arguments took 0.54s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, y = pipeline._memory_transform(transformer, X, y)

2023-05-13 19:50:45,096:WARNING:c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 0.50s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  fitted_estimator = self._memory_fit(

2023-05-13 19:50:45,253:WARNING:c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 0.67s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-05-13 19:50:45,328:WARNING:c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 0.58s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-05-13 19:50:46,144:WARNING:c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 0.51s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-05-13 19:50:46,200:WARNING:c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 0.54s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-05-13 19:50:46,219:WARNING:c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 0.54s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-05-13 19:50:46,699:WARNING:c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 0.54s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-05-13 19:50:55,469:INFO:Calculating mean and std
2023-05-13 19:50:55,470:INFO:Creating metrics dataframe
2023-05-13 19:50:56,136:INFO:Uploading results into container
2023-05-13 19:50:56,137:INFO:Uploading model into container now
2023-05-13 19:50:56,137:INFO:_master_model_container: 7
2023-05-13 19:50:56,137:INFO:_display_container: 3
2023-05-13 19:50:56,138:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=123, verbose=0, warm_start=False)
2023-05-13 19:50:56,138:INFO:create_model() successfully completed......................................
2023-05-13 19:50:56,283:INFO:SubProcess create_model() end ==================================
2023-05-13 19:50:56,284:INFO:Creating metrics dataframe
2023-05-13 19:50:56,302:INFO:Initializing Quadratic Discriminant Analysis
2023-05-13 19:50:56,302:INFO:Total runtime is 1.6118750333786012 minutes
2023-05-13 19:50:56,308:INFO:SubProcess create_model() called ==================================
2023-05-13 19:50:56,308:INFO:Initializing create_model()
2023-05-13 19:50:56,309:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001BB8AEEAE50>, estimator=qda, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001BB858B0190>, model_only=True, return_train_score=False, kwargs={})
2023-05-13 19:50:56,309:INFO:Checking exceptions
2023-05-13 19:50:56,309:INFO:Importing libraries
2023-05-13 19:50:56,309:INFO:Copying training dataset
2023-05-13 19:50:56,331:INFO:Defining folds
2023-05-13 19:50:56,331:INFO:Declaring metric variables
2023-05-13 19:50:56,337:INFO:Importing untrained model
2023-05-13 19:50:56,343:INFO:Quadratic Discriminant Analysis Imported successfully
2023-05-13 19:50:56,355:INFO:Starting cross validation
2023-05-13 19:50:56,360:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-05-13 19:50:57,848:WARNING:c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-05-13 19:50:57,977:WARNING:c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-05-13 19:50:58,016:WARNING:c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-05-13 19:50:58,021:WARNING:c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-05-13 19:50:58,089:WARNING:c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-05-13 19:50:58,166:WARNING:c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-05-13 19:50:58,199:WARNING:c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-05-13 19:50:58,205:WARNING:c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-05-13 19:51:01,553:WARNING:c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-05-13 19:51:01,609:WARNING:c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-05-13 19:51:05,375:INFO:Calculating mean and std
2023-05-13 19:51:05,377:INFO:Creating metrics dataframe
2023-05-13 19:51:06,086:INFO:Uploading results into container
2023-05-13 19:51:06,087:INFO:Uploading model into container now
2023-05-13 19:51:06,087:INFO:_master_model_container: 8
2023-05-13 19:51:06,087:INFO:_display_container: 3
2023-05-13 19:51:06,087:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2023-05-13 19:51:06,087:INFO:create_model() successfully completed......................................
2023-05-13 19:51:06,232:INFO:SubProcess create_model() end ==================================
2023-05-13 19:51:06,232:INFO:Creating metrics dataframe
2023-05-13 19:51:06,248:INFO:Initializing Ada Boost Classifier
2023-05-13 19:51:06,248:INFO:Total runtime is 1.777637306849162 minutes
2023-05-13 19:51:06,255:INFO:SubProcess create_model() called ==================================
2023-05-13 19:51:06,255:INFO:Initializing create_model()
2023-05-13 19:51:06,255:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001BB8AEEAE50>, estimator=ada, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001BB858B0190>, model_only=True, return_train_score=False, kwargs={})
2023-05-13 19:51:06,255:INFO:Checking exceptions
2023-05-13 19:51:06,255:INFO:Importing libraries
2023-05-13 19:51:06,256:INFO:Copying training dataset
2023-05-13 19:51:06,277:INFO:Defining folds
2023-05-13 19:51:06,277:INFO:Declaring metric variables
2023-05-13 19:51:06,283:INFO:Importing untrained model
2023-05-13 19:51:06,289:INFO:Ada Boost Classifier Imported successfully
2023-05-13 19:51:06,299:INFO:Starting cross validation
2023-05-13 19:51:06,303:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-05-13 19:52:04,341:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-13 19:52:04,341:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-13 19:52:04,341:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-13 19:52:04,341:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-13 19:52:05,087:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-05-13 19:52:05,983:INFO:PyCaret ClassificationExperiment
2023-05-13 19:52:05,983:INFO:Logging name: clf-default-name
2023-05-13 19:52:05,983:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2023-05-13 19:52:05,983:INFO:version 3.0.0
2023-05-13 19:52:05,983:INFO:Initializing setup()
2023-05-13 19:52:05,983:INFO:self.USI: 3a4c
2023-05-13 19:52:05,983:INFO:self._variable_keys: {'gpu_param', 'fold_groups_param', 'X_train', 'exp_id', 'target_param', 'idx', 'X_test', '_ml_usecase', 'data', 'fix_imbalance', 'exp_name_log', 'log_plots_param', 'USI', 'seed', 'fold_generator', 'y_test', '_available_plots', 'n_jobs_param', 'html_param', 'fold_shuffle_param', 'pipeline', 'y', 'gpu_n_jobs_param', 'logging_param', 'memory', 'X', 'y_train', 'is_multiclass'}
2023-05-13 19:52:05,983:INFO:Checking environment
2023-05-13 19:52:05,984:INFO:python_version: 3.8.16
2023-05-13 19:52:05,984:INFO:python_build: ('default', 'Mar  2 2023 03:18:16')
2023-05-13 19:52:05,984:INFO:machine: AMD64
2023-05-13 19:52:05,984:INFO:platform: Windows-10-10.0.19045-SP0
2023-05-13 19:52:05,988:INFO:Memory: svmem(total=34292408320, available=21320069120, percent=37.8, used=12972339200, free=21320069120)
2023-05-13 19:52:05,988:INFO:Physical Core: 4
2023-05-13 19:52:05,988:INFO:Logical Core: 8
2023-05-13 19:52:05,988:INFO:Checking libraries
2023-05-13 19:52:05,988:INFO:System:
2023-05-13 19:52:05,988:INFO:    python: 3.8.16 (default, Mar  2 2023, 03:18:16) [MSC v.1916 64 bit (AMD64)]
2023-05-13 19:52:05,988:INFO:executable: c:\Users\camil\anaconda3\envs\pycaretenv\python.exe
2023-05-13 19:52:05,988:INFO:   machine: Windows-10-10.0.19045-SP0
2023-05-13 19:52:05,988:INFO:PyCaret required dependencies:
2023-05-13 19:52:05,988:INFO:                 pip: 23.0.1
2023-05-13 19:52:05,988:INFO:          setuptools: 66.0.0
2023-05-13 19:52:05,988:INFO:             pycaret: 3.0.0
2023-05-13 19:52:05,988:INFO:             IPython: 8.12.2
2023-05-13 19:52:05,989:INFO:          ipywidgets: 8.0.6
2023-05-13 19:52:05,989:INFO:                tqdm: 4.65.0
2023-05-13 19:52:05,989:INFO:               numpy: 1.24.3
2023-05-13 19:52:05,989:INFO:              pandas: 1.5.3
2023-05-13 19:52:05,989:INFO:              jinja2: 3.1.2
2023-05-13 19:52:05,989:INFO:               scipy: 1.10.1
2023-05-13 19:52:05,989:INFO:              joblib: 1.2.0
2023-05-13 19:52:05,989:INFO:             sklearn: 1.2.2
2023-05-13 19:52:05,989:INFO:                pyod: 1.0.9
2023-05-13 19:52:05,989:INFO:            imblearn: 0.10.1
2023-05-13 19:52:05,989:INFO:   category_encoders: 2.6.0
2023-05-13 19:52:05,989:INFO:            lightgbm: 3.3.5
2023-05-13 19:52:05,989:INFO:               numba: 0.57.0
2023-05-13 19:52:05,989:INFO:            requests: 2.30.0
2023-05-13 19:52:05,989:INFO:          matplotlib: 3.7.1
2023-05-13 19:52:05,990:INFO:          scikitplot: 0.3.7
2023-05-13 19:52:05,990:INFO:         yellowbrick: 1.5
2023-05-13 19:52:05,990:INFO:              plotly: 5.14.1
2023-05-13 19:52:05,990:INFO:             kaleido: 0.2.1
2023-05-13 19:52:05,990:INFO:         statsmodels: 0.14.0
2023-05-13 19:52:05,990:INFO:              sktime: 0.18.0
2023-05-13 19:52:05,990:INFO:               tbats: 1.1.3
2023-05-13 19:52:05,990:INFO:            pmdarima: 2.0.3
2023-05-13 19:52:05,991:INFO:              psutil: 5.9.5
2023-05-13 19:52:05,991:INFO:PyCaret optional dependencies:
2023-05-13 19:52:06,012:INFO:                shap: Not installed
2023-05-13 19:52:06,012:INFO:           interpret: Not installed
2023-05-13 19:52:06,012:INFO:                umap: Not installed
2023-05-13 19:52:06,012:INFO:    pandas_profiling: Not installed
2023-05-13 19:52:06,012:INFO:  explainerdashboard: Not installed
2023-05-13 19:52:06,013:INFO:             autoviz: Not installed
2023-05-13 19:52:06,013:INFO:           fairlearn: Not installed
2023-05-13 19:52:06,013:INFO:             xgboost: Not installed
2023-05-13 19:52:06,013:INFO:            catboost: Not installed
2023-05-13 19:52:06,013:INFO:              kmodes: Not installed
2023-05-13 19:52:06,014:INFO:             mlxtend: Not installed
2023-05-13 19:52:06,014:INFO:       statsforecast: Not installed
2023-05-13 19:52:06,014:INFO:        tune_sklearn: Not installed
2023-05-13 19:52:06,014:INFO:                 ray: Not installed
2023-05-13 19:52:06,014:INFO:            hyperopt: Not installed
2023-05-13 19:52:06,014:INFO:              optuna: Not installed
2023-05-13 19:52:06,014:INFO:               skopt: Not installed
2023-05-13 19:52:06,014:INFO:              mlflow: Not installed
2023-05-13 19:52:06,014:INFO:              gradio: Not installed
2023-05-13 19:52:06,014:INFO:             fastapi: Not installed
2023-05-13 19:52:06,015:INFO:             uvicorn: Not installed
2023-05-13 19:52:06,015:INFO:              m2cgen: Not installed
2023-05-13 19:52:06,015:INFO:           evidently: Not installed
2023-05-13 19:52:06,015:INFO:               fugue: Not installed
2023-05-13 19:52:06,015:INFO:           streamlit: Not installed
2023-05-13 19:52:06,015:INFO:             prophet: Not installed
2023-05-13 19:52:06,015:INFO:None
2023-05-13 19:52:06,015:INFO:Set up data.
2023-05-13 19:52:06,227:INFO:Set up train/test split.
2023-05-13 19:52:06,313:INFO:Set up index.
2023-05-13 19:52:06,313:INFO:Set up folding strategy.
2023-05-13 19:52:06,313:INFO:Assigning column types.
2023-05-13 19:52:06,329:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-05-13 19:52:06,387:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-05-13 19:52:06,389:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-05-13 19:52:06,433:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-13 19:52:06,458:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-13 19:52:06,515:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-05-13 19:52:06,516:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-05-13 19:52:06,551:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-13 19:52:06,551:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-13 19:52:06,551:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-05-13 19:52:06,610:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-05-13 19:52:06,648:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-13 19:52:06,648:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-13 19:52:06,711:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-05-13 19:52:06,750:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-13 19:52:06,750:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-13 19:52:06,750:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2023-05-13 19:52:06,843:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-13 19:52:06,843:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-13 19:52:06,936:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-13 19:52:06,936:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-13 19:52:06,939:INFO:Preparing preprocessing pipeline...
2023-05-13 19:52:06,942:INFO:Set up label encoding.
2023-05-13 19:52:06,942:INFO:Set up date feature engineering.
2023-05-13 19:52:06,942:INFO:Set up simple imputation.
2023-05-13 19:52:06,958:INFO:Set up encoding of ordinal features.
2023-05-13 19:52:06,982:INFO:Set up encoding of categorical features.
2023-05-13 19:52:06,982:INFO:Set up removing multicollinearity.
2023-05-13 19:52:06,982:INFO:Set up removing outliers.
2023-05-13 19:52:06,982:INFO:Set up imbalanced handling.
2023-05-13 19:52:06,982:INFO:Set up feature normalization.
2023-05-13 19:52:06,985:INFO:Set up column name cleaning.
2023-05-13 19:52:07,626:INFO:Finished creating preprocessing pipeline.
2023-05-13 19:52:07,693:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\camil\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('date_feature_extractor',
                 TransformerWrapper(exclude=None, include=['Fecha.Expedicion'],
                                    transformer=ExtractDateTimeFeatures(features=['day',
                                                                                  'month',
                                                                                  'year']))),
                ('nu...
                                    transformer=FixImbalancer(estimator=SMOTE(k_neighbors=5,
                                                                              n_jobs=None,
                                                                              random_state=None,
                                                                              sampling_strategy='auto')))),
                ('normalize',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False)
2023-05-13 19:52:07,693:INFO:Creating final display dataframe.
2023-05-13 19:52:07,975:INFO:Setup _display_container:                     Description             Value
0                    Session id               123
1                        Target            Target
2                   Target type            Binary
3                Target mapping        0: 0, 1: 1
4           Original data shape       (50001, 35)
5        Transformed data shape       (79575, 45)
6   Transformed train set shape       (64574, 45)
7    Transformed test set shape       (15001, 45)
8               Ignore features                 7
9              Ordinal features                 4
10             Numeric features                15
11                Date features                 1
12         Categorical features                11
13     Rows with missing values            100.0%
14                   Preprocess              True
15              Imputation type            simple
16           Numeric imputation              mean
17       Categorical imputation              mode
18     Maximum one-hot encoding                25
19              Encoding method              None
20     Remove multicollinearity              True
21  Multicollinearity threshold               0.9
22              Remove outliers              True
23           Outliers threshold              0.05
24                Fix imbalance              True
25         Fix imbalance method             SMOTE
26                    Normalize              True
27             Normalize method            zscore
28               Fold Generator             KFold
29                  Fold Number                10
30                     CPU Jobs                -1
31                      Use GPU             False
32               Log Experiment             False
33              Experiment Name  clf-default-name
34                          USI              3a4c
2023-05-13 19:52:08,087:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-13 19:52:08,087:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-13 19:52:08,180:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-13 19:52:08,180:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-13 19:52:08,181:INFO:setup() successfully completed in 2.73s...............
2023-05-13 19:52:08,244:INFO:Initializing compare_models()
2023-05-13 19:52:08,244:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001C888B22490>, include=None, fold=None, round=4, cross_validation=True, sort=F1, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x000001C888B22490>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'F1', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2023-05-13 19:52:08,244:INFO:Checking exceptions
2023-05-13 19:52:08,260:INFO:Preparing display monitor
2023-05-13 19:52:08,304:INFO:Initializing Logistic Regression
2023-05-13 19:52:08,304:INFO:Total runtime is 1.6629695892333984e-05 minutes
2023-05-13 19:52:08,311:INFO:SubProcess create_model() called ==================================
2023-05-13 19:52:08,312:INFO:Initializing create_model()
2023-05-13 19:52:08,312:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001C888B22490>, estimator=lr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001C88930E1F0>, model_only=True, return_train_score=False, kwargs={})
2023-05-13 19:52:08,312:INFO:Checking exceptions
2023-05-13 19:52:08,312:INFO:Importing libraries
2023-05-13 19:52:08,312:INFO:Copying training dataset
2023-05-13 19:52:08,341:INFO:Defining folds
2023-05-13 19:52:08,341:INFO:Declaring metric variables
2023-05-13 19:52:08,347:INFO:Importing untrained model
2023-05-13 19:52:08,355:INFO:Logistic Regression Imported successfully
2023-05-13 19:52:08,368:INFO:Starting cross validation
2023-05-13 19:52:08,374:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-05-13 19:52:22,000:INFO:Calculating mean and std
2023-05-13 19:52:22,001:INFO:Creating metrics dataframe
2023-05-13 19:52:22,655:INFO:Uploading results into container
2023-05-13 19:52:22,657:INFO:Uploading model into container now
2023-05-13 19:52:22,658:INFO:_master_model_container: 1
2023-05-13 19:52:22,659:INFO:_display_container: 2
2023-05-13 19:52:22,660:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2023-05-13 19:52:22,660:INFO:create_model() successfully completed......................................
2023-05-13 19:52:22,740:INFO:SubProcess create_model() end ==================================
2023-05-13 19:52:22,740:INFO:Creating metrics dataframe
2023-05-13 19:52:22,751:INFO:Initializing K Neighbors Classifier
2023-05-13 19:52:22,751:INFO:Total runtime is 0.24079962571461996 minutes
2023-05-13 19:52:22,755:INFO:SubProcess create_model() called ==================================
2023-05-13 19:52:22,756:INFO:Initializing create_model()
2023-05-13 19:52:22,756:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001C888B22490>, estimator=knn, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001C88930E1F0>, model_only=True, return_train_score=False, kwargs={})
2023-05-13 19:52:22,756:INFO:Checking exceptions
2023-05-13 19:52:22,757:INFO:Importing libraries
2023-05-13 19:52:22,757:INFO:Copying training dataset
2023-05-13 19:52:22,782:INFO:Defining folds
2023-05-13 19:52:22,783:INFO:Declaring metric variables
2023-05-13 19:52:22,790:INFO:Importing untrained model
2023-05-13 19:52:22,796:INFO:K Neighbors Classifier Imported successfully
2023-05-13 19:52:22,810:INFO:Starting cross validation
2023-05-13 19:52:22,813:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-05-13 19:52:35,585:INFO:Calculating mean and std
2023-05-13 19:52:35,587:INFO:Creating metrics dataframe
2023-05-13 19:52:36,245:INFO:Uploading results into container
2023-05-13 19:52:36,245:INFO:Uploading model into container now
2023-05-13 19:52:36,246:INFO:_master_model_container: 2
2023-05-13 19:52:36,246:INFO:_display_container: 2
2023-05-13 19:52:36,246:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2023-05-13 19:52:36,246:INFO:create_model() successfully completed......................................
2023-05-13 19:52:36,326:INFO:SubProcess create_model() end ==================================
2023-05-13 19:52:36,326:INFO:Creating metrics dataframe
2023-05-13 19:52:36,341:INFO:Initializing Naive Bayes
2023-05-13 19:52:36,341:INFO:Total runtime is 0.46729505856831866 minutes
2023-05-13 19:52:36,346:INFO:SubProcess create_model() called ==================================
2023-05-13 19:52:36,347:INFO:Initializing create_model()
2023-05-13 19:52:36,347:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001C888B22490>, estimator=nb, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001C88930E1F0>, model_only=True, return_train_score=False, kwargs={})
2023-05-13 19:52:36,348:INFO:Checking exceptions
2023-05-13 19:52:36,348:INFO:Importing libraries
2023-05-13 19:52:36,348:INFO:Copying training dataset
2023-05-13 19:52:36,369:INFO:Defining folds
2023-05-13 19:52:36,369:INFO:Declaring metric variables
2023-05-13 19:52:36,375:INFO:Importing untrained model
2023-05-13 19:52:36,381:INFO:Naive Bayes Imported successfully
2023-05-13 19:52:36,393:INFO:Starting cross validation
2023-05-13 19:52:36,398:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-05-13 19:52:43,174:INFO:Calculating mean and std
2023-05-13 19:52:43,177:INFO:Creating metrics dataframe
2023-05-13 19:52:43,847:INFO:Uploading results into container
2023-05-13 19:52:43,848:INFO:Uploading model into container now
2023-05-13 19:52:43,849:INFO:_master_model_container: 3
2023-05-13 19:52:43,849:INFO:_display_container: 2
2023-05-13 19:52:43,851:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2023-05-13 19:52:43,851:INFO:create_model() successfully completed......................................
2023-05-13 19:52:43,929:INFO:SubProcess create_model() end ==================================
2023-05-13 19:52:43,929:INFO:Creating metrics dataframe
2023-05-13 19:52:43,942:INFO:Initializing Decision Tree Classifier
2023-05-13 19:52:43,942:INFO:Total runtime is 0.5939739386240641 minutes
2023-05-13 19:52:43,948:INFO:SubProcess create_model() called ==================================
2023-05-13 19:52:43,949:INFO:Initializing create_model()
2023-05-13 19:52:43,949:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001C888B22490>, estimator=dt, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001C88930E1F0>, model_only=True, return_train_score=False, kwargs={})
2023-05-13 19:52:43,950:INFO:Checking exceptions
2023-05-13 19:52:43,950:INFO:Importing libraries
2023-05-13 19:52:43,950:INFO:Copying training dataset
2023-05-13 19:52:43,972:INFO:Defining folds
2023-05-13 19:52:43,972:INFO:Declaring metric variables
2023-05-13 19:52:43,977:INFO:Importing untrained model
2023-05-13 19:52:43,984:INFO:Decision Tree Classifier Imported successfully
2023-05-13 19:52:43,994:INFO:Starting cross validation
2023-05-13 19:52:43,998:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-05-13 19:52:50,675:INFO:Calculating mean and std
2023-05-13 19:52:50,678:INFO:Creating metrics dataframe
2023-05-13 19:52:51,338:INFO:Uploading results into container
2023-05-13 19:52:51,339:INFO:Uploading model into container now
2023-05-13 19:52:51,339:INFO:_master_model_container: 4
2023-05-13 19:52:51,339:INFO:_display_container: 2
2023-05-13 19:52:51,339:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=123, splitter='best')
2023-05-13 19:52:51,339:INFO:create_model() successfully completed......................................
2023-05-13 19:52:51,419:INFO:SubProcess create_model() end ==================================
2023-05-13 19:52:51,420:INFO:Creating metrics dataframe
2023-05-13 19:52:51,434:INFO:Initializing SVM - Linear Kernel
2023-05-13 19:52:51,435:INFO:Total runtime is 0.7188576141993205 minutes
2023-05-13 19:52:51,441:INFO:SubProcess create_model() called ==================================
2023-05-13 19:52:51,441:INFO:Initializing create_model()
2023-05-13 19:52:51,441:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001C888B22490>, estimator=svm, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001C88930E1F0>, model_only=True, return_train_score=False, kwargs={})
2023-05-13 19:52:51,441:INFO:Checking exceptions
2023-05-13 19:52:51,442:INFO:Importing libraries
2023-05-13 19:52:51,442:INFO:Copying training dataset
2023-05-13 19:52:51,463:INFO:Defining folds
2023-05-13 19:52:51,463:INFO:Declaring metric variables
2023-05-13 19:52:51,470:INFO:Importing untrained model
2023-05-13 19:52:51,477:INFO:SVM - Linear Kernel Imported successfully
2023-05-13 19:52:51,487:INFO:Starting cross validation
2023-05-13 19:52:51,493:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-05-13 19:52:52,649:WARNING:c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-05-13 19:52:52,677:WARNING:c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-05-13 19:52:52,711:WARNING:c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-05-13 19:52:52,722:WARNING:c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-05-13 19:52:52,728:WARNING:c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-05-13 19:52:52,728:WARNING:c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-05-13 19:52:52,747:WARNING:c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-05-13 19:52:52,750:WARNING:c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-05-13 19:52:54,673:WARNING:c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-05-13 19:52:54,698:WARNING:c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-05-13 19:52:58,120:INFO:Calculating mean and std
2023-05-13 19:52:58,121:INFO:Creating metrics dataframe
2023-05-13 19:52:58,771:INFO:Uploading results into container
2023-05-13 19:52:58,772:INFO:Uploading model into container now
2023-05-13 19:52:58,773:INFO:_master_model_container: 5
2023-05-13 19:52:58,773:INFO:_display_container: 2
2023-05-13 19:52:58,773:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=123, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2023-05-13 19:52:58,774:INFO:create_model() successfully completed......................................
2023-05-13 19:52:58,852:INFO:SubProcess create_model() end ==================================
2023-05-13 19:52:58,853:INFO:Creating metrics dataframe
2023-05-13 19:52:58,868:INFO:Initializing Ridge Classifier
2023-05-13 19:52:58,868:INFO:Total runtime is 0.8427448948224385 minutes
2023-05-13 19:52:58,873:INFO:SubProcess create_model() called ==================================
2023-05-13 19:52:58,873:INFO:Initializing create_model()
2023-05-13 19:52:58,874:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001C888B22490>, estimator=ridge, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001C88930E1F0>, model_only=True, return_train_score=False, kwargs={})
2023-05-13 19:52:58,874:INFO:Checking exceptions
2023-05-13 19:52:58,874:INFO:Importing libraries
2023-05-13 19:52:58,874:INFO:Copying training dataset
2023-05-13 19:52:58,896:INFO:Defining folds
2023-05-13 19:52:58,896:INFO:Declaring metric variables
2023-05-13 19:52:58,900:INFO:Importing untrained model
2023-05-13 19:52:58,909:INFO:Ridge Classifier Imported successfully
2023-05-13 19:52:58,918:INFO:Starting cross validation
2023-05-13 19:52:58,923:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-05-13 19:53:00,089:WARNING:c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-05-13 19:53:00,095:WARNING:c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-05-13 19:53:00,101:WARNING:c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-05-13 19:53:00,132:WARNING:c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-05-13 19:53:00,176:WARNING:c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-05-13 19:53:00,178:WARNING:c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-05-13 19:53:00,200:WARNING:c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-05-13 19:53:00,209:WARNING:c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-05-13 19:53:02,189:WARNING:c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-05-13 19:53:02,222:WARNING:c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-05-13 19:53:05,743:INFO:Calculating mean and std
2023-05-13 19:53:05,745:INFO:Creating metrics dataframe
2023-05-13 19:53:06,409:INFO:Uploading results into container
2023-05-13 19:53:06,411:INFO:Uploading model into container now
2023-05-13 19:53:06,411:INFO:_master_model_container: 6
2023-05-13 19:53:06,412:INFO:_display_container: 2
2023-05-13 19:53:06,412:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=123, solver='auto',
                tol=0.0001)
2023-05-13 19:53:06,412:INFO:create_model() successfully completed......................................
2023-05-13 19:53:06,491:INFO:SubProcess create_model() end ==================================
2023-05-13 19:53:06,491:INFO:Creating metrics dataframe
2023-05-13 19:53:06,506:INFO:Initializing Random Forest Classifier
2023-05-13 19:53:06,506:INFO:Total runtime is 0.9700429916381835 minutes
2023-05-13 19:53:06,512:INFO:SubProcess create_model() called ==================================
2023-05-13 19:53:06,512:INFO:Initializing create_model()
2023-05-13 19:53:06,512:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001C888B22490>, estimator=rf, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001C88930E1F0>, model_only=True, return_train_score=False, kwargs={})
2023-05-13 19:53:06,512:INFO:Checking exceptions
2023-05-13 19:53:06,512:INFO:Importing libraries
2023-05-13 19:53:06,513:INFO:Copying training dataset
2023-05-13 19:53:06,535:INFO:Defining folds
2023-05-13 19:53:06,536:INFO:Declaring metric variables
2023-05-13 19:53:06,541:INFO:Importing untrained model
2023-05-13 19:53:06,547:INFO:Random Forest Classifier Imported successfully
2023-05-13 19:53:06,557:INFO:Starting cross validation
2023-05-13 19:53:06,562:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-05-13 19:53:14,127:INFO:Calculating mean and std
2023-05-13 19:53:14,128:INFO:Creating metrics dataframe
2023-05-13 19:53:14,781:INFO:Uploading results into container
2023-05-13 19:53:14,782:INFO:Uploading model into container now
2023-05-13 19:53:14,782:INFO:_master_model_container: 7
2023-05-13 19:53:14,782:INFO:_display_container: 2
2023-05-13 19:53:14,783:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=123, verbose=0, warm_start=False)
2023-05-13 19:53:14,783:INFO:create_model() successfully completed......................................
2023-05-13 19:53:14,865:INFO:SubProcess create_model() end ==================================
2023-05-13 19:53:14,866:INFO:Creating metrics dataframe
2023-05-13 19:53:14,881:INFO:Initializing Quadratic Discriminant Analysis
2023-05-13 19:53:14,881:INFO:Total runtime is 1.1096263488133749 minutes
2023-05-13 19:53:14,887:INFO:SubProcess create_model() called ==================================
2023-05-13 19:53:14,887:INFO:Initializing create_model()
2023-05-13 19:53:14,887:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001C888B22490>, estimator=qda, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001C88930E1F0>, model_only=True, return_train_score=False, kwargs={})
2023-05-13 19:53:14,887:INFO:Checking exceptions
2023-05-13 19:53:14,887:INFO:Importing libraries
2023-05-13 19:53:14,887:INFO:Copying training dataset
2023-05-13 19:53:14,910:INFO:Defining folds
2023-05-13 19:53:14,910:INFO:Declaring metric variables
2023-05-13 19:53:14,916:INFO:Importing untrained model
2023-05-13 19:53:14,922:INFO:Quadratic Discriminant Analysis Imported successfully
2023-05-13 19:53:14,933:INFO:Starting cross validation
2023-05-13 19:53:14,937:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-05-13 19:53:21,689:INFO:Calculating mean and std
2023-05-13 19:53:21,690:INFO:Creating metrics dataframe
2023-05-13 19:53:22,356:INFO:Uploading results into container
2023-05-13 19:53:22,357:INFO:Uploading model into container now
2023-05-13 19:53:22,359:INFO:_master_model_container: 8
2023-05-13 19:53:22,359:INFO:_display_container: 2
2023-05-13 19:53:22,359:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2023-05-13 19:53:22,359:INFO:create_model() successfully completed......................................
2023-05-13 19:53:22,435:INFO:SubProcess create_model() end ==================================
2023-05-13 19:53:22,435:INFO:Creating metrics dataframe
2023-05-13 19:53:22,452:INFO:Initializing Ada Boost Classifier
2023-05-13 19:53:22,452:INFO:Total runtime is 1.235809854666392 minutes
2023-05-13 19:53:22,458:INFO:SubProcess create_model() called ==================================
2023-05-13 19:53:22,459:INFO:Initializing create_model()
2023-05-13 19:53:22,460:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001C888B22490>, estimator=ada, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001C88930E1F0>, model_only=True, return_train_score=False, kwargs={})
2023-05-13 19:53:22,460:INFO:Checking exceptions
2023-05-13 19:53:22,460:INFO:Importing libraries
2023-05-13 19:53:22,460:INFO:Copying training dataset
2023-05-13 19:53:22,482:INFO:Defining folds
2023-05-13 19:53:22,482:INFO:Declaring metric variables
2023-05-13 19:53:22,488:INFO:Importing untrained model
2023-05-13 19:53:22,494:INFO:Ada Boost Classifier Imported successfully
2023-05-13 19:53:22,504:INFO:Starting cross validation
2023-05-13 19:53:22,510:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-05-13 19:53:34,746:INFO:Calculating mean and std
2023-05-13 19:53:34,748:INFO:Creating metrics dataframe
2023-05-13 19:53:35,455:INFO:Uploading results into container
2023-05-13 19:53:35,456:INFO:Uploading model into container now
2023-05-13 19:53:35,457:INFO:_master_model_container: 9
2023-05-13 19:53:35,458:INFO:_display_container: 2
2023-05-13 19:53:35,458:INFO:AdaBoostClassifier(algorithm='SAMME.R', base_estimator='deprecated',
                   estimator=None, learning_rate=1.0, n_estimators=50,
                   random_state=123)
2023-05-13 19:53:35,459:INFO:create_model() successfully completed......................................
2023-05-13 19:53:35,536:INFO:SubProcess create_model() end ==================================
2023-05-13 19:53:35,537:INFO:Creating metrics dataframe
2023-05-13 19:53:35,552:INFO:Initializing Gradient Boosting Classifier
2023-05-13 19:53:35,552:INFO:Total runtime is 1.4541439215342205 minutes
2023-05-13 19:53:35,556:INFO:SubProcess create_model() called ==================================
2023-05-13 19:53:35,557:INFO:Initializing create_model()
2023-05-13 19:53:35,557:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001C888B22490>, estimator=gbc, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001C88930E1F0>, model_only=True, return_train_score=False, kwargs={})
2023-05-13 19:53:35,558:INFO:Checking exceptions
2023-05-13 19:53:35,558:INFO:Importing libraries
2023-05-13 19:53:35,558:INFO:Copying training dataset
2023-05-13 19:53:35,580:INFO:Defining folds
2023-05-13 19:53:35,580:INFO:Declaring metric variables
2023-05-13 19:53:35,589:INFO:Importing untrained model
2023-05-13 19:53:35,594:INFO:Gradient Boosting Classifier Imported successfully
2023-05-13 19:53:35,604:INFO:Starting cross validation
2023-05-13 19:53:35,609:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-05-13 19:54:27,242:WARNING:c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 0.57s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-05-13 19:54:27,439:WARNING:c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 0.53s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-05-13 19:54:27,500:WARNING:c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 0.54s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-05-13 19:55:02,645:INFO:Calculating mean and std
2023-05-13 19:55:02,648:INFO:Creating metrics dataframe
2023-05-13 19:55:03,316:INFO:Uploading results into container
2023-05-13 19:55:03,317:INFO:Uploading model into container now
2023-05-13 19:55:03,317:INFO:_master_model_container: 10
2023-05-13 19:55:03,317:INFO:_display_container: 2
2023-05-13 19:55:03,318:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=123, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2023-05-13 19:55:03,318:INFO:create_model() successfully completed......................................
2023-05-13 19:55:03,402:INFO:SubProcess create_model() end ==================================
2023-05-13 19:55:03,402:INFO:Creating metrics dataframe
2023-05-13 19:55:03,419:INFO:Initializing Linear Discriminant Analysis
2023-05-13 19:55:03,419:INFO:Total runtime is 2.91860648393631 minutes
2023-05-13 19:55:03,425:INFO:SubProcess create_model() called ==================================
2023-05-13 19:55:03,426:INFO:Initializing create_model()
2023-05-13 19:55:03,426:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001C888B22490>, estimator=lda, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001C88930E1F0>, model_only=True, return_train_score=False, kwargs={})
2023-05-13 19:55:03,426:INFO:Checking exceptions
2023-05-13 19:55:03,426:INFO:Importing libraries
2023-05-13 19:55:03,426:INFO:Copying training dataset
2023-05-13 19:55:03,449:INFO:Defining folds
2023-05-13 19:55:03,449:INFO:Declaring metric variables
2023-05-13 19:55:03,454:INFO:Importing untrained model
2023-05-13 19:55:03,460:INFO:Linear Discriminant Analysis Imported successfully
2023-05-13 19:55:03,470:INFO:Starting cross validation
2023-05-13 19:55:03,476:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-05-13 19:55:12,876:INFO:Calculating mean and std
2023-05-13 19:55:12,877:INFO:Creating metrics dataframe
2023-05-13 19:55:13,564:INFO:Uploading results into container
2023-05-13 19:55:13,565:INFO:Uploading model into container now
2023-05-13 19:55:13,566:INFO:_master_model_container: 11
2023-05-13 19:55:13,567:INFO:_display_container: 2
2023-05-13 19:55:13,567:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2023-05-13 19:55:13,567:INFO:create_model() successfully completed......................................
2023-05-13 19:55:13,645:INFO:SubProcess create_model() end ==================================
2023-05-13 19:55:13,645:INFO:Creating metrics dataframe
2023-05-13 19:55:13,665:INFO:Initializing Extra Trees Classifier
2023-05-13 19:55:13,665:INFO:Total runtime is 3.089361691474915 minutes
2023-05-13 19:55:13,669:INFO:SubProcess create_model() called ==================================
2023-05-13 19:55:13,670:INFO:Initializing create_model()
2023-05-13 19:55:13,670:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001C888B22490>, estimator=et, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001C88930E1F0>, model_only=True, return_train_score=False, kwargs={})
2023-05-13 19:55:13,671:INFO:Checking exceptions
2023-05-13 19:55:13,671:INFO:Importing libraries
2023-05-13 19:55:13,671:INFO:Copying training dataset
2023-05-13 19:55:13,693:INFO:Defining folds
2023-05-13 19:55:13,693:INFO:Declaring metric variables
2023-05-13 19:55:13,700:INFO:Importing untrained model
2023-05-13 19:55:13,706:INFO:Extra Trees Classifier Imported successfully
2023-05-13 19:55:13,717:INFO:Starting cross validation
2023-05-13 19:55:13,719:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-05-13 19:55:32,836:WARNING:c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 1.49s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  fitted_estimator = self._memory_fit(

2023-05-13 19:55:33,670:WARNING:c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 0.79s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  fitted_estimator = self._memory_fit(

2023-05-13 19:55:34,928:WARNING:c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 0.52s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-05-13 19:55:35,016:WARNING:c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 0.56s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-05-13 19:55:35,089:WARNING:c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 0.55s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-05-13 19:55:35,225:WARNING:c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 0.54s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-05-13 19:55:35,307:WARNING:c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 0.57s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-05-13 19:55:35,396:WARNING:c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 0.62s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-05-13 19:55:44,859:INFO:Calculating mean and std
2023-05-13 19:55:44,861:INFO:Creating metrics dataframe
2023-05-13 19:55:45,566:INFO:Uploading results into container
2023-05-13 19:55:45,568:INFO:Uploading model into container now
2023-05-13 19:55:45,569:INFO:_master_model_container: 12
2023-05-13 19:55:45,569:INFO:_display_container: 2
2023-05-13 19:55:45,570:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     n_estimators=100, n_jobs=-1, oob_score=False,
                     random_state=123, verbose=0, warm_start=False)
2023-05-13 19:55:45,571:INFO:create_model() successfully completed......................................
2023-05-13 19:55:45,647:INFO:SubProcess create_model() end ==================================
2023-05-13 19:55:45,647:INFO:Creating metrics dataframe
2023-05-13 19:55:45,663:INFO:Initializing Light Gradient Boosting Machine
2023-05-13 19:55:45,663:INFO:Total runtime is 3.6226698517799383 minutes
2023-05-13 19:55:45,668:INFO:SubProcess create_model() called ==================================
2023-05-13 19:55:45,669:INFO:Initializing create_model()
2023-05-13 19:55:45,670:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001C888B22490>, estimator=lightgbm, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001C88930E1F0>, model_only=True, return_train_score=False, kwargs={})
2023-05-13 19:55:45,670:INFO:Checking exceptions
2023-05-13 19:55:45,670:INFO:Importing libraries
2023-05-13 19:55:45,671:INFO:Copying training dataset
2023-05-13 19:55:45,692:INFO:Defining folds
2023-05-13 19:55:45,692:INFO:Declaring metric variables
2023-05-13 19:55:45,698:INFO:Importing untrained model
2023-05-13 19:55:45,705:INFO:Light Gradient Boosting Machine Imported successfully
2023-05-13 19:55:45,716:INFO:Starting cross validation
2023-05-13 19:55:45,720:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-05-13 19:55:56,797:INFO:Calculating mean and std
2023-05-13 19:55:56,798:INFO:Creating metrics dataframe
2023-05-13 19:55:57,506:INFO:Uploading results into container
2023-05-13 19:55:57,507:INFO:Uploading model into container now
2023-05-13 19:55:57,510:INFO:_master_model_container: 13
2023-05-13 19:55:57,511:INFO:_display_container: 2
2023-05-13 19:55:57,512:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=123, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0)
2023-05-13 19:55:57,513:INFO:create_model() successfully completed......................................
2023-05-13 19:55:57,592:INFO:SubProcess create_model() end ==================================
2023-05-13 19:55:57,592:INFO:Creating metrics dataframe
2023-05-13 19:55:57,612:INFO:Initializing Dummy Classifier
2023-05-13 19:55:57,612:INFO:Total runtime is 3.8218209028244026 minutes
2023-05-13 19:55:57,618:INFO:SubProcess create_model() called ==================================
2023-05-13 19:55:57,619:INFO:Initializing create_model()
2023-05-13 19:55:57,619:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001C888B22490>, estimator=dummy, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001C88930E1F0>, model_only=True, return_train_score=False, kwargs={})
2023-05-13 19:55:57,620:INFO:Checking exceptions
2023-05-13 19:55:57,620:INFO:Importing libraries
2023-05-13 19:55:57,620:INFO:Copying training dataset
2023-05-13 19:55:57,642:INFO:Defining folds
2023-05-13 19:55:57,642:INFO:Declaring metric variables
2023-05-13 19:55:57,648:INFO:Importing untrained model
2023-05-13 19:55:57,654:INFO:Dummy Classifier Imported successfully
2023-05-13 19:55:57,664:INFO:Starting cross validation
2023-05-13 19:55:57,667:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-05-13 19:55:59,458:WARNING:c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-13 19:55:59,504:WARNING:c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-13 19:55:59,541:WARNING:c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-13 19:55:59,619:WARNING:c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-13 19:55:59,652:WARNING:c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-13 19:55:59,668:WARNING:c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-13 19:55:59,672:WARNING:c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-13 19:55:59,733:WARNING:c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-13 19:56:02,073:WARNING:c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-13 19:56:02,080:WARNING:c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-13 19:56:05,373:INFO:Calculating mean and std
2023-05-13 19:56:05,375:INFO:Creating metrics dataframe
2023-05-13 19:56:06,106:INFO:Uploading results into container
2023-05-13 19:56:06,107:INFO:Uploading model into container now
2023-05-13 19:56:06,108:INFO:_master_model_container: 14
2023-05-13 19:56:06,108:INFO:_display_container: 2
2023-05-13 19:56:06,109:INFO:DummyClassifier(constant=None, random_state=123, strategy='prior')
2023-05-13 19:56:06,109:INFO:create_model() successfully completed......................................
2023-05-13 19:56:06,188:INFO:SubProcess create_model() end ==================================
2023-05-13 19:56:06,188:INFO:Creating metrics dataframe
2023-05-13 19:56:06,222:INFO:Initializing create_model()
2023-05-13 19:56:06,223:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001C888B22490>, estimator=LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=123, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-05-13 19:56:06,223:INFO:Checking exceptions
2023-05-13 19:56:06,224:INFO:Importing libraries
2023-05-13 19:56:06,224:INFO:Copying training dataset
2023-05-13 19:56:06,247:INFO:Defining folds
2023-05-13 19:56:06,247:INFO:Declaring metric variables
2023-05-13 19:56:06,247:INFO:Importing untrained model
2023-05-13 19:56:06,247:INFO:Declaring custom model
2023-05-13 19:56:06,248:INFO:Light Gradient Boosting Machine Imported successfully
2023-05-13 19:56:06,251:INFO:Cross validation set to False
2023-05-13 19:56:06,251:INFO:Fitting Model
2023-05-13 19:56:07,497:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=123, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0)
2023-05-13 19:56:07,497:INFO:create_model() successfully completed......................................
2023-05-13 19:56:07,626:INFO:_master_model_container: 14
2023-05-13 19:56:07,626:INFO:_display_container: 2
2023-05-13 19:56:07,627:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=123, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0)
2023-05-13 19:56:07,627:INFO:compare_models() successfully completed......................................
2023-05-13 19:57:25,351:INFO:Initializing plot_model()
2023-05-13 19:57:25,352:INFO:plot_model(plot=auc, fold=None, use_train_data=False, verbose=True, display=None, display_format=None, estimator=LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=123, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001C888B22490>, system=True)
2023-05-13 19:57:25,352:INFO:Checking exceptions
2023-05-13 19:57:25,367:INFO:Preloading libraries
2023-05-13 19:57:25,377:INFO:Copying training dataset
2023-05-13 19:57:25,377:INFO:Plot type: auc
2023-05-13 19:57:25,761:INFO:Fitting Model
2023-05-13 19:57:25,763:INFO:Scoring test/hold-out set
2023-05-13 19:57:26,290:INFO:Visual Rendered Successfully
2023-05-13 19:57:26,370:INFO:plot_model() successfully completed......................................
2023-05-13 19:57:26,371:INFO:Initializing plot_model()
2023-05-13 19:57:26,371:INFO:plot_model(plot=confusion_matrix, fold=None, use_train_data=False, verbose=True, display=None, display_format=None, estimator=LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=123, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001C888B22490>, system=True)
2023-05-13 19:57:26,371:INFO:Checking exceptions
2023-05-13 19:57:26,383:INFO:Preloading libraries
2023-05-13 19:57:26,394:INFO:Copying training dataset
2023-05-13 19:57:26,394:INFO:Plot type: confusion_matrix
2023-05-13 19:57:26,736:INFO:Fitting Model
2023-05-13 19:57:26,737:INFO:Scoring test/hold-out set
2023-05-13 19:57:27,049:INFO:Visual Rendered Successfully
2023-05-13 19:57:27,141:INFO:plot_model() successfully completed......................................
2023-05-13 19:57:27,142:INFO:Initializing plot_model()
2023-05-13 19:57:27,142:INFO:plot_model(plot=feature, fold=None, use_train_data=False, verbose=True, display=None, display_format=None, estimator=LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=123, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001C888B22490>, system=True)
2023-05-13 19:57:27,143:INFO:Checking exceptions
2023-05-13 19:57:27,154:INFO:Preloading libraries
2023-05-13 19:57:27,165:INFO:Copying training dataset
2023-05-13 19:57:27,166:INFO:Plot type: feature
2023-05-13 19:57:27,166:WARNING:No coef_ found. Trying feature_importances_
2023-05-13 19:57:27,628:INFO:Visual Rendered Successfully
2023-05-13 19:57:27,717:INFO:plot_model() successfully completed......................................
2023-05-13 20:02:41,880:INFO:Initializing compare_models()
2023-05-13 20:02:41,880:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001C888B22490>, include=['lightgbm', 'dt', 'ada', 'rf', 'lr', 'svm'], fold=None, round=4, cross_validation=True, sort=F1, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x000001C888B22490>, 'include': ['lightgbm', 'dt', 'ada', 'rf', 'lr', 'svm'], 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'F1', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2023-05-13 20:02:41,880:INFO:Checking exceptions
2023-05-13 20:02:41,892:INFO:Preparing display monitor
2023-05-13 20:02:41,934:INFO:Initializing Light Gradient Boosting Machine
2023-05-13 20:02:41,934:INFO:Total runtime is 0.0 minutes
2023-05-13 20:02:41,940:INFO:SubProcess create_model() called ==================================
2023-05-13 20:02:41,941:INFO:Initializing create_model()
2023-05-13 20:02:41,941:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001C888B22490>, estimator=lightgbm, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001C888B8E370>, model_only=True, return_train_score=False, kwargs={})
2023-05-13 20:02:41,941:INFO:Checking exceptions
2023-05-13 20:02:41,941:INFO:Importing libraries
2023-05-13 20:02:41,941:INFO:Copying training dataset
2023-05-13 20:02:41,967:INFO:Defining folds
2023-05-13 20:02:41,968:INFO:Declaring metric variables
2023-05-13 20:02:41,976:INFO:Importing untrained model
2023-05-13 20:02:41,984:INFO:Light Gradient Boosting Machine Imported successfully
2023-05-13 20:02:41,998:INFO:Starting cross validation
2023-05-13 20:02:42,002:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-05-13 20:02:55,768:INFO:Calculating mean and std
2023-05-13 20:02:55,769:INFO:Creating metrics dataframe
2023-05-13 20:02:56,485:INFO:Uploading results into container
2023-05-13 20:02:56,486:INFO:Uploading model into container now
2023-05-13 20:02:56,486:INFO:_master_model_container: 15
2023-05-13 20:02:56,486:INFO:_display_container: 3
2023-05-13 20:02:56,487:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=123, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0)
2023-05-13 20:02:56,487:INFO:create_model() successfully completed......................................
2023-05-13 20:02:56,572:INFO:SubProcess create_model() end ==================================
2023-05-13 20:02:56,572:INFO:Creating metrics dataframe
2023-05-13 20:02:56,588:INFO:Initializing Decision Tree Classifier
2023-05-13 20:02:56,588:INFO:Total runtime is 0.2442348639170329 minutes
2023-05-13 20:02:56,593:INFO:SubProcess create_model() called ==================================
2023-05-13 20:02:56,594:INFO:Initializing create_model()
2023-05-13 20:02:56,594:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001C888B22490>, estimator=dt, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001C888B8E370>, model_only=True, return_train_score=False, kwargs={})
2023-05-13 20:02:56,595:INFO:Checking exceptions
2023-05-13 20:02:56,595:INFO:Importing libraries
2023-05-13 20:02:56,595:INFO:Copying training dataset
2023-05-13 20:02:56,616:INFO:Defining folds
2023-05-13 20:02:56,616:INFO:Declaring metric variables
2023-05-13 20:02:56,622:INFO:Importing untrained model
2023-05-13 20:02:56,629:INFO:Decision Tree Classifier Imported successfully
2023-05-13 20:02:56,639:INFO:Starting cross validation
2023-05-13 20:02:56,642:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-05-13 20:03:03,779:INFO:Calculating mean and std
2023-05-13 20:03:03,780:INFO:Creating metrics dataframe
2023-05-13 20:03:04,519:INFO:Uploading results into container
2023-05-13 20:03:04,520:INFO:Uploading model into container now
2023-05-13 20:03:04,520:INFO:_master_model_container: 16
2023-05-13 20:03:04,520:INFO:_display_container: 3
2023-05-13 20:03:04,521:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=123, splitter='best')
2023-05-13 20:03:04,521:INFO:create_model() successfully completed......................................
2023-05-13 20:03:04,601:INFO:SubProcess create_model() end ==================================
2023-05-13 20:03:04,601:INFO:Creating metrics dataframe
2023-05-13 20:03:04,616:INFO:Initializing Ada Boost Classifier
2023-05-13 20:03:04,616:INFO:Total runtime is 0.37803978522618614 minutes
2023-05-13 20:03:04,620:INFO:SubProcess create_model() called ==================================
2023-05-13 20:03:04,621:INFO:Initializing create_model()
2023-05-13 20:03:04,621:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001C888B22490>, estimator=ada, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001C888B8E370>, model_only=True, return_train_score=False, kwargs={})
2023-05-13 20:03:04,621:INFO:Checking exceptions
2023-05-13 20:03:04,621:INFO:Importing libraries
2023-05-13 20:03:04,621:INFO:Copying training dataset
2023-05-13 20:03:04,644:INFO:Defining folds
2023-05-13 20:03:04,644:INFO:Declaring metric variables
2023-05-13 20:03:04,649:INFO:Importing untrained model
2023-05-13 20:03:04,655:INFO:Ada Boost Classifier Imported successfully
2023-05-13 20:03:04,665:INFO:Starting cross validation
2023-05-13 20:03:04,668:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-05-13 20:03:12,135:INFO:Calculating mean and std
2023-05-13 20:03:12,136:INFO:Creating metrics dataframe
2023-05-13 20:03:12,857:INFO:Uploading results into container
2023-05-13 20:03:12,859:INFO:Uploading model into container now
2023-05-13 20:03:12,860:INFO:_master_model_container: 17
2023-05-13 20:03:12,861:INFO:_display_container: 3
2023-05-13 20:03:12,861:INFO:AdaBoostClassifier(algorithm='SAMME.R', base_estimator='deprecated',
                   estimator=None, learning_rate=1.0, n_estimators=50,
                   random_state=123)
2023-05-13 20:03:12,861:INFO:create_model() successfully completed......................................
2023-05-13 20:03:12,944:INFO:SubProcess create_model() end ==================================
2023-05-13 20:03:12,945:INFO:Creating metrics dataframe
2023-05-13 20:03:12,960:INFO:Initializing Random Forest Classifier
2023-05-13 20:03:12,960:INFO:Total runtime is 0.5170994639396668 minutes
2023-05-13 20:03:12,965:INFO:SubProcess create_model() called ==================================
2023-05-13 20:03:12,966:INFO:Initializing create_model()
2023-05-13 20:03:12,966:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001C888B22490>, estimator=rf, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001C888B8E370>, model_only=True, return_train_score=False, kwargs={})
2023-05-13 20:03:12,967:INFO:Checking exceptions
2023-05-13 20:03:12,967:INFO:Importing libraries
2023-05-13 20:03:12,967:INFO:Copying training dataset
2023-05-13 20:03:12,990:INFO:Defining folds
2023-05-13 20:03:12,990:INFO:Declaring metric variables
2023-05-13 20:03:12,997:INFO:Importing untrained model
2023-05-13 20:03:13,003:INFO:Random Forest Classifier Imported successfully
2023-05-13 20:03:13,014:INFO:Starting cross validation
2023-05-13 20:03:13,017:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-05-13 20:03:21,003:INFO:Calculating mean and std
2023-05-13 20:03:21,006:INFO:Creating metrics dataframe
2023-05-13 20:03:21,724:INFO:Uploading results into container
2023-05-13 20:03:21,725:INFO:Uploading model into container now
2023-05-13 20:03:21,726:INFO:_master_model_container: 18
2023-05-13 20:03:21,726:INFO:_display_container: 3
2023-05-13 20:03:21,727:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=123, verbose=0, warm_start=False)
2023-05-13 20:03:21,728:INFO:create_model() successfully completed......................................
2023-05-13 20:03:21,806:INFO:SubProcess create_model() end ==================================
2023-05-13 20:03:21,807:INFO:Creating metrics dataframe
2023-05-13 20:03:21,839:INFO:Initializing Logistic Regression
2023-05-13 20:03:21,839:INFO:Total runtime is 0.6650849302609761 minutes
2023-05-13 20:03:21,846:INFO:SubProcess create_model() called ==================================
2023-05-13 20:03:21,847:INFO:Initializing create_model()
2023-05-13 20:03:21,847:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001C888B22490>, estimator=lr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001C888B8E370>, model_only=True, return_train_score=False, kwargs={})
2023-05-13 20:03:21,847:INFO:Checking exceptions
2023-05-13 20:03:21,847:INFO:Importing libraries
2023-05-13 20:03:21,848:INFO:Copying training dataset
2023-05-13 20:03:21,873:INFO:Defining folds
2023-05-13 20:03:21,873:INFO:Declaring metric variables
2023-05-13 20:03:21,880:INFO:Importing untrained model
2023-05-13 20:03:21,886:INFO:Logistic Regression Imported successfully
2023-05-13 20:03:21,897:INFO:Starting cross validation
2023-05-13 20:03:21,901:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-05-13 20:03:29,023:INFO:Calculating mean and std
2023-05-13 20:03:29,025:INFO:Creating metrics dataframe
2023-05-13 20:03:29,735:INFO:Uploading results into container
2023-05-13 20:03:29,736:INFO:Uploading model into container now
2023-05-13 20:03:29,736:INFO:_master_model_container: 19
2023-05-13 20:03:29,736:INFO:_display_container: 3
2023-05-13 20:03:29,737:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2023-05-13 20:03:29,737:INFO:create_model() successfully completed......................................
2023-05-13 20:03:29,818:INFO:SubProcess create_model() end ==================================
2023-05-13 20:03:29,818:INFO:Creating metrics dataframe
2023-05-13 20:03:29,833:INFO:Initializing SVM - Linear Kernel
2023-05-13 20:03:29,833:INFO:Total runtime is 0.7983233213424683 minutes
2023-05-13 20:03:29,839:INFO:SubProcess create_model() called ==================================
2023-05-13 20:03:29,839:INFO:Initializing create_model()
2023-05-13 20:03:29,839:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001C888B22490>, estimator=svm, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001C888B8E370>, model_only=True, return_train_score=False, kwargs={})
2023-05-13 20:03:29,841:INFO:Checking exceptions
2023-05-13 20:03:29,841:INFO:Importing libraries
2023-05-13 20:03:29,841:INFO:Copying training dataset
2023-05-13 20:03:29,864:INFO:Defining folds
2023-05-13 20:03:29,864:INFO:Declaring metric variables
2023-05-13 20:03:29,871:INFO:Importing untrained model
2023-05-13 20:03:29,876:INFO:SVM - Linear Kernel Imported successfully
2023-05-13 20:03:29,888:INFO:Starting cross validation
2023-05-13 20:03:29,892:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-05-13 20:03:31,054:WARNING:c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-05-13 20:03:31,070:WARNING:c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-05-13 20:03:31,078:WARNING:c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-05-13 20:03:31,078:WARNING:c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-05-13 20:03:31,090:WARNING:c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-05-13 20:03:31,099:WARNING:c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-05-13 20:03:31,123:WARNING:c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-05-13 20:03:31,157:WARNING:c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-05-13 20:03:33,160:WARNING:c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-05-13 20:03:33,171:WARNING:c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-05-13 20:03:36,893:INFO:Calculating mean and std
2023-05-13 20:03:36,894:INFO:Creating metrics dataframe
2023-05-13 20:03:37,611:INFO:Uploading results into container
2023-05-13 20:03:37,612:INFO:Uploading model into container now
2023-05-13 20:03:37,612:INFO:_master_model_container: 20
2023-05-13 20:03:37,612:INFO:_display_container: 3
2023-05-13 20:03:37,614:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=123, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2023-05-13 20:03:37,614:INFO:create_model() successfully completed......................................
2023-05-13 20:03:37,694:INFO:SubProcess create_model() end ==================================
2023-05-13 20:03:37,695:INFO:Creating metrics dataframe
2023-05-13 20:03:37,725:INFO:Initializing create_model()
2023-05-13 20:03:37,726:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001C888B22490>, estimator=LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=123, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-05-13 20:03:37,726:INFO:Checking exceptions
2023-05-13 20:03:37,729:INFO:Importing libraries
2023-05-13 20:03:37,729:INFO:Copying training dataset
2023-05-13 20:03:37,750:INFO:Defining folds
2023-05-13 20:03:37,750:INFO:Declaring metric variables
2023-05-13 20:03:37,750:INFO:Importing untrained model
2023-05-13 20:03:37,750:INFO:Declaring custom model
2023-05-13 20:03:37,751:INFO:Light Gradient Boosting Machine Imported successfully
2023-05-13 20:03:37,754:INFO:Cross validation set to False
2023-05-13 20:03:37,754:INFO:Fitting Model
2023-05-13 20:03:39,035:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=123, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0)
2023-05-13 20:03:39,035:INFO:create_model() successfully completed......................................
2023-05-13 20:03:39,149:INFO:_master_model_container: 20
2023-05-13 20:03:39,149:INFO:_display_container: 3
2023-05-13 20:03:39,150:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=123, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0)
2023-05-13 20:03:39,150:INFO:compare_models() successfully completed......................................
2023-05-13 20:16:15,479:INFO:Initializing create_model()
2023-05-13 20:16:15,480:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001C888B22490>, estimator=lightgbm, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-05-13 20:16:15,480:INFO:Checking exceptions
2023-05-13 20:16:15,505:INFO:Importing libraries
2023-05-13 20:16:15,505:INFO:Copying training dataset
2023-05-13 20:16:15,533:INFO:Defining folds
2023-05-13 20:16:15,534:INFO:Declaring metric variables
2023-05-13 20:16:15,539:INFO:Importing untrained model
2023-05-13 20:16:15,549:INFO:Light Gradient Boosting Machine Imported successfully
2023-05-13 20:16:15,560:INFO:Starting cross validation
2023-05-13 20:16:15,565:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-05-13 20:16:30,373:INFO:Calculating mean and std
2023-05-13 20:16:30,375:INFO:Creating metrics dataframe
2023-05-13 20:16:30,384:INFO:Finalizing model
2023-05-13 20:16:31,883:INFO:Uploading results into container
2023-05-13 20:16:31,884:INFO:Uploading model into container now
2023-05-13 20:16:31,899:INFO:_master_model_container: 21
2023-05-13 20:16:31,900:INFO:_display_container: 4
2023-05-13 20:16:31,901:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=123, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0)
2023-05-13 20:16:31,901:INFO:create_model() successfully completed......................................
2023-05-13 20:17:44,906:INFO:Initializing create_model()
2023-05-13 20:17:44,907:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001C888B22490>, estimator=dt, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-05-13 20:17:44,907:INFO:Checking exceptions
2023-05-13 20:17:44,931:INFO:Importing libraries
2023-05-13 20:17:44,931:INFO:Copying training dataset
2023-05-13 20:17:44,960:INFO:Defining folds
2023-05-13 20:17:44,961:INFO:Declaring metric variables
2023-05-13 20:17:44,968:INFO:Importing untrained model
2023-05-13 20:17:44,975:INFO:Decision Tree Classifier Imported successfully
2023-05-13 20:17:44,987:INFO:Starting cross validation
2023-05-13 20:17:44,994:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-05-13 20:17:52,513:INFO:Calculating mean and std
2023-05-13 20:17:52,514:INFO:Creating metrics dataframe
2023-05-13 20:17:52,523:INFO:Finalizing model
2023-05-13 20:17:53,876:INFO:Uploading results into container
2023-05-13 20:17:53,878:INFO:Uploading model into container now
2023-05-13 20:17:53,895:INFO:_master_model_container: 22
2023-05-13 20:17:53,895:INFO:_display_container: 5
2023-05-13 20:17:53,896:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=123, splitter='best')
2023-05-13 20:17:53,896:INFO:create_model() successfully completed......................................
2023-05-13 20:19:04,361:INFO:Initializing plot_model()
2023-05-13 20:19:04,361:INFO:plot_model(plot=auc, fold=None, use_train_data=False, verbose=True, display=None, display_format=None, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=123, splitter='best'), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001C888B22490>, system=True)
2023-05-13 20:19:04,361:INFO:Checking exceptions
2023-05-13 20:19:04,377:INFO:Preloading libraries
2023-05-13 20:19:04,378:INFO:Copying training dataset
2023-05-13 20:19:04,379:INFO:Plot type: auc
2023-05-13 20:19:04,738:INFO:Fitting Model
2023-05-13 20:19:04,742:WARNING:c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\sklearn\base.py:439: UserWarning: X does not have valid feature names, but DecisionTreeClassifier was fitted with feature names
  warnings.warn(

2023-05-13 20:19:04,743:INFO:Scoring test/hold-out set
2023-05-13 20:19:05,130:INFO:Visual Rendered Successfully
2023-05-13 20:19:05,212:INFO:plot_model() successfully completed......................................
2023-05-13 20:19:05,212:INFO:Initializing plot_model()
2023-05-13 20:19:05,212:INFO:plot_model(plot=confusion_matrix, fold=None, use_train_data=False, verbose=True, display=None, display_format=None, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=123, splitter='best'), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001C888B22490>, system=True)
2023-05-13 20:19:05,213:INFO:Checking exceptions
2023-05-13 20:19:05,226:INFO:Preloading libraries
2023-05-13 20:19:05,227:INFO:Copying training dataset
2023-05-13 20:19:05,227:INFO:Plot type: confusion_matrix
2023-05-13 20:19:05,529:INFO:Fitting Model
2023-05-13 20:19:05,529:WARNING:c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\sklearn\base.py:439: UserWarning: X does not have valid feature names, but DecisionTreeClassifier was fitted with feature names
  warnings.warn(

2023-05-13 20:19:05,530:INFO:Scoring test/hold-out set
2023-05-13 20:19:05,741:INFO:Visual Rendered Successfully
2023-05-13 20:19:05,844:INFO:plot_model() successfully completed......................................
2023-05-13 20:19:05,844:INFO:Initializing plot_model()
2023-05-13 20:19:05,844:INFO:plot_model(plot=feature, fold=None, use_train_data=False, verbose=True, display=None, display_format=None, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=123, splitter='best'), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001C888B22490>, system=True)
2023-05-13 20:19:05,844:INFO:Checking exceptions
2023-05-13 20:19:05,855:INFO:Preloading libraries
2023-05-13 20:19:05,856:INFO:Copying training dataset
2023-05-13 20:19:05,856:INFO:Plot type: feature
2023-05-13 20:19:05,857:WARNING:No coef_ found. Trying feature_importances_
2023-05-13 20:19:06,261:INFO:Visual Rendered Successfully
2023-05-13 20:19:06,351:INFO:plot_model() successfully completed......................................
2023-05-13 20:19:45,665:INFO:Initializing plot_model()
2023-05-13 20:19:45,665:INFO:plot_model(plot=auc, fold=None, use_train_data=False, verbose=True, display=None, display_format=None, estimator=LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=123, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001C888B22490>, system=True)
2023-05-13 20:19:45,665:INFO:Checking exceptions
2023-05-13 20:19:45,678:INFO:Preloading libraries
2023-05-13 20:19:45,691:INFO:Copying training dataset
2023-05-13 20:19:45,691:INFO:Plot type: auc
2023-05-13 20:19:46,039:INFO:Fitting Model
2023-05-13 20:19:46,041:INFO:Scoring test/hold-out set
2023-05-13 20:19:46,517:INFO:Visual Rendered Successfully
2023-05-13 20:19:46,600:INFO:plot_model() successfully completed......................................
2023-05-13 20:19:46,601:INFO:Initializing plot_model()
2023-05-13 20:19:46,601:INFO:plot_model(plot=confusion_matrix, fold=None, use_train_data=False, verbose=True, display=None, display_format=None, estimator=LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=123, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001C888B22490>, system=True)
2023-05-13 20:19:46,602:INFO:Checking exceptions
2023-05-13 20:19:46,613:INFO:Preloading libraries
2023-05-13 20:19:46,625:INFO:Copying training dataset
2023-05-13 20:19:46,625:INFO:Plot type: confusion_matrix
2023-05-13 20:19:46,981:INFO:Fitting Model
2023-05-13 20:19:46,982:INFO:Scoring test/hold-out set
2023-05-13 20:19:47,286:INFO:Visual Rendered Successfully
2023-05-13 20:19:47,388:INFO:plot_model() successfully completed......................................
2023-05-13 20:19:47,390:INFO:Initializing plot_model()
2023-05-13 20:19:47,390:INFO:plot_model(plot=feature, fold=None, use_train_data=False, verbose=True, display=None, display_format=None, estimator=LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=123, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001C888B22490>, system=True)
2023-05-13 20:19:47,390:INFO:Checking exceptions
2023-05-13 20:19:47,401:INFO:Preloading libraries
2023-05-13 20:19:47,410:INFO:Copying training dataset
2023-05-13 20:19:47,411:INFO:Plot type: feature
2023-05-13 20:19:47,411:WARNING:No coef_ found. Trying feature_importances_
2023-05-13 20:19:47,883:INFO:Visual Rendered Successfully
2023-05-13 20:19:47,976:INFO:plot_model() successfully completed......................................
2023-05-13 20:21:49,949:INFO:Initializing create_model()
2023-05-13 20:21:49,950:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001C888B22490>, estimator=lr, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=0.0, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-05-13 20:21:49,950:INFO:Checking exceptions
2023-05-13 20:21:49,976:INFO:Importing libraries
2023-05-13 20:21:49,976:INFO:Copying training dataset
2023-05-13 20:21:50,012:INFO:Defining folds
2023-05-13 20:21:50,012:INFO:Declaring metric variables
2023-05-13 20:21:50,019:INFO:Importing untrained model
2023-05-13 20:21:50,026:INFO:Logistic Regression Imported successfully
2023-05-13 20:21:50,042:INFO:Starting cross validation
2023-05-13 20:21:50,049:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-05-13 20:22:00,097:INFO:Calculating mean and std
2023-05-13 20:22:00,099:INFO:Creating metrics dataframe
2023-05-13 20:22:00,109:INFO:Finalizing model
2023-05-13 20:22:02,569:INFO:Uploading results into container
2023-05-13 20:22:02,571:INFO:Uploading model into container now
2023-05-13 20:22:02,588:INFO:_master_model_container: 23
2023-05-13 20:22:02,588:INFO:_display_container: 6
2023-05-13 20:22:02,590:INFO:CustomProbabilityThresholdClassifier(C=1.0, class_weight=None,
                                     classifier=LogisticRegression(C=1.0,
                                                                   class_weight=None,
                                                                   dual=False,
                                                                   fit_intercept=True,
                                                                   intercept_scaling=1,
                                                                   l1_ratio=None,
                                                                   max_iter=1000,
                                                                   multi_class='auto',
                                                                   n_jobs=None,
                                                                   penalty='l2',
                                                                   random_state=123,
                                                                   solver='lbfgs',
                                                                   tol=0.0001,
                                                                   verbose=0,
                                                                   warm_start=False),
                                     dual=False, fit_intercept=True,
                                     intercept_scaling=1, l1_ratio=None,
                                     max_iter=1000, multi_class='auto',
                                     n_jobs=None, penalty='l2',
                                     probability_threshold=0.0,
                                     random_state=123, solver='lbfgs',
                                     tol=0.0001, verbose=0, warm_start=False)
2023-05-13 20:22:02,590:INFO:create_model() successfully completed......................................
2023-05-13 20:22:02,690:INFO:Initializing create_model()
2023-05-13 20:22:02,691:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001C888B22490>, estimator=lr, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=0.01, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-05-13 20:22:02,691:INFO:Checking exceptions
2023-05-13 20:22:02,717:INFO:Importing libraries
2023-05-13 20:22:02,717:INFO:Copying training dataset
2023-05-13 20:22:02,752:INFO:Defining folds
2023-05-13 20:22:02,752:INFO:Declaring metric variables
2023-05-13 20:22:02,758:INFO:Importing untrained model
2023-05-13 20:22:02,766:INFO:Logistic Regression Imported successfully
2023-05-13 20:22:02,781:INFO:Starting cross validation
2023-05-13 20:22:02,786:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-05-13 20:22:13,295:INFO:Calculating mean and std
2023-05-13 20:22:13,298:INFO:Creating metrics dataframe
2023-05-13 20:22:13,305:INFO:Finalizing model
2023-05-13 20:22:15,820:INFO:Uploading results into container
2023-05-13 20:22:15,822:INFO:Uploading model into container now
2023-05-13 20:22:15,842:INFO:_master_model_container: 24
2023-05-13 20:22:15,843:INFO:_display_container: 7
2023-05-13 20:22:15,846:INFO:CustomProbabilityThresholdClassifier(C=1.0, class_weight=None,
                                     classifier=LogisticRegression(C=1.0,
                                                                   class_weight=None,
                                                                   dual=False,
                                                                   fit_intercept=True,
                                                                   intercept_scaling=1,
                                                                   l1_ratio=None,
                                                                   max_iter=1000,
                                                                   multi_class='auto',
                                                                   n_jobs=None,
                                                                   penalty='l2',
                                                                   random_state=123,
                                                                   solver='lbfgs',
                                                                   tol=0.0001,
                                                                   verbose=0,
                                                                   warm_start=False),
                                     dual=False, fit_intercept=True,
                                     intercept_scaling=1, l1_ratio=None,
                                     max_iter=1000, multi_class='auto',
                                     n_jobs=None, penalty='l2',
                                     probability_threshold=0.01,
                                     random_state=123, solver='lbfgs',
                                     tol=0.0001, verbose=0, warm_start=False)
2023-05-13 20:22:15,847:INFO:create_model() successfully completed......................................
2023-05-13 20:22:15,973:INFO:Initializing create_model()
2023-05-13 20:22:15,973:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001C888B22490>, estimator=lr, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=0.02, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-05-13 20:22:15,973:INFO:Checking exceptions
2023-05-13 20:22:15,994:INFO:Importing libraries
2023-05-13 20:22:15,994:INFO:Copying training dataset
2023-05-13 20:22:16,023:INFO:Defining folds
2023-05-13 20:22:16,023:INFO:Declaring metric variables
2023-05-13 20:22:16,030:INFO:Importing untrained model
2023-05-13 20:22:16,037:INFO:Logistic Regression Imported successfully
2023-05-13 20:22:16,049:INFO:Starting cross validation
2023-05-13 20:22:16,055:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-05-13 20:22:26,522:INFO:Calculating mean and std
2023-05-13 20:22:26,523:INFO:Creating metrics dataframe
2023-05-13 20:22:26,532:INFO:Finalizing model
2023-05-13 20:22:29,060:INFO:Uploading results into container
2023-05-13 20:22:29,062:INFO:Uploading model into container now
2023-05-13 20:22:29,080:INFO:_master_model_container: 25
2023-05-13 20:22:29,080:INFO:_display_container: 8
2023-05-13 20:22:29,082:INFO:CustomProbabilityThresholdClassifier(C=1.0, class_weight=None,
                                     classifier=LogisticRegression(C=1.0,
                                                                   class_weight=None,
                                                                   dual=False,
                                                                   fit_intercept=True,
                                                                   intercept_scaling=1,
                                                                   l1_ratio=None,
                                                                   max_iter=1000,
                                                                   multi_class='auto',
                                                                   n_jobs=None,
                                                                   penalty='l2',
                                                                   random_state=123,
                                                                   solver='lbfgs',
                                                                   tol=0.0001,
                                                                   verbose=0,
                                                                   warm_start=False),
                                     dual=False, fit_intercept=True,
                                     intercept_scaling=1, l1_ratio=None,
                                     max_iter=1000, multi_class='auto',
                                     n_jobs=None, penalty='l2',
                                     probability_threshold=0.02,
                                     random_state=123, solver='lbfgs',
                                     tol=0.0001, verbose=0, warm_start=False)
2023-05-13 20:22:29,082:INFO:create_model() successfully completed......................................
2023-05-13 20:22:29,169:INFO:Initializing create_model()
2023-05-13 20:22:29,169:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001C888B22490>, estimator=lr, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=0.03, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-05-13 20:22:29,169:INFO:Checking exceptions
2023-05-13 20:22:29,207:INFO:Importing libraries
2023-05-13 20:22:29,208:INFO:Copying training dataset
2023-05-13 20:22:29,241:INFO:Defining folds
2023-05-13 20:22:29,242:INFO:Declaring metric variables
2023-05-13 20:22:29,250:INFO:Importing untrained model
2023-05-13 20:22:29,256:INFO:Logistic Regression Imported successfully
2023-05-13 20:22:29,267:INFO:Starting cross validation
2023-05-13 20:22:29,271:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-05-13 20:22:39,495:INFO:Calculating mean and std
2023-05-13 20:22:39,496:INFO:Creating metrics dataframe
2023-05-13 20:22:39,505:INFO:Finalizing model
2023-05-13 20:22:42,029:INFO:Uploading results into container
2023-05-13 20:22:42,031:INFO:Uploading model into container now
2023-05-13 20:22:42,050:INFO:_master_model_container: 26
2023-05-13 20:22:42,050:INFO:_display_container: 9
2023-05-13 20:22:42,053:INFO:CustomProbabilityThresholdClassifier(C=1.0, class_weight=None,
                                     classifier=LogisticRegression(C=1.0,
                                                                   class_weight=None,
                                                                   dual=False,
                                                                   fit_intercept=True,
                                                                   intercept_scaling=1,
                                                                   l1_ratio=None,
                                                                   max_iter=1000,
                                                                   multi_class='auto',
                                                                   n_jobs=None,
                                                                   penalty='l2',
                                                                   random_state=123,
                                                                   solver='lbfgs',
                                                                   tol=0.0001,
                                                                   verbose=0,
                                                                   warm_start=False),
                                     dual=False, fit_intercept=True,
                                     intercept_scaling=1, l1_ratio=None,
                                     max_iter=1000, multi_class='auto',
                                     n_jobs=None, penalty='l2',
                                     probability_threshold=0.03,
                                     random_state=123, solver='lbfgs',
                                     tol=0.0001, verbose=0, warm_start=False)
2023-05-13 20:22:42,053:INFO:create_model() successfully completed......................................
2023-05-13 20:22:42,152:INFO:Initializing create_model()
2023-05-13 20:22:42,152:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001C888B22490>, estimator=lr, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=0.04, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-05-13 20:22:42,152:INFO:Checking exceptions
2023-05-13 20:22:42,176:INFO:Importing libraries
2023-05-13 20:22:42,176:INFO:Copying training dataset
2023-05-13 20:22:42,214:INFO:Defining folds
2023-05-13 20:22:42,214:INFO:Declaring metric variables
2023-05-13 20:22:42,222:INFO:Importing untrained model
2023-05-13 20:22:42,229:INFO:Logistic Regression Imported successfully
2023-05-13 20:22:42,248:INFO:Starting cross validation
2023-05-13 20:22:42,253:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-05-13 20:22:52,659:INFO:Calculating mean and std
2023-05-13 20:22:52,661:INFO:Creating metrics dataframe
2023-05-13 20:22:52,671:INFO:Finalizing model
2023-05-13 20:22:55,198:INFO:Uploading results into container
2023-05-13 20:22:55,199:INFO:Uploading model into container now
2023-05-13 20:22:55,217:INFO:_master_model_container: 27
2023-05-13 20:22:55,218:INFO:_display_container: 10
2023-05-13 20:22:55,219:INFO:CustomProbabilityThresholdClassifier(C=1.0, class_weight=None,
                                     classifier=LogisticRegression(C=1.0,
                                                                   class_weight=None,
                                                                   dual=False,
                                                                   fit_intercept=True,
                                                                   intercept_scaling=1,
                                                                   l1_ratio=None,
                                                                   max_iter=1000,
                                                                   multi_class='auto',
                                                                   n_jobs=None,
                                                                   penalty='l2',
                                                                   random_state=123,
                                                                   solver='lbfgs',
                                                                   tol=0.0001,
                                                                   verbose=0,
                                                                   warm_start=False),
                                     dual=False, fit_intercept=True,
                                     intercept_scaling=1, l1_ratio=None,
                                     max_iter=1000, multi_class='auto',
                                     n_jobs=None, penalty='l2',
                                     probability_threshold=0.04,
                                     random_state=123, solver='lbfgs',
                                     tol=0.0001, verbose=0, warm_start=False)
2023-05-13 20:22:55,220:INFO:create_model() successfully completed......................................
2023-05-13 20:22:55,322:INFO:Initializing create_model()
2023-05-13 20:22:55,322:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001C888B22490>, estimator=lr, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=0.05, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-05-13 20:22:55,322:INFO:Checking exceptions
2023-05-13 20:22:55,349:INFO:Importing libraries
2023-05-13 20:22:55,349:INFO:Copying training dataset
2023-05-13 20:22:55,383:INFO:Defining folds
2023-05-13 20:22:55,384:INFO:Declaring metric variables
2023-05-13 20:22:55,391:INFO:Importing untrained model
2023-05-13 20:22:55,398:INFO:Logistic Regression Imported successfully
2023-05-13 20:22:55,414:INFO:Starting cross validation
2023-05-13 20:22:55,420:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-05-13 20:27:29,426:INFO:Initializing plot_model()
2023-05-13 20:27:29,426:INFO:plot_model(plot=auc, fold=None, use_train_data=False, verbose=True, display=None, display_format=None, estimator=LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=123, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001C888B22490>, system=True)
2023-05-13 20:27:29,427:INFO:Checking exceptions
2023-05-13 20:27:29,440:INFO:Preloading libraries
2023-05-13 20:27:29,455:INFO:Copying training dataset
2023-05-13 20:27:29,456:INFO:Plot type: auc
2023-05-13 20:27:29,800:INFO:Fitting Model
2023-05-13 20:27:29,801:INFO:Scoring test/hold-out set
2023-05-13 20:27:30,338:INFO:Visual Rendered Successfully
2023-05-13 20:27:30,449:INFO:plot_model() successfully completed......................................
2023-05-13 20:27:30,450:INFO:Initializing plot_model()
2023-05-13 20:27:30,450:INFO:plot_model(plot=feature, fold=None, use_train_data=False, verbose=True, display=None, display_format=None, estimator=LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=123, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001C888B22490>, system=True)
2023-05-13 20:27:30,451:INFO:Checking exceptions
2023-05-13 20:27:30,464:INFO:Preloading libraries
2023-05-13 20:27:30,477:INFO:Copying training dataset
2023-05-13 20:27:30,477:INFO:Plot type: feature
2023-05-13 20:27:30,477:WARNING:No coef_ found. Trying feature_importances_
2023-05-13 20:27:30,973:INFO:Visual Rendered Successfully
2023-05-13 20:27:31,088:INFO:plot_model() successfully completed......................................
2023-05-13 20:29:06,016:INFO:Initializing get_config()
2023-05-13 20:29:06,016:INFO:get_config(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001C888B22490>, variable=X_train)
2023-05-13 20:29:06,017:INFO:Variable: 'X_train' used to return the transformed values in PyCaret 2.x. From PyCaret 3.x, this will return the raw values. If you need the transformed values, call get_config with 'X_train_transformed' instead.
2023-05-13 20:29:06,019:WARNING:c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\pycaret\internal\pycaret_experiment\pycaret_experiment.py:322: UserWarning: Variable: 'X_train' used to return the transformed values in PyCaret 2.x. From PyCaret 3.x, this will return the raw values. If you need the transformed values, call get_config with 'X_train_transformed' instead.
  warnings.warn(msg)  # print on screen

2023-05-13 20:29:06,049:INFO:Variable:  returned as       Fecha.Expedicion  Disponible.Avances  Limite.Avances  Total.Intereses  \
1219        2006-12-16        2.254981e+05        240000.0     15895.450195   
6555        2014-06-26        7.600000e+05        760000.0         0.000000   
26689       2014-04-28        2.400000e+05        240000.0         0.000000   
30872       2007-05-05        4.480000e+06       4480000.0       600.659973   
31178       2008-06-28        2.700000e+05        270000.0         0.000000   
...                ...                 ...             ...              ...   
5345        2007-02-08        8.845490e+05       1680000.0         0.000000   
48737       2017-01-11        4.500000e+04         45000.0         0.000000   
23822       2011-08-17        2.250000e+05        225000.0      2371.169922   
30564       2012-12-27        5.800000e+05        580000.0     38052.289062   
8743        2010-11-25        1.200000e+05        120000.0         0.000000   

       Saldos.Mes.Ant  Pagos.Mes.Ant  Vtas.Mes.Ant  Edad.Mora  Limite.Cupo  \
1219     5.745019e+05            0.0           0.0     3210.0     800000.0   
6555     0.000000e+00            0.0           0.0        0.0    1900000.0   
26689    1.464575e+04            0.0           0.0        0.0     800000.0   
30872    1.049563e+04            0.0           0.0        0.0    8960000.0   
31178    2.375500e+04            0.0           0.0        0.0     900000.0   
...               ...            ...           ...        ...          ...   
5345     1.175295e+06       237064.0           0.0        0.0    4200000.0   
48737    0.000000e+00            0.0           0.0        0.0     150000.0   
23822    1.005874e+05        55818.0           0.0        0.0     750000.0   
30564    6.928145e+05            0.0       19143.0        0.0    1450000.0   
8743     0.000000e+00            0.0           0.0        0.0     400000.0   

       Pago.del.Mes  ...      nivel_educativo  estado_civil  Genero  PAC  \
1219            0.0  ...           secundaria       soltero       M    2   
6555            0.0  ...  tecnico_tecnologico      separado       M    1   
26689           0.0  ...           secundaria       soltero       F    2   
30872           0.0  ...  tecnico_tecnologico        casado       F    1   
31178       23755.0  ...           secundaria      separado       M    2   
...             ...  ...                  ...           ...     ...  ...   
5345       234924.0  ...  tecnico_tecnologico        casado       M    1   
48737           0.0  ...             primaria        casado       F    3   
23822           0.0  ...             primaria       soltero       M    3   
30564           0.0  ...  tecnico_tecnologico      separado       M    1   
8743            0.0  ...             primaria      separado       M    3   

      contrato estrato  cuota_monetaria sub_vivenda bono_lonchera porc_avances  
1219         4     NaN                1           0             1          0.3  
6555         3     NaN                0           0             0          0.4  
26689        1     NaN                1           0             1          0.3  
30872        2     NaN                0           0             0          0.5  
31178        3     NaN                1           0             1          0.3  
...        ...     ...              ...         ...           ...          ...  
5345         3     4.0                0           0             0          0.4  
48737        2     NaN                1           0             1          0.3  
23822        3     NaN                1           0             1          0.3  
30564        4     NaN                0           0             0          0.4  
8743         1     NaN                1           0             1          0.3  

[35000 rows x 27 columns]
2023-05-13 20:29:06,049:INFO:get_config() successfully completed......................................
2023-05-13 20:29:25,149:INFO:Initializing get_config()
2023-05-13 20:29:25,150:INFO:get_config(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001C888B22490>, variable=X_test)
2023-05-13 20:29:25,150:INFO:Variable: 'X_test' used to return the transformed values in PyCaret 2.x. From PyCaret 3.x, this will return the raw values. If you need the transformed values, call get_config with 'X_test_transformed' instead.
2023-05-13 20:29:25,150:WARNING:c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\pycaret\internal\pycaret_experiment\pycaret_experiment.py:322: UserWarning: Variable: 'X_test' used to return the transformed values in PyCaret 2.x. From PyCaret 3.x, this will return the raw values. If you need the transformed values, call get_config with 'X_test_transformed' instead.
  warnings.warn(msg)  # print on screen

2023-05-13 20:29:25,178:INFO:Variable:  returned as       Fecha.Expedicion  Disponible.Avances  Limite.Avances  Total.Intereses  \
5694        2010-03-19           2625000.0       2625000.0         0.000000   
7540        2008-07-10                 0.0        270000.0    494045.468750   
30169       2014-06-03            225000.0        225000.0       338.959991   
13879       2016-07-27            560000.0        560000.0         0.000000   
33377       2016-02-03            210000.0        210000.0         0.000000   
...                ...                 ...             ...              ...   
29541       2018-02-14            174000.0        174000.0         0.000000   
16826       2009-08-27            600000.0        600000.0         0.000000   
23554       2013-04-11            120000.0        120000.0       613.940002   
23012       2014-04-25            876000.0        876000.0     20172.650391   
33047       2016-03-23             10300.0        210000.0     13705.400391   

       Saldos.Mes.Ant  Pagos.Mes.Ant  Vtas.Mes.Ant  Edad.Mora  Limite.Cupo  \
5694     0.000000e+00           0.00          0.00        0.0    5250000.0   
7540     1.329984e+06           0.00          0.00       60.0     900000.0   
30169    5.285100e+03       41022.00          0.00        0.0     750000.0   
13879    0.000000e+00           0.00          0.00        0.0    1400000.0   
33377    0.000000e+00           0.00          0.00        0.0     700000.0   
...               ...            ...           ...        ...          ...   
29541    0.000000e+00           0.00          0.00        0.0     580000.0   
16826    0.000000e+00           0.00          0.00        0.0    1500000.0   
23554    7.169794e+04           0.00          0.00        0.0     400000.0   
23012    8.962524e+05      510263.75     363323.75        0.0    2190000.0   
33047    6.386579e+05       50000.00          0.00        0.0     700000.0   

       Pago.del.Mes  ...      nivel_educativo  estado_civil  Genero  PAC  \
5694            0.0  ...  tecnico_tecnologico      separado       M    1   
7540            0.0  ...           secundaria       soltero       F    2   
30169           0.0  ...             primaria         viudo       M    3   
13879           0.0  ...  tecnico_tecnologico         viudo       F    1   
33377           0.0  ...             primaria        casado       M    3   
...             ...  ...                  ...           ...     ...  ...   
29541           0.0  ...             primaria       soltero       F    3   
16826           0.0  ...  tecnico_tecnologico        casado       F    1   
23554           0.0  ...             primaria      separado       F    3   
23012           0.0  ...  tecnico_tecnologico         viudo       M    1   
33047           0.0  ...             primaria       soltero       F    3   

      contrato estrato  cuota_monetaria sub_vivenda bono_lonchera porc_avances  
5694         4     NaN                0           0             0          0.5  
7540         4     NaN                1           0             1          0.3  
30169        3     NaN                1           0             1          0.3  
13879        4     NaN                0           0             0          0.4  
33377        1     NaN                1           0             1          0.3  
...        ...     ...              ...         ...           ...          ...  
29541        2     NaN                1           0             1          0.3  
16826        1     NaN                0           0             0          0.4  
23554        4     NaN                1           0             1          0.3  
23012        4     NaN                0           0             0          0.4  
33047        3     NaN                1           0             1          0.3  

[15001 rows x 27 columns]
2023-05-13 20:29:25,178:INFO:get_config() successfully completed......................................
2023-05-13 20:30:23,022:INFO:Initializing get_config()
2023-05-13 20:30:23,023:INFO:get_config(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001C888B22490>, variable=X_test)
2023-05-13 20:30:23,023:INFO:Variable: 'X_test' used to return the transformed values in PyCaret 2.x. From PyCaret 3.x, this will return the raw values. If you need the transformed values, call get_config with 'X_test_transformed' instead.
2023-05-13 20:30:23,024:WARNING:c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\pycaret\internal\pycaret_experiment\pycaret_experiment.py:322: UserWarning: Variable: 'X_test' used to return the transformed values in PyCaret 2.x. From PyCaret 3.x, this will return the raw values. If you need the transformed values, call get_config with 'X_test_transformed' instead.
  warnings.warn(msg)  # print on screen

2023-05-13 20:30:23,053:INFO:Variable:  returned as       Fecha.Expedicion  Disponible.Avances  Limite.Avances  Total.Intereses  \
5694        2010-03-19           2625000.0       2625000.0         0.000000   
7540        2008-07-10                 0.0        270000.0    494045.468750   
30169       2014-06-03            225000.0        225000.0       338.959991   
13879       2016-07-27            560000.0        560000.0         0.000000   
33377       2016-02-03            210000.0        210000.0         0.000000   
...                ...                 ...             ...              ...   
29541       2018-02-14            174000.0        174000.0         0.000000   
16826       2009-08-27            600000.0        600000.0         0.000000   
23554       2013-04-11            120000.0        120000.0       613.940002   
23012       2014-04-25            876000.0        876000.0     20172.650391   
33047       2016-03-23             10300.0        210000.0     13705.400391   

       Saldos.Mes.Ant  Pagos.Mes.Ant  Vtas.Mes.Ant  Edad.Mora  Limite.Cupo  \
5694     0.000000e+00           0.00          0.00        0.0    5250000.0   
7540     1.329984e+06           0.00          0.00       60.0     900000.0   
30169    5.285100e+03       41022.00          0.00        0.0     750000.0   
13879    0.000000e+00           0.00          0.00        0.0    1400000.0   
33377    0.000000e+00           0.00          0.00        0.0     700000.0   
...               ...            ...           ...        ...          ...   
29541    0.000000e+00           0.00          0.00        0.0     580000.0   
16826    0.000000e+00           0.00          0.00        0.0    1500000.0   
23554    7.169794e+04           0.00          0.00        0.0     400000.0   
23012    8.962524e+05      510263.75     363323.75        0.0    2190000.0   
33047    6.386579e+05       50000.00          0.00        0.0     700000.0   

       Pago.del.Mes  ...      nivel_educativo  estado_civil  Genero  PAC  \
5694            0.0  ...  tecnico_tecnologico      separado       M    1   
7540            0.0  ...           secundaria       soltero       F    2   
30169           0.0  ...             primaria         viudo       M    3   
13879           0.0  ...  tecnico_tecnologico         viudo       F    1   
33377           0.0  ...             primaria        casado       M    3   
...             ...  ...                  ...           ...     ...  ...   
29541           0.0  ...             primaria       soltero       F    3   
16826           0.0  ...  tecnico_tecnologico        casado       F    1   
23554           0.0  ...             primaria      separado       F    3   
23012           0.0  ...  tecnico_tecnologico         viudo       M    1   
33047           0.0  ...             primaria       soltero       F    3   

      contrato estrato  cuota_monetaria sub_vivenda bono_lonchera porc_avances  
5694         4     NaN                0           0             0          0.5  
7540         4     NaN                1           0             1          0.3  
30169        3     NaN                1           0             1          0.3  
13879        4     NaN                0           0             0          0.4  
33377        1     NaN                1           0             1          0.3  
...        ...     ...              ...         ...           ...          ...  
29541        2     NaN                1           0             1          0.3  
16826        1     NaN                0           0             0          0.4  
23554        4     NaN                1           0             1          0.3  
23012        4     NaN                0           0             0          0.4  
33047        3     NaN                1           0             1          0.3  

[15001 rows x 27 columns]
2023-05-13 20:30:23,054:INFO:get_config() successfully completed......................................
2023-05-13 20:30:23,054:INFO:Initializing get_config()
2023-05-13 20:30:23,054:INFO:get_config(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001C888B22490>, variable=y_test)
2023-05-13 20:30:23,054:INFO:Variable: 'y_test' used to return the transformed values in PyCaret 2.x. From PyCaret 3.x, this will return the raw values. If you need the transformed values, call get_config with 'y_test_transformed' instead.
2023-05-13 20:30:23,055:WARNING:c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\pycaret\internal\pycaret_experiment\pycaret_experiment.py:322: UserWarning: Variable: 'y_test' used to return the transformed values in PyCaret 2.x. From PyCaret 3.x, this will return the raw values. If you need the transformed values, call get_config with 'y_test_transformed' instead.
  warnings.warn(msg)  # print on screen

2023-05-13 20:30:23,066:INFO:Variable:  returned as 5694     0
7540     0
30169    0
13879    0
33377    0
        ..
29541    0
16826    0
23554    0
23012    0
33047    0
Name: Target, Length: 15001, dtype: category
Categories (2, object): ['0', '1']
2023-05-13 20:30:23,066:INFO:get_config() successfully completed......................................
2023-05-13 20:30:23,066:WARNING:C:\Users\camil\AppData\Local\Temp\ipykernel_2388\491803012.py:2: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.
  get_config('X_test').append(get_config('y_test'))

2023-05-13 20:30:36,652:INFO:Initializing get_config()
2023-05-13 20:30:36,652:INFO:get_config(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001C888B22490>, variable=X_test)
2023-05-13 20:30:36,653:INFO:Variable: 'X_test' used to return the transformed values in PyCaret 2.x. From PyCaret 3.x, this will return the raw values. If you need the transformed values, call get_config with 'X_test_transformed' instead.
2023-05-13 20:30:36,654:WARNING:c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\pycaret\internal\pycaret_experiment\pycaret_experiment.py:322: UserWarning: Variable: 'X_test' used to return the transformed values in PyCaret 2.x. From PyCaret 3.x, this will return the raw values. If you need the transformed values, call get_config with 'X_test_transformed' instead.
  warnings.warn(msg)  # print on screen

2023-05-13 20:30:36,686:INFO:Variable:  returned as       Fecha.Expedicion  Disponible.Avances  Limite.Avances  Total.Intereses  \
5694        2010-03-19           2625000.0       2625000.0         0.000000   
7540        2008-07-10                 0.0        270000.0    494045.468750   
30169       2014-06-03            225000.0        225000.0       338.959991   
13879       2016-07-27            560000.0        560000.0         0.000000   
33377       2016-02-03            210000.0        210000.0         0.000000   
...                ...                 ...             ...              ...   
29541       2018-02-14            174000.0        174000.0         0.000000   
16826       2009-08-27            600000.0        600000.0         0.000000   
23554       2013-04-11            120000.0        120000.0       613.940002   
23012       2014-04-25            876000.0        876000.0     20172.650391   
33047       2016-03-23             10300.0        210000.0     13705.400391   

       Saldos.Mes.Ant  Pagos.Mes.Ant  Vtas.Mes.Ant  Edad.Mora  Limite.Cupo  \
5694     0.000000e+00           0.00          0.00        0.0    5250000.0   
7540     1.329984e+06           0.00          0.00       60.0     900000.0   
30169    5.285100e+03       41022.00          0.00        0.0     750000.0   
13879    0.000000e+00           0.00          0.00        0.0    1400000.0   
33377    0.000000e+00           0.00          0.00        0.0     700000.0   
...               ...            ...           ...        ...          ...   
29541    0.000000e+00           0.00          0.00        0.0     580000.0   
16826    0.000000e+00           0.00          0.00        0.0    1500000.0   
23554    7.169794e+04           0.00          0.00        0.0     400000.0   
23012    8.962524e+05      510263.75     363323.75        0.0    2190000.0   
33047    6.386579e+05       50000.00          0.00        0.0     700000.0   

       Pago.del.Mes  ...      nivel_educativo  estado_civil  Genero  PAC  \
5694            0.0  ...  tecnico_tecnologico      separado       M    1   
7540            0.0  ...           secundaria       soltero       F    2   
30169           0.0  ...             primaria         viudo       M    3   
13879           0.0  ...  tecnico_tecnologico         viudo       F    1   
33377           0.0  ...             primaria        casado       M    3   
...             ...  ...                  ...           ...     ...  ...   
29541           0.0  ...             primaria       soltero       F    3   
16826           0.0  ...  tecnico_tecnologico        casado       F    1   
23554           0.0  ...             primaria      separado       F    3   
23012           0.0  ...  tecnico_tecnologico         viudo       M    1   
33047           0.0  ...             primaria       soltero       F    3   

      contrato estrato  cuota_monetaria sub_vivenda bono_lonchera porc_avances  
5694         4     NaN                0           0             0          0.5  
7540         4     NaN                1           0             1          0.3  
30169        3     NaN                1           0             1          0.3  
13879        4     NaN                0           0             0          0.4  
33377        1     NaN                1           0             1          0.3  
...        ...     ...              ...         ...           ...          ...  
29541        2     NaN                1           0             1          0.3  
16826        1     NaN                0           0             0          0.4  
23554        4     NaN                1           0             1          0.3  
23012        4     NaN                0           0             0          0.4  
33047        3     NaN                1           0             1          0.3  

[15001 rows x 27 columns]
2023-05-13 20:30:36,687:INFO:get_config() successfully completed......................................
2023-05-13 20:30:36,687:INFO:Initializing get_config()
2023-05-13 20:30:36,687:INFO:get_config(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001C888B22490>, variable=y_test)
2023-05-13 20:30:36,687:INFO:Variable: 'y_test' used to return the transformed values in PyCaret 2.x. From PyCaret 3.x, this will return the raw values. If you need the transformed values, call get_config with 'y_test_transformed' instead.
2023-05-13 20:30:36,688:WARNING:c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\pycaret\internal\pycaret_experiment\pycaret_experiment.py:322: UserWarning: Variable: 'y_test' used to return the transformed values in PyCaret 2.x. From PyCaret 3.x, this will return the raw values. If you need the transformed values, call get_config with 'y_test_transformed' instead.
  warnings.warn(msg)  # print on screen

2023-05-13 20:30:36,697:INFO:Variable:  returned as 5694     0
7540     0
30169    0
13879    0
33377    0
        ..
29541    0
16826    0
23554    0
23012    0
33047    0
Name: Target, Length: 15001, dtype: category
Categories (2, object): ['0', '1']
2023-05-13 20:30:36,697:INFO:get_config() successfully completed......................................
2023-05-13 20:31:04,013:INFO:Initializing get_config()
2023-05-13 20:31:04,014:INFO:get_config(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001C888B22490>, variable=X_test)
2023-05-13 20:31:04,014:INFO:Variable: 'X_test' used to return the transformed values in PyCaret 2.x. From PyCaret 3.x, this will return the raw values. If you need the transformed values, call get_config with 'X_test_transformed' instead.
2023-05-13 20:31:04,015:WARNING:c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\pycaret\internal\pycaret_experiment\pycaret_experiment.py:322: UserWarning: Variable: 'X_test' used to return the transformed values in PyCaret 2.x. From PyCaret 3.x, this will return the raw values. If you need the transformed values, call get_config with 'X_test_transformed' instead.
  warnings.warn(msg)  # print on screen

2023-05-13 20:31:04,046:INFO:Variable:  returned as       Fecha.Expedicion  Disponible.Avances  Limite.Avances  Total.Intereses  \
5694        2010-03-19           2625000.0       2625000.0         0.000000   
7540        2008-07-10                 0.0        270000.0    494045.468750   
30169       2014-06-03            225000.0        225000.0       338.959991   
13879       2016-07-27            560000.0        560000.0         0.000000   
33377       2016-02-03            210000.0        210000.0         0.000000   
...                ...                 ...             ...              ...   
29541       2018-02-14            174000.0        174000.0         0.000000   
16826       2009-08-27            600000.0        600000.0         0.000000   
23554       2013-04-11            120000.0        120000.0       613.940002   
23012       2014-04-25            876000.0        876000.0     20172.650391   
33047       2016-03-23             10300.0        210000.0     13705.400391   

       Saldos.Mes.Ant  Pagos.Mes.Ant  Vtas.Mes.Ant  Edad.Mora  Limite.Cupo  \
5694     0.000000e+00           0.00          0.00        0.0    5250000.0   
7540     1.329984e+06           0.00          0.00       60.0     900000.0   
30169    5.285100e+03       41022.00          0.00        0.0     750000.0   
13879    0.000000e+00           0.00          0.00        0.0    1400000.0   
33377    0.000000e+00           0.00          0.00        0.0     700000.0   
...               ...            ...           ...        ...          ...   
29541    0.000000e+00           0.00          0.00        0.0     580000.0   
16826    0.000000e+00           0.00          0.00        0.0    1500000.0   
23554    7.169794e+04           0.00          0.00        0.0     400000.0   
23012    8.962524e+05      510263.75     363323.75        0.0    2190000.0   
33047    6.386579e+05       50000.00          0.00        0.0     700000.0   

       Pago.del.Mes  ...      nivel_educativo  estado_civil  Genero  PAC  \
5694            0.0  ...  tecnico_tecnologico      separado       M    1   
7540            0.0  ...           secundaria       soltero       F    2   
30169           0.0  ...             primaria         viudo       M    3   
13879           0.0  ...  tecnico_tecnologico         viudo       F    1   
33377           0.0  ...             primaria        casado       M    3   
...             ...  ...                  ...           ...     ...  ...   
29541           0.0  ...             primaria       soltero       F    3   
16826           0.0  ...  tecnico_tecnologico        casado       F    1   
23554           0.0  ...             primaria      separado       F    3   
23012           0.0  ...  tecnico_tecnologico         viudo       M    1   
33047           0.0  ...             primaria       soltero       F    3   

      contrato estrato  cuota_monetaria sub_vivenda bono_lonchera porc_avances  
5694         4     NaN                0           0             0          0.5  
7540         4     NaN                1           0             1          0.3  
30169        3     NaN                1           0             1          0.3  
13879        4     NaN                0           0             0          0.4  
33377        1     NaN                1           0             1          0.3  
...        ...     ...              ...         ...           ...          ...  
29541        2     NaN                1           0             1          0.3  
16826        1     NaN                0           0             0          0.4  
23554        4     NaN                1           0             1          0.3  
23012        4     NaN                0           0             0          0.4  
33047        3     NaN                1           0             1          0.3  

[15001 rows x 27 columns]
2023-05-13 20:31:04,046:INFO:get_config() successfully completed......................................
2023-05-13 20:31:04,046:INFO:Initializing get_config()
2023-05-13 20:31:04,046:INFO:get_config(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001C888B22490>, variable=y_test)
2023-05-13 20:31:04,046:INFO:Variable: 'y_test' used to return the transformed values in PyCaret 2.x. From PyCaret 3.x, this will return the raw values. If you need the transformed values, call get_config with 'y_test_transformed' instead.
2023-05-13 20:31:04,047:WARNING:c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\pycaret\internal\pycaret_experiment\pycaret_experiment.py:322: UserWarning: Variable: 'y_test' used to return the transformed values in PyCaret 2.x. From PyCaret 3.x, this will return the raw values. If you need the transformed values, call get_config with 'y_test_transformed' instead.
  warnings.warn(msg)  # print on screen

2023-05-13 20:31:04,054:INFO:Variable:  returned as 5694     0
7540     0
30169    0
13879    0
33377    0
        ..
29541    0
16826    0
23554    0
23012    0
33047    0
Name: Target, Length: 15001, dtype: category
Categories (2, object): ['0', '1']
2023-05-13 20:31:04,054:INFO:get_config() successfully completed......................................
2023-05-13 20:31:12,179:INFO:Initializing get_config()
2023-05-13 20:31:12,180:INFO:get_config(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001C888B22490>, variable=X_test)
2023-05-13 20:31:12,181:INFO:Variable: 'X_test' used to return the transformed values in PyCaret 2.x. From PyCaret 3.x, this will return the raw values. If you need the transformed values, call get_config with 'X_test_transformed' instead.
2023-05-13 20:31:12,181:WARNING:c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\pycaret\internal\pycaret_experiment\pycaret_experiment.py:322: UserWarning: Variable: 'X_test' used to return the transformed values in PyCaret 2.x. From PyCaret 3.x, this will return the raw values. If you need the transformed values, call get_config with 'X_test_transformed' instead.
  warnings.warn(msg)  # print on screen

2023-05-13 20:31:12,213:INFO:Variable:  returned as       Fecha.Expedicion  Disponible.Avances  Limite.Avances  Total.Intereses  \
5694        2010-03-19           2625000.0       2625000.0         0.000000   
7540        2008-07-10                 0.0        270000.0    494045.468750   
30169       2014-06-03            225000.0        225000.0       338.959991   
13879       2016-07-27            560000.0        560000.0         0.000000   
33377       2016-02-03            210000.0        210000.0         0.000000   
...                ...                 ...             ...              ...   
29541       2018-02-14            174000.0        174000.0         0.000000   
16826       2009-08-27            600000.0        600000.0         0.000000   
23554       2013-04-11            120000.0        120000.0       613.940002   
23012       2014-04-25            876000.0        876000.0     20172.650391   
33047       2016-03-23             10300.0        210000.0     13705.400391   

       Saldos.Mes.Ant  Pagos.Mes.Ant  Vtas.Mes.Ant  Edad.Mora  Limite.Cupo  \
5694     0.000000e+00           0.00          0.00        0.0    5250000.0   
7540     1.329984e+06           0.00          0.00       60.0     900000.0   
30169    5.285100e+03       41022.00          0.00        0.0     750000.0   
13879    0.000000e+00           0.00          0.00        0.0    1400000.0   
33377    0.000000e+00           0.00          0.00        0.0     700000.0   
...               ...            ...           ...        ...          ...   
29541    0.000000e+00           0.00          0.00        0.0     580000.0   
16826    0.000000e+00           0.00          0.00        0.0    1500000.0   
23554    7.169794e+04           0.00          0.00        0.0     400000.0   
23012    8.962524e+05      510263.75     363323.75        0.0    2190000.0   
33047    6.386579e+05       50000.00          0.00        0.0     700000.0   

       Pago.del.Mes  ...      nivel_educativo  estado_civil  Genero  PAC  \
5694            0.0  ...  tecnico_tecnologico      separado       M    1   
7540            0.0  ...           secundaria       soltero       F    2   
30169           0.0  ...             primaria         viudo       M    3   
13879           0.0  ...  tecnico_tecnologico         viudo       F    1   
33377           0.0  ...             primaria        casado       M    3   
...             ...  ...                  ...           ...     ...  ...   
29541           0.0  ...             primaria       soltero       F    3   
16826           0.0  ...  tecnico_tecnologico        casado       F    1   
23554           0.0  ...             primaria      separado       F    3   
23012           0.0  ...  tecnico_tecnologico         viudo       M    1   
33047           0.0  ...             primaria       soltero       F    3   

      contrato estrato  cuota_monetaria sub_vivenda bono_lonchera porc_avances  
5694         4     NaN                0           0             0          0.5  
7540         4     NaN                1           0             1          0.3  
30169        3     NaN                1           0             1          0.3  
13879        4     NaN                0           0             0          0.4  
33377        1     NaN                1           0             1          0.3  
...        ...     ...              ...         ...           ...          ...  
29541        2     NaN                1           0             1          0.3  
16826        1     NaN                0           0             0          0.4  
23554        4     NaN                1           0             1          0.3  
23012        4     NaN                0           0             0          0.4  
33047        3     NaN                1           0             1          0.3  

[15001 rows x 27 columns]
2023-05-13 20:31:12,213:INFO:get_config() successfully completed......................................
2023-05-13 20:31:12,213:INFO:Initializing get_config()
2023-05-13 20:31:12,213:INFO:get_config(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001C888B22490>, variable=y_test)
2023-05-13 20:31:12,214:INFO:Variable: 'y_test' used to return the transformed values in PyCaret 2.x. From PyCaret 3.x, this will return the raw values. If you need the transformed values, call get_config with 'y_test_transformed' instead.
2023-05-13 20:31:12,214:WARNING:c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\pycaret\internal\pycaret_experiment\pycaret_experiment.py:322: UserWarning: Variable: 'y_test' used to return the transformed values in PyCaret 2.x. From PyCaret 3.x, this will return the raw values. If you need the transformed values, call get_config with 'y_test_transformed' instead.
  warnings.warn(msg)  # print on screen

2023-05-13 20:31:12,221:INFO:Variable:  returned as 5694     0
7540     0
30169    0
13879    0
33377    0
        ..
29541    0
16826    0
23554    0
23012    0
33047    0
Name: Target, Length: 15001, dtype: category
Categories (2, object): ['0', '1']
2023-05-13 20:31:12,222:INFO:get_config() successfully completed......................................
2023-05-13 20:31:36,715:INFO:Initializing get_config()
2023-05-13 20:31:36,716:INFO:get_config(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001C888B22490>, variable=X_test)
2023-05-13 20:31:36,716:INFO:Variable: 'X_test' used to return the transformed values in PyCaret 2.x. From PyCaret 3.x, this will return the raw values. If you need the transformed values, call get_config with 'X_test_transformed' instead.
2023-05-13 20:31:36,716:WARNING:c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\pycaret\internal\pycaret_experiment\pycaret_experiment.py:322: UserWarning: Variable: 'X_test' used to return the transformed values in PyCaret 2.x. From PyCaret 3.x, this will return the raw values. If you need the transformed values, call get_config with 'X_test_transformed' instead.
  warnings.warn(msg)  # print on screen

2023-05-13 20:31:36,749:INFO:Variable:  returned as       Fecha.Expedicion  Disponible.Avances  Limite.Avances  Total.Intereses  \
5694        2010-03-19           2625000.0       2625000.0         0.000000   
7540        2008-07-10                 0.0        270000.0    494045.468750   
30169       2014-06-03            225000.0        225000.0       338.959991   
13879       2016-07-27            560000.0        560000.0         0.000000   
33377       2016-02-03            210000.0        210000.0         0.000000   
...                ...                 ...             ...              ...   
29541       2018-02-14            174000.0        174000.0         0.000000   
16826       2009-08-27            600000.0        600000.0         0.000000   
23554       2013-04-11            120000.0        120000.0       613.940002   
23012       2014-04-25            876000.0        876000.0     20172.650391   
33047       2016-03-23             10300.0        210000.0     13705.400391   

       Saldos.Mes.Ant  Pagos.Mes.Ant  Vtas.Mes.Ant  Edad.Mora  Limite.Cupo  \
5694     0.000000e+00           0.00          0.00        0.0    5250000.0   
7540     1.329984e+06           0.00          0.00       60.0     900000.0   
30169    5.285100e+03       41022.00          0.00        0.0     750000.0   
13879    0.000000e+00           0.00          0.00        0.0    1400000.0   
33377    0.000000e+00           0.00          0.00        0.0     700000.0   
...               ...            ...           ...        ...          ...   
29541    0.000000e+00           0.00          0.00        0.0     580000.0   
16826    0.000000e+00           0.00          0.00        0.0    1500000.0   
23554    7.169794e+04           0.00          0.00        0.0     400000.0   
23012    8.962524e+05      510263.75     363323.75        0.0    2190000.0   
33047    6.386579e+05       50000.00          0.00        0.0     700000.0   

       Pago.del.Mes  ...      nivel_educativo  estado_civil  Genero  PAC  \
5694            0.0  ...  tecnico_tecnologico      separado       M    1   
7540            0.0  ...           secundaria       soltero       F    2   
30169           0.0  ...             primaria         viudo       M    3   
13879           0.0  ...  tecnico_tecnologico         viudo       F    1   
33377           0.0  ...             primaria        casado       M    3   
...             ...  ...                  ...           ...     ...  ...   
29541           0.0  ...             primaria       soltero       F    3   
16826           0.0  ...  tecnico_tecnologico        casado       F    1   
23554           0.0  ...             primaria      separado       F    3   
23012           0.0  ...  tecnico_tecnologico         viudo       M    1   
33047           0.0  ...             primaria       soltero       F    3   

      contrato estrato  cuota_monetaria sub_vivenda bono_lonchera porc_avances  
5694         4     NaN                0           0             0          0.5  
7540         4     NaN                1           0             1          0.3  
30169        3     NaN                1           0             1          0.3  
13879        4     NaN                0           0             0          0.4  
33377        1     NaN                1           0             1          0.3  
...        ...     ...              ...         ...           ...          ...  
29541        2     NaN                1           0             1          0.3  
16826        1     NaN                0           0             0          0.4  
23554        4     NaN                1           0             1          0.3  
23012        4     NaN                0           0             0          0.4  
33047        3     NaN                1           0             1          0.3  

[15001 rows x 27 columns]
2023-05-13 20:31:36,749:INFO:get_config() successfully completed......................................
2023-05-13 20:31:36,749:INFO:Initializing get_config()
2023-05-13 20:31:36,749:INFO:get_config(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001C888B22490>, variable=y_test)
2023-05-13 20:31:36,750:INFO:Variable: 'y_test' used to return the transformed values in PyCaret 2.x. From PyCaret 3.x, this will return the raw values. If you need the transformed values, call get_config with 'y_test_transformed' instead.
2023-05-13 20:31:36,750:WARNING:c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\pycaret\internal\pycaret_experiment\pycaret_experiment.py:322: UserWarning: Variable: 'y_test' used to return the transformed values in PyCaret 2.x. From PyCaret 3.x, this will return the raw values. If you need the transformed values, call get_config with 'y_test_transformed' instead.
  warnings.warn(msg)  # print on screen

2023-05-13 20:31:36,755:INFO:Variable:  returned as 5694     0
7540     0
30169    0
13879    0
33377    0
        ..
29541    0
16826    0
23554    0
23012    0
33047    0
Name: Target, Length: 15001, dtype: category
Categories (2, object): ['0', '1']
2023-05-13 20:31:36,755:INFO:get_config() successfully completed......................................
2023-05-13 20:32:52,128:INFO:Initializing get_config()
2023-05-13 20:32:52,129:INFO:get_config(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001C888B22490>, variable=X_test)
2023-05-13 20:32:52,130:INFO:Variable: 'X_test' used to return the transformed values in PyCaret 2.x. From PyCaret 3.x, this will return the raw values. If you need the transformed values, call get_config with 'X_test_transformed' instead.
2023-05-13 20:32:52,130:WARNING:c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\pycaret\internal\pycaret_experiment\pycaret_experiment.py:322: UserWarning: Variable: 'X_test' used to return the transformed values in PyCaret 2.x. From PyCaret 3.x, this will return the raw values. If you need the transformed values, call get_config with 'X_test_transformed' instead.
  warnings.warn(msg)  # print on screen

2023-05-13 20:32:52,157:INFO:Variable:  returned as       Fecha.Expedicion  Disponible.Avances  Limite.Avances  Total.Intereses  \
5694        2010-03-19           2625000.0       2625000.0         0.000000   
7540        2008-07-10                 0.0        270000.0    494045.468750   
30169       2014-06-03            225000.0        225000.0       338.959991   
13879       2016-07-27            560000.0        560000.0         0.000000   
33377       2016-02-03            210000.0        210000.0         0.000000   
...                ...                 ...             ...              ...   
29541       2018-02-14            174000.0        174000.0         0.000000   
16826       2009-08-27            600000.0        600000.0         0.000000   
23554       2013-04-11            120000.0        120000.0       613.940002   
23012       2014-04-25            876000.0        876000.0     20172.650391   
33047       2016-03-23             10300.0        210000.0     13705.400391   

       Saldos.Mes.Ant  Pagos.Mes.Ant  Vtas.Mes.Ant  Edad.Mora  Limite.Cupo  \
5694     0.000000e+00           0.00          0.00        0.0    5250000.0   
7540     1.329984e+06           0.00          0.00       60.0     900000.0   
30169    5.285100e+03       41022.00          0.00        0.0     750000.0   
13879    0.000000e+00           0.00          0.00        0.0    1400000.0   
33377    0.000000e+00           0.00          0.00        0.0     700000.0   
...               ...            ...           ...        ...          ...   
29541    0.000000e+00           0.00          0.00        0.0     580000.0   
16826    0.000000e+00           0.00          0.00        0.0    1500000.0   
23554    7.169794e+04           0.00          0.00        0.0     400000.0   
23012    8.962524e+05      510263.75     363323.75        0.0    2190000.0   
33047    6.386579e+05       50000.00          0.00        0.0     700000.0   

       Pago.del.Mes  ...      nivel_educativo  estado_civil  Genero  PAC  \
5694            0.0  ...  tecnico_tecnologico      separado       M    1   
7540            0.0  ...           secundaria       soltero       F    2   
30169           0.0  ...             primaria         viudo       M    3   
13879           0.0  ...  tecnico_tecnologico         viudo       F    1   
33377           0.0  ...             primaria        casado       M    3   
...             ...  ...                  ...           ...     ...  ...   
29541           0.0  ...             primaria       soltero       F    3   
16826           0.0  ...  tecnico_tecnologico        casado       F    1   
23554           0.0  ...             primaria      separado       F    3   
23012           0.0  ...  tecnico_tecnologico         viudo       M    1   
33047           0.0  ...             primaria       soltero       F    3   

      contrato estrato  cuota_monetaria sub_vivenda bono_lonchera porc_avances  
5694         4     NaN                0           0             0          0.5  
7540         4     NaN                1           0             1          0.3  
30169        3     NaN                1           0             1          0.3  
13879        4     NaN                0           0             0          0.4  
33377        1     NaN                1           0             1          0.3  
...        ...     ...              ...         ...           ...          ...  
29541        2     NaN                1           0             1          0.3  
16826        1     NaN                0           0             0          0.4  
23554        4     NaN                1           0             1          0.3  
23012        4     NaN                0           0             0          0.4  
33047        3     NaN                1           0             1          0.3  

[15001 rows x 27 columns]
2023-05-13 20:32:52,157:INFO:get_config() successfully completed......................................
2023-05-13 20:32:52,157:INFO:Initializing get_config()
2023-05-13 20:32:52,157:INFO:get_config(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001C888B22490>, variable=y_test)
2023-05-13 20:32:52,158:INFO:Variable: 'y_test' used to return the transformed values in PyCaret 2.x. From PyCaret 3.x, this will return the raw values. If you need the transformed values, call get_config with 'y_test_transformed' instead.
2023-05-13 20:32:52,158:WARNING:c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\pycaret\internal\pycaret_experiment\pycaret_experiment.py:322: UserWarning: Variable: 'y_test' used to return the transformed values in PyCaret 2.x. From PyCaret 3.x, this will return the raw values. If you need the transformed values, call get_config with 'y_test_transformed' instead.
  warnings.warn(msg)  # print on screen

2023-05-13 20:32:52,168:INFO:Variable:  returned as 5694     0
7540     0
30169    0
13879    0
33377    0
        ..
29541    0
16826    0
23554    0
23012    0
33047    0
Name: Target, Length: 15001, dtype: category
Categories (2, object): ['0', '1']
2023-05-13 20:32:52,169:INFO:get_config() successfully completed......................................
2023-05-13 20:32:52,174:INFO:Initializing predict_model()
2023-05-13 20:32:52,174:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001C888B22490>, estimator=LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=123, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0), probability_threshold=None, encoded_labels=False, raw_score=True, round=4, verbose=True, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x000001C88B959160>)
2023-05-13 20:32:52,175:INFO:Checking exceptions
2023-05-13 20:32:52,175:INFO:Preloading libraries
2023-05-13 20:32:52,177:INFO:Set up data.
2023-05-13 20:32:52,205:INFO:Set up index.
2023-05-13 20:33:11,607:INFO:Initializing get_config()
2023-05-13 20:33:11,607:INFO:get_config(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001C888B22490>, variable=X_test)
2023-05-13 20:33:11,608:INFO:Variable: 'X_test' used to return the transformed values in PyCaret 2.x. From PyCaret 3.x, this will return the raw values. If you need the transformed values, call get_config with 'X_test_transformed' instead.
2023-05-13 20:33:11,608:WARNING:c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\pycaret\internal\pycaret_experiment\pycaret_experiment.py:322: UserWarning: Variable: 'X_test' used to return the transformed values in PyCaret 2.x. From PyCaret 3.x, this will return the raw values. If you need the transformed values, call get_config with 'X_test_transformed' instead.
  warnings.warn(msg)  # print on screen

2023-05-13 20:33:11,639:INFO:Variable:  returned as       Fecha.Expedicion  Disponible.Avances  Limite.Avances  Total.Intereses  \
5694        2010-03-19           2625000.0       2625000.0         0.000000   
7540        2008-07-10                 0.0        270000.0    494045.468750   
30169       2014-06-03            225000.0        225000.0       338.959991   
13879       2016-07-27            560000.0        560000.0         0.000000   
33377       2016-02-03            210000.0        210000.0         0.000000   
...                ...                 ...             ...              ...   
29541       2018-02-14            174000.0        174000.0         0.000000   
16826       2009-08-27            600000.0        600000.0         0.000000   
23554       2013-04-11            120000.0        120000.0       613.940002   
23012       2014-04-25            876000.0        876000.0     20172.650391   
33047       2016-03-23             10300.0        210000.0     13705.400391   

       Saldos.Mes.Ant  Pagos.Mes.Ant  Vtas.Mes.Ant  Edad.Mora  Limite.Cupo  \
5694     0.000000e+00           0.00          0.00        0.0    5250000.0   
7540     1.329984e+06           0.00          0.00       60.0     900000.0   
30169    5.285100e+03       41022.00          0.00        0.0     750000.0   
13879    0.000000e+00           0.00          0.00        0.0    1400000.0   
33377    0.000000e+00           0.00          0.00        0.0     700000.0   
...               ...            ...           ...        ...          ...   
29541    0.000000e+00           0.00          0.00        0.0     580000.0   
16826    0.000000e+00           0.00          0.00        0.0    1500000.0   
23554    7.169794e+04           0.00          0.00        0.0     400000.0   
23012    8.962524e+05      510263.75     363323.75        0.0    2190000.0   
33047    6.386579e+05       50000.00          0.00        0.0     700000.0   

       Pago.del.Mes  ...      nivel_educativo  estado_civil  Genero  PAC  \
5694            0.0  ...  tecnico_tecnologico      separado       M    1   
7540            0.0  ...           secundaria       soltero       F    2   
30169           0.0  ...             primaria         viudo       M    3   
13879           0.0  ...  tecnico_tecnologico         viudo       F    1   
33377           0.0  ...             primaria        casado       M    3   
...             ...  ...                  ...           ...     ...  ...   
29541           0.0  ...             primaria       soltero       F    3   
16826           0.0  ...  tecnico_tecnologico        casado       F    1   
23554           0.0  ...             primaria      separado       F    3   
23012           0.0  ...  tecnico_tecnologico         viudo       M    1   
33047           0.0  ...             primaria       soltero       F    3   

      contrato estrato  cuota_monetaria sub_vivenda bono_lonchera porc_avances  
5694         4     NaN                0           0             0          0.5  
7540         4     NaN                1           0             1          0.3  
30169        3     NaN                1           0             1          0.3  
13879        4     NaN                0           0             0          0.4  
33377        1     NaN                1           0             1          0.3  
...        ...     ...              ...         ...           ...          ...  
29541        2     NaN                1           0             1          0.3  
16826        1     NaN                0           0             0          0.4  
23554        4     NaN                1           0             1          0.3  
23012        4     NaN                0           0             0          0.4  
33047        3     NaN                1           0             1          0.3  

[15001 rows x 27 columns]
2023-05-13 20:33:11,639:INFO:get_config() successfully completed......................................
2023-05-13 20:33:11,639:INFO:Initializing get_config()
2023-05-13 20:33:11,639:INFO:get_config(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001C888B22490>, variable=y_test)
2023-05-13 20:33:11,639:INFO:Variable: 'y_test' used to return the transformed values in PyCaret 2.x. From PyCaret 3.x, this will return the raw values. If you need the transformed values, call get_config with 'y_test_transformed' instead.
2023-05-13 20:33:11,639:WARNING:c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\pycaret\internal\pycaret_experiment\pycaret_experiment.py:322: UserWarning: Variable: 'y_test' used to return the transformed values in PyCaret 2.x. From PyCaret 3.x, this will return the raw values. If you need the transformed values, call get_config with 'y_test_transformed' instead.
  warnings.warn(msg)  # print on screen

2023-05-13 20:33:11,647:INFO:Variable:  returned as 5694     0
7540     0
30169    0
13879    0
33377    0
        ..
29541    0
16826    0
23554    0
23012    0
33047    0
Name: Target, Length: 15001, dtype: category
Categories (2, object): ['0', '1']
2023-05-13 20:33:11,647:INFO:get_config() successfully completed......................................
2023-05-13 20:33:11,653:INFO:Initializing predict_model()
2023-05-13 20:33:11,653:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001C888B22490>, estimator=LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=123, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0), probability_threshold=None, encoded_labels=False, raw_score=True, round=4, verbose=True, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x000001C888C66E50>)
2023-05-13 20:33:11,653:INFO:Checking exceptions
2023-05-13 20:33:11,653:INFO:Preloading libraries
2023-05-13 20:33:11,657:INFO:Set up data.
2023-05-13 20:33:11,679:INFO:Set up index.
2023-05-13 20:37:23,113:INFO:Initializing get_config()
2023-05-13 20:37:23,113:INFO:get_config(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001C888B22490>, variable=X_test)
2023-05-13 20:37:23,114:INFO:Variable: 'X_test' used to return the transformed values in PyCaret 2.x. From PyCaret 3.x, this will return the raw values. If you need the transformed values, call get_config with 'X_test_transformed' instead.
2023-05-13 20:37:23,115:WARNING:c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\pycaret\internal\pycaret_experiment\pycaret_experiment.py:322: UserWarning: Variable: 'X_test' used to return the transformed values in PyCaret 2.x. From PyCaret 3.x, this will return the raw values. If you need the transformed values, call get_config with 'X_test_transformed' instead.
  warnings.warn(msg)  # print on screen

2023-05-13 20:37:23,144:INFO:Variable:  returned as       Fecha.Expedicion  Disponible.Avances  Limite.Avances  Total.Intereses  \
5694        2010-03-19           2625000.0       2625000.0         0.000000   
7540        2008-07-10                 0.0        270000.0    494045.468750   
30169       2014-06-03            225000.0        225000.0       338.959991   
13879       2016-07-27            560000.0        560000.0         0.000000   
33377       2016-02-03            210000.0        210000.0         0.000000   
...                ...                 ...             ...              ...   
29541       2018-02-14            174000.0        174000.0         0.000000   
16826       2009-08-27            600000.0        600000.0         0.000000   
23554       2013-04-11            120000.0        120000.0       613.940002   
23012       2014-04-25            876000.0        876000.0     20172.650391   
33047       2016-03-23             10300.0        210000.0     13705.400391   

       Saldos.Mes.Ant  Pagos.Mes.Ant  Vtas.Mes.Ant  Edad.Mora  Limite.Cupo  \
5694     0.000000e+00           0.00          0.00        0.0    5250000.0   
7540     1.329984e+06           0.00          0.00       60.0     900000.0   
30169    5.285100e+03       41022.00          0.00        0.0     750000.0   
13879    0.000000e+00           0.00          0.00        0.0    1400000.0   
33377    0.000000e+00           0.00          0.00        0.0     700000.0   
...               ...            ...           ...        ...          ...   
29541    0.000000e+00           0.00          0.00        0.0     580000.0   
16826    0.000000e+00           0.00          0.00        0.0    1500000.0   
23554    7.169794e+04           0.00          0.00        0.0     400000.0   
23012    8.962524e+05      510263.75     363323.75        0.0    2190000.0   
33047    6.386579e+05       50000.00          0.00        0.0     700000.0   

       Pago.del.Mes  ...      nivel_educativo  estado_civil  Genero  PAC  \
5694            0.0  ...  tecnico_tecnologico      separado       M    1   
7540            0.0  ...           secundaria       soltero       F    2   
30169           0.0  ...             primaria         viudo       M    3   
13879           0.0  ...  tecnico_tecnologico         viudo       F    1   
33377           0.0  ...             primaria        casado       M    3   
...             ...  ...                  ...           ...     ...  ...   
29541           0.0  ...             primaria       soltero       F    3   
16826           0.0  ...  tecnico_tecnologico        casado       F    1   
23554           0.0  ...             primaria      separado       F    3   
23012           0.0  ...  tecnico_tecnologico         viudo       M    1   
33047           0.0  ...             primaria       soltero       F    3   

      contrato estrato  cuota_monetaria sub_vivenda bono_lonchera porc_avances  
5694         4     NaN                0           0             0          0.5  
7540         4     NaN                1           0             1          0.3  
30169        3     NaN                1           0             1          0.3  
13879        4     NaN                0           0             0          0.4  
33377        1     NaN                1           0             1          0.3  
...        ...     ...              ...         ...           ...          ...  
29541        2     NaN                1           0             1          0.3  
16826        1     NaN                0           0             0          0.4  
23554        4     NaN                1           0             1          0.3  
23012        4     NaN                0           0             0          0.4  
33047        3     NaN                1           0             1          0.3  

[15001 rows x 27 columns]
2023-05-13 20:37:23,144:INFO:get_config() successfully completed......................................
2023-05-13 20:37:23,144:INFO:Initializing get_config()
2023-05-13 20:37:23,144:INFO:get_config(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001C888B22490>, variable=y_test)
2023-05-13 20:37:23,145:INFO:Variable: 'y_test' used to return the transformed values in PyCaret 2.x. From PyCaret 3.x, this will return the raw values. If you need the transformed values, call get_config with 'y_test_transformed' instead.
2023-05-13 20:37:23,145:WARNING:c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\pycaret\internal\pycaret_experiment\pycaret_experiment.py:322: UserWarning: Variable: 'y_test' used to return the transformed values in PyCaret 2.x. From PyCaret 3.x, this will return the raw values. If you need the transformed values, call get_config with 'y_test_transformed' instead.
  warnings.warn(msg)  # print on screen

2023-05-13 20:37:23,152:INFO:Variable:  returned as 5694     0
7540     0
30169    0
13879    0
33377    0
        ..
29541    0
16826    0
23554    0
23012    0
33047    0
Name: Target, Length: 15001, dtype: category
Categories (2, object): ['0', '1']
2023-05-13 20:37:23,152:INFO:get_config() successfully completed......................................
2023-05-13 20:37:23,159:INFO:Initializing predict_model()
2023-05-13 20:37:23,159:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001C888B22490>, estimator=LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=123, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x000001C889BFD670>)
2023-05-13 20:37:23,159:INFO:Checking exceptions
2023-05-13 20:37:23,159:INFO:Preloading libraries
2023-05-13 20:37:23,161:INFO:Set up data.
2023-05-13 20:37:23,181:INFO:Set up index.
2023-05-13 20:37:34,737:INFO:Initializing get_config()
2023-05-13 20:37:34,737:INFO:get_config(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001C888B22490>, variable=X_test)
2023-05-13 20:37:34,738:INFO:Variable: 'X_test' used to return the transformed values in PyCaret 2.x. From PyCaret 3.x, this will return the raw values. If you need the transformed values, call get_config with 'X_test_transformed' instead.
2023-05-13 20:37:34,738:WARNING:c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\pycaret\internal\pycaret_experiment\pycaret_experiment.py:322: UserWarning: Variable: 'X_test' used to return the transformed values in PyCaret 2.x. From PyCaret 3.x, this will return the raw values. If you need the transformed values, call get_config with 'X_test_transformed' instead.
  warnings.warn(msg)  # print on screen

2023-05-13 20:37:34,770:INFO:Variable:  returned as       Fecha.Expedicion  Disponible.Avances  Limite.Avances  Total.Intereses  \
5694        2010-03-19           2625000.0       2625000.0         0.000000   
7540        2008-07-10                 0.0        270000.0    494045.468750   
30169       2014-06-03            225000.0        225000.0       338.959991   
13879       2016-07-27            560000.0        560000.0         0.000000   
33377       2016-02-03            210000.0        210000.0         0.000000   
...                ...                 ...             ...              ...   
29541       2018-02-14            174000.0        174000.0         0.000000   
16826       2009-08-27            600000.0        600000.0         0.000000   
23554       2013-04-11            120000.0        120000.0       613.940002   
23012       2014-04-25            876000.0        876000.0     20172.650391   
33047       2016-03-23             10300.0        210000.0     13705.400391   

       Saldos.Mes.Ant  Pagos.Mes.Ant  Vtas.Mes.Ant  Edad.Mora  Limite.Cupo  \
5694     0.000000e+00           0.00          0.00        0.0    5250000.0   
7540     1.329984e+06           0.00          0.00       60.0     900000.0   
30169    5.285100e+03       41022.00          0.00        0.0     750000.0   
13879    0.000000e+00           0.00          0.00        0.0    1400000.0   
33377    0.000000e+00           0.00          0.00        0.0     700000.0   
...               ...            ...           ...        ...          ...   
29541    0.000000e+00           0.00          0.00        0.0     580000.0   
16826    0.000000e+00           0.00          0.00        0.0    1500000.0   
23554    7.169794e+04           0.00          0.00        0.0     400000.0   
23012    8.962524e+05      510263.75     363323.75        0.0    2190000.0   
33047    6.386579e+05       50000.00          0.00        0.0     700000.0   

       Pago.del.Mes  ...      nivel_educativo  estado_civil  Genero  PAC  \
5694            0.0  ...  tecnico_tecnologico      separado       M    1   
7540            0.0  ...           secundaria       soltero       F    2   
30169           0.0  ...             primaria         viudo       M    3   
13879           0.0  ...  tecnico_tecnologico         viudo       F    1   
33377           0.0  ...             primaria        casado       M    3   
...             ...  ...                  ...           ...     ...  ...   
29541           0.0  ...             primaria       soltero       F    3   
16826           0.0  ...  tecnico_tecnologico        casado       F    1   
23554           0.0  ...             primaria      separado       F    3   
23012           0.0  ...  tecnico_tecnologico         viudo       M    1   
33047           0.0  ...             primaria       soltero       F    3   

      contrato estrato  cuota_monetaria sub_vivenda bono_lonchera porc_avances  
5694         4     NaN                0           0             0          0.5  
7540         4     NaN                1           0             1          0.3  
30169        3     NaN                1           0             1          0.3  
13879        4     NaN                0           0             0          0.4  
33377        1     NaN                1           0             1          0.3  
...        ...     ...              ...         ...           ...          ...  
29541        2     NaN                1           0             1          0.3  
16826        1     NaN                0           0             0          0.4  
23554        4     NaN                1           0             1          0.3  
23012        4     NaN                0           0             0          0.4  
33047        3     NaN                1           0             1          0.3  

[15001 rows x 27 columns]
2023-05-13 20:37:34,771:INFO:get_config() successfully completed......................................
2023-05-13 20:37:34,771:INFO:Initializing get_config()
2023-05-13 20:37:34,771:INFO:get_config(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001C888B22490>, variable=y_test)
2023-05-13 20:37:34,771:INFO:Variable: 'y_test' used to return the transformed values in PyCaret 2.x. From PyCaret 3.x, this will return the raw values. If you need the transformed values, call get_config with 'y_test_transformed' instead.
2023-05-13 20:37:34,771:WARNING:c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\pycaret\internal\pycaret_experiment\pycaret_experiment.py:322: UserWarning: Variable: 'y_test' used to return the transformed values in PyCaret 2.x. From PyCaret 3.x, this will return the raw values. If you need the transformed values, call get_config with 'y_test_transformed' instead.
  warnings.warn(msg)  # print on screen

2023-05-13 20:37:34,781:INFO:Variable:  returned as 5694     0
7540     0
30169    0
13879    0
33377    0
        ..
29541    0
16826    0
23554    0
23012    0
33047    0
Name: Target, Length: 15001, dtype: category
Categories (2, object): ['0', '1']
2023-05-13 20:37:34,781:INFO:get_config() successfully completed......................................
2023-05-13 20:37:34,786:INFO:Initializing predict_model()
2023-05-13 20:37:34,786:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001C888B22490>, estimator=LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=123, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0), probability_threshold=None, encoded_labels=False, raw_score=True, round=4, verbose=True, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x000001C88FF76D30>)
2023-05-13 20:37:34,786:INFO:Checking exceptions
2023-05-13 20:37:34,786:INFO:Preloading libraries
2023-05-13 20:37:34,791:INFO:Set up data.
2023-05-13 20:37:34,812:INFO:Set up index.
2023-05-13 21:26:00,340:INFO:Initializing plot_model()
2023-05-13 21:26:00,341:INFO:plot_model(plot=auc, fold=None, use_train_data=False, verbose=True, display=None, display_format=None, estimator=LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=123, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001C888B22490>, system=True)
2023-05-13 21:26:00,341:INFO:Checking exceptions
2023-05-13 21:26:00,355:INFO:Preloading libraries
2023-05-13 21:26:00,366:INFO:Copying training dataset
2023-05-13 21:26:00,367:INFO:Plot type: auc
2023-05-13 21:26:00,693:INFO:Fitting Model
2023-05-13 21:26:00,694:INFO:Scoring test/hold-out set
2023-05-13 21:26:01,185:INFO:Visual Rendered Successfully
2023-05-13 21:26:01,338:INFO:plot_model() successfully completed......................................
2023-05-13 21:26:01,339:INFO:Initializing plot_model()
2023-05-13 21:26:01,339:INFO:plot_model(plot=feature, fold=None, use_train_data=False, verbose=True, display=None, display_format=None, estimator=LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=123, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001C888B22490>, system=True)
2023-05-13 21:26:01,339:INFO:Checking exceptions
2023-05-13 21:26:01,350:INFO:Preloading libraries
2023-05-13 21:26:01,359:INFO:Copying training dataset
2023-05-13 21:26:01,359:INFO:Plot type: feature
2023-05-13 21:26:01,360:WARNING:No coef_ found. Trying feature_importances_
2023-05-13 21:26:01,814:INFO:Visual Rendered Successfully
2023-05-13 21:26:01,965:INFO:plot_model() successfully completed......................................
2023-05-13 21:26:01,966:INFO:Initializing plot_model()
2023-05-13 21:26:01,966:INFO:plot_model(plot=optimize_threshold, fold=None, use_train_data=False, verbose=True, display=None, display_format=None, estimator=LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=123, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001C888B22490>, system=True)
2023-05-13 21:26:01,966:INFO:Checking exceptions
2023-05-13 21:28:07,481:INFO:Initializing plot_model()
2023-05-13 21:28:07,481:INFO:plot_model(plot=auc, fold=None, use_train_data=False, verbose=True, display=None, display_format=None, estimator=LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=123, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001C888B22490>, system=True)
2023-05-13 21:28:07,481:INFO:Checking exceptions
2023-05-13 21:28:07,496:INFO:Preloading libraries
2023-05-13 21:28:07,505:INFO:Copying training dataset
2023-05-13 21:28:07,505:INFO:Plot type: auc
2023-05-13 21:28:07,904:INFO:Fitting Model
2023-05-13 21:28:07,911:INFO:Scoring test/hold-out set
2023-05-13 21:28:08,494:INFO:Visual Rendered Successfully
2023-05-13 21:28:08,645:INFO:plot_model() successfully completed......................................
2023-05-13 21:28:08,647:INFO:Initializing plot_model()
2023-05-13 21:28:08,648:INFO:plot_model(plot=feature, fold=None, use_train_data=False, verbose=True, display=None, display_format=None, estimator=LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=123, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001C888B22490>, system=True)
2023-05-13 21:28:08,648:INFO:Checking exceptions
2023-05-13 21:28:08,661:INFO:Preloading libraries
2023-05-13 21:28:08,671:INFO:Copying training dataset
2023-05-13 21:28:08,672:INFO:Plot type: feature
2023-05-13 21:28:08,672:WARNING:No coef_ found. Trying feature_importances_
2023-05-13 21:28:09,133:INFO:Visual Rendered Successfully
2023-05-13 21:28:09,277:INFO:plot_model() successfully completed......................................
2023-05-13 21:28:34,998:INFO:Initializing optimize_threshold()
2023-05-13 21:28:34,998:INFO:optimize_threshold(return_data=False, plot_kwargs=None, shgo_kwargs={}, estimator=LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=123, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0), optimize=Accuracy, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001C888B22490>)
2023-05-13 21:28:34,998:INFO:Importing libraries
2023-05-13 21:28:34,998:INFO:Checking exceptions
2023-05-13 21:28:34,999:INFO:defining variables
2023-05-13 21:28:34,999:INFO:starting optimization
2023-05-13 21:28:35,035:INFO:Initializing create_model()
2023-05-13 21:28:35,035:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001C888B22490>, estimator=LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=123, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0), fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=0.0, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-05-13 21:28:35,035:INFO:Checking exceptions
2023-05-13 21:28:35,038:INFO:Importing libraries
2023-05-13 21:28:35,038:INFO:Copying training dataset
2023-05-13 21:28:35,061:INFO:Defining folds
2023-05-13 21:28:35,061:INFO:Declaring metric variables
2023-05-13 21:28:35,062:INFO:Importing untrained model
2023-05-13 21:28:35,062:INFO:Declaring custom model
2023-05-13 21:28:35,063:INFO:Light Gradient Boosting Machine Imported successfully
2023-05-13 21:28:35,063:INFO:Starting cross validation
2023-05-13 21:28:35,067:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-05-13 21:28:54,260:INFO:Calculating mean and std
2023-05-13 21:28:54,260:INFO:Creating metrics dataframe
2023-05-13 21:28:54,263:INFO:Finalizing model
2023-05-13 21:28:56,784:INFO:Uploading results into container
2023-05-13 21:28:56,785:INFO:Uploading model into container now
2023-05-13 21:28:56,785:INFO:_master_model_container: 28
2023-05-13 21:28:56,785:INFO:_display_container: 15
2023-05-13 21:28:56,788:INFO:CustomProbabilityThresholdClassifier(boosting_type='gbdt', class_weight=None,
                                     classifier=LGBMClassifier(boosting_type='gbdt',
                                                               class_weight=None,
                                                               colsample_bytree=1.0,
                                                               importance_type='split',
                                                               learning_rate=0.1,
                                                               max_depth=-1,
                                                               min_child_samples=20,
                                                               min_child_weight=0.001,
                                                               min_split_gain=0.0,
                                                               n_estimators=100,
                                                               n_jobs=-1,
                                                               num_leaves=31,
                                                               objective=None,
                                                               random_state=1...
                                                               subsample_freq=0),
                                     colsample_bytree=1.0,
                                     importance_type='split', learning_rate=0.1,
                                     max_depth=-1, min_child_samples=20,
                                     min_child_weight=0.001, min_split_gain=0.0,
                                     n_estimators=100, n_jobs=-1, num_leaves=31,
                                     objective=None, probability_threshold=0.0,
                                     random_state=123, reg_alpha=0.0,
                                     reg_lambda=0.0, silent='warn',
                                     subsample=1.0, subsample_for_bin=200000,
                                     subsample_freq=0)
2023-05-13 21:28:56,788:INFO:create_model() successfully completed......................................
2023-05-13 21:28:56,922:INFO:Initializing create_model()
2023-05-13 21:28:56,923:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001C888B22490>, estimator=LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=123, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0), fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=0.5, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-05-13 21:28:56,923:INFO:Checking exceptions
2023-05-13 21:28:56,924:INFO:Importing libraries
2023-05-13 21:28:56,924:INFO:Copying training dataset
2023-05-13 21:28:56,945:INFO:Defining folds
2023-05-13 21:28:56,945:INFO:Declaring metric variables
2023-05-13 21:28:56,945:INFO:Importing untrained model
2023-05-13 21:28:56,945:INFO:Declaring custom model
2023-05-13 21:28:56,946:INFO:Light Gradient Boosting Machine Imported successfully
2023-05-13 21:28:56,946:INFO:Starting cross validation
2023-05-13 21:28:56,953:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-05-13 21:29:09,485:INFO:Calculating mean and std
2023-05-13 21:29:09,486:INFO:Creating metrics dataframe
2023-05-13 21:29:09,488:INFO:Finalizing model
2023-05-13 21:29:11,944:INFO:Uploading results into container
2023-05-13 21:29:11,944:INFO:Uploading model into container now
2023-05-13 21:29:11,945:INFO:_master_model_container: 29
2023-05-13 21:29:11,945:INFO:_display_container: 15
2023-05-13 21:29:11,947:INFO:CustomProbabilityThresholdClassifier(boosting_type='gbdt', class_weight=None,
                                     classifier=LGBMClassifier(boosting_type='gbdt',
                                                               class_weight=None,
                                                               colsample_bytree=1.0,
                                                               importance_type='split',
                                                               learning_rate=0.1,
                                                               max_depth=-1,
                                                               min_child_samples=20,
                                                               min_child_weight=0.001,
                                                               min_split_gain=0.0,
                                                               n_estimators=100,
                                                               n_jobs=-1,
                                                               num_leaves=31,
                                                               objective=None,
                                                               random_state=1...
                                                               subsample_freq=0),
                                     colsample_bytree=1.0,
                                     importance_type='split', learning_rate=0.1,
                                     max_depth=-1, min_child_samples=20,
                                     min_child_weight=0.001, min_split_gain=0.0,
                                     n_estimators=100, n_jobs=-1, num_leaves=31,
                                     objective=None, probability_threshold=0.5,
                                     random_state=123, reg_alpha=0.0,
                                     reg_lambda=0.0, silent='warn',
                                     subsample=1.0, subsample_for_bin=200000,
                                     subsample_freq=0)
2023-05-13 21:29:11,947:INFO:create_model() successfully completed......................................
2023-05-13 21:29:12,084:INFO:Initializing create_model()
2023-05-13 21:29:12,084:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001C888B22490>, estimator=LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=123, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0), fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=0.75, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-05-13 21:29:12,084:INFO:Checking exceptions
2023-05-13 21:29:12,086:INFO:Importing libraries
2023-05-13 21:29:12,086:INFO:Copying training dataset
2023-05-13 21:29:12,106:INFO:Defining folds
2023-05-13 21:29:12,106:INFO:Declaring metric variables
2023-05-13 21:29:12,106:INFO:Importing untrained model
2023-05-13 21:29:12,106:INFO:Declaring custom model
2023-05-13 21:29:12,107:INFO:Light Gradient Boosting Machine Imported successfully
2023-05-13 21:29:12,107:INFO:Starting cross validation
2023-05-13 21:29:12,111:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-05-13 21:29:24,290:INFO:Calculating mean and std
2023-05-13 21:29:24,290:INFO:Creating metrics dataframe
2023-05-13 21:29:24,292:INFO:Finalizing model
2023-05-13 21:29:26,656:INFO:Uploading results into container
2023-05-13 21:29:26,656:INFO:Uploading model into container now
2023-05-13 21:29:26,657:INFO:_master_model_container: 30
2023-05-13 21:29:26,657:INFO:_display_container: 15
2023-05-13 21:29:26,659:INFO:CustomProbabilityThresholdClassifier(boosting_type='gbdt', class_weight=None,
                                     classifier=LGBMClassifier(boosting_type='gbdt',
                                                               class_weight=None,
                                                               colsample_bytree=1.0,
                                                               importance_type='split',
                                                               learning_rate=0.1,
                                                               max_depth=-1,
                                                               min_child_samples=20,
                                                               min_child_weight=0.001,
                                                               min_split_gain=0.0,
                                                               n_estimators=100,
                                                               n_jobs=-1,
                                                               num_leaves=31,
                                                               objective=None,
                                                               random_state=1...
                                                               subsample_freq=0),
                                     colsample_bytree=1.0,
                                     importance_type='split', learning_rate=0.1,
                                     max_depth=-1, min_child_samples=20,
                                     min_child_weight=0.001, min_split_gain=0.0,
                                     n_estimators=100, n_jobs=-1, num_leaves=31,
                                     objective=None, probability_threshold=0.75,
                                     random_state=123, reg_alpha=0.0,
                                     reg_lambda=0.0, silent='warn',
                                     subsample=1.0, subsample_for_bin=200000,
                                     subsample_freq=0)
2023-05-13 21:29:26,659:INFO:create_model() successfully completed......................................
2023-05-13 21:29:26,791:INFO:Initializing create_model()
2023-05-13 21:29:26,791:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001C888B22490>, estimator=LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=123, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0), fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=0.25, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-05-13 21:29:26,791:INFO:Checking exceptions
2023-05-13 21:29:26,793:INFO:Importing libraries
2023-05-13 21:29:26,793:INFO:Copying training dataset
2023-05-13 21:29:26,813:INFO:Defining folds
2023-05-13 21:29:26,813:INFO:Declaring metric variables
2023-05-13 21:29:26,813:INFO:Importing untrained model
2023-05-13 21:29:26,813:INFO:Declaring custom model
2023-05-13 21:29:26,814:INFO:Light Gradient Boosting Machine Imported successfully
2023-05-13 21:29:26,815:INFO:Starting cross validation
2023-05-13 21:29:26,819:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-05-13 21:29:38,974:INFO:Calculating mean and std
2023-05-13 21:29:38,974:INFO:Creating metrics dataframe
2023-05-13 21:29:38,976:INFO:Finalizing model
2023-05-13 21:29:41,412:INFO:Uploading results into container
2023-05-13 21:29:41,413:INFO:Uploading model into container now
2023-05-13 21:29:41,413:INFO:_master_model_container: 31
2023-05-13 21:29:41,413:INFO:_display_container: 15
2023-05-13 21:29:41,415:INFO:CustomProbabilityThresholdClassifier(boosting_type='gbdt', class_weight=None,
                                     classifier=LGBMClassifier(boosting_type='gbdt',
                                                               class_weight=None,
                                                               colsample_bytree=1.0,
                                                               importance_type='split',
                                                               learning_rate=0.1,
                                                               max_depth=-1,
                                                               min_child_samples=20,
                                                               min_child_weight=0.001,
                                                               min_split_gain=0.0,
                                                               n_estimators=100,
                                                               n_jobs=-1,
                                                               num_leaves=31,
                                                               objective=None,
                                                               random_state=1...
                                                               subsample_freq=0),
                                     colsample_bytree=1.0,
                                     importance_type='split', learning_rate=0.1,
                                     max_depth=-1, min_child_samples=20,
                                     min_child_weight=0.001, min_split_gain=0.0,
                                     n_estimators=100, n_jobs=-1, num_leaves=31,
                                     objective=None, probability_threshold=0.25,
                                     random_state=123, reg_alpha=0.0,
                                     reg_lambda=0.0, silent='warn',
                                     subsample=1.0, subsample_for_bin=200000,
                                     subsample_freq=0)
2023-05-13 21:29:41,415:INFO:create_model() successfully completed......................................
2023-05-13 21:29:41,547:INFO:Initializing create_model()
2023-05-13 21:29:41,547:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001C888B22490>, estimator=LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=123, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0), fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=0.375, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-05-13 21:29:41,547:INFO:Checking exceptions
2023-05-13 21:29:41,549:INFO:Importing libraries
2023-05-13 21:29:41,549:INFO:Copying training dataset
2023-05-13 21:29:41,569:INFO:Defining folds
2023-05-13 21:29:41,570:INFO:Declaring metric variables
2023-05-13 21:29:41,570:INFO:Importing untrained model
2023-05-13 21:29:41,570:INFO:Declaring custom model
2023-05-13 21:29:41,571:INFO:Light Gradient Boosting Machine Imported successfully
2023-05-13 21:29:41,571:INFO:Starting cross validation
2023-05-13 21:29:41,575:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-05-13 21:29:53,908:INFO:Calculating mean and std
2023-05-13 21:29:53,908:INFO:Creating metrics dataframe
2023-05-13 21:29:53,911:INFO:Finalizing model
2023-05-13 21:29:56,366:INFO:Uploading results into container
2023-05-13 21:29:56,367:INFO:Uploading model into container now
2023-05-13 21:29:56,368:INFO:_master_model_container: 32
2023-05-13 21:29:56,368:INFO:_display_container: 15
2023-05-13 21:29:56,370:INFO:CustomProbabilityThresholdClassifier(boosting_type='gbdt', class_weight=None,
                                     classifier=LGBMClassifier(boosting_type='gbdt',
                                                               class_weight=None,
                                                               colsample_bytree=1.0,
                                                               importance_type='split',
                                                               learning_rate=0.1,
                                                               max_depth=-1,
                                                               min_child_samples=20,
                                                               min_child_weight=0.001,
                                                               min_split_gain=0.0,
                                                               n_estimators=100,
                                                               n_jobs=-1,
                                                               num_leaves=31,
                                                               objective=None,
                                                               random_state=1...
                                                               subsample_freq=0),
                                     colsample_bytree=1.0,
                                     importance_type='split', learning_rate=0.1,
                                     max_depth=-1, min_child_samples=20,
                                     min_child_weight=0.001, min_split_gain=0.0,
                                     n_estimators=100, n_jobs=-1, num_leaves=31,
                                     objective=None,
                                     probability_threshold=0.375,
                                     random_state=123, reg_alpha=0.0,
                                     reg_lambda=0.0, silent='warn',
                                     subsample=1.0, subsample_for_bin=200000,
                                     subsample_freq=0)
2023-05-13 21:29:56,370:INFO:create_model() successfully completed......................................
2023-05-13 21:29:56,504:INFO:Initializing create_model()
2023-05-13 21:29:56,504:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001C888B22490>, estimator=LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=123, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0), fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=0.875, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-05-13 21:29:56,505:INFO:Checking exceptions
2023-05-13 21:29:56,506:INFO:Importing libraries
2023-05-13 21:29:56,506:INFO:Copying training dataset
2023-05-13 21:29:56,528:INFO:Defining folds
2023-05-13 21:29:56,528:INFO:Declaring metric variables
2023-05-13 21:29:56,528:INFO:Importing untrained model
2023-05-13 21:29:56,528:INFO:Declaring custom model
2023-05-13 21:29:56,529:INFO:Light Gradient Boosting Machine Imported successfully
2023-05-13 21:29:56,529:INFO:Starting cross validation
2023-05-13 21:29:56,532:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-05-13 21:30:09,018:INFO:Calculating mean and std
2023-05-13 21:30:09,019:INFO:Creating metrics dataframe
2023-05-13 21:30:09,022:INFO:Finalizing model
2023-05-13 21:30:11,475:INFO:Uploading results into container
2023-05-13 21:30:11,476:INFO:Uploading model into container now
2023-05-13 21:30:11,476:INFO:_master_model_container: 33
2023-05-13 21:30:11,476:INFO:_display_container: 15
2023-05-13 21:30:11,478:INFO:CustomProbabilityThresholdClassifier(boosting_type='gbdt', class_weight=None,
                                     classifier=LGBMClassifier(boosting_type='gbdt',
                                                               class_weight=None,
                                                               colsample_bytree=1.0,
                                                               importance_type='split',
                                                               learning_rate=0.1,
                                                               max_depth=-1,
                                                               min_child_samples=20,
                                                               min_child_weight=0.001,
                                                               min_split_gain=0.0,
                                                               n_estimators=100,
                                                               n_jobs=-1,
                                                               num_leaves=31,
                                                               objective=None,
                                                               random_state=1...
                                                               subsample_freq=0),
                                     colsample_bytree=1.0,
                                     importance_type='split', learning_rate=0.1,
                                     max_depth=-1, min_child_samples=20,
                                     min_child_weight=0.001, min_split_gain=0.0,
                                     n_estimators=100, n_jobs=-1, num_leaves=31,
                                     objective=None,
                                     probability_threshold=0.875,
                                     random_state=123, reg_alpha=0.0,
                                     reg_lambda=0.0, silent='warn',
                                     subsample=1.0, subsample_for_bin=200000,
                                     subsample_freq=0)
2023-05-13 21:30:11,478:INFO:create_model() successfully completed......................................
2023-05-13 21:30:11,610:INFO:Initializing create_model()
2023-05-13 21:30:11,611:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001C888B22490>, estimator=LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=123, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0), fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=0.625, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-05-13 21:30:11,611:INFO:Checking exceptions
2023-05-13 21:30:11,612:INFO:Importing libraries
2023-05-13 21:30:11,612:INFO:Copying training dataset
2023-05-13 21:30:11,632:INFO:Defining folds
2023-05-13 21:30:11,633:INFO:Declaring metric variables
2023-05-13 21:30:11,633:INFO:Importing untrained model
2023-05-13 21:30:11,633:INFO:Declaring custom model
2023-05-13 21:30:11,634:INFO:Light Gradient Boosting Machine Imported successfully
2023-05-13 21:30:11,634:INFO:Starting cross validation
2023-05-13 21:30:11,637:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-05-13 21:30:24,263:INFO:Calculating mean and std
2023-05-13 21:30:24,263:INFO:Creating metrics dataframe
2023-05-13 21:30:24,266:INFO:Finalizing model
2023-05-13 21:30:26,705:INFO:Uploading results into container
2023-05-13 21:30:26,706:INFO:Uploading model into container now
2023-05-13 21:30:26,707:INFO:_master_model_container: 34
2023-05-13 21:30:26,707:INFO:_display_container: 15
2023-05-13 21:30:26,708:INFO:CustomProbabilityThresholdClassifier(boosting_type='gbdt', class_weight=None,
                                     classifier=LGBMClassifier(boosting_type='gbdt',
                                                               class_weight=None,
                                                               colsample_bytree=1.0,
                                                               importance_type='split',
                                                               learning_rate=0.1,
                                                               max_depth=-1,
                                                               min_child_samples=20,
                                                               min_child_weight=0.001,
                                                               min_split_gain=0.0,
                                                               n_estimators=100,
                                                               n_jobs=-1,
                                                               num_leaves=31,
                                                               objective=None,
                                                               random_state=1...
                                                               subsample_freq=0),
                                     colsample_bytree=1.0,
                                     importance_type='split', learning_rate=0.1,
                                     max_depth=-1, min_child_samples=20,
                                     min_child_weight=0.001, min_split_gain=0.0,
                                     n_estimators=100, n_jobs=-1, num_leaves=31,
                                     objective=None,
                                     probability_threshold=0.625,
                                     random_state=123, reg_alpha=0.0,
                                     reg_lambda=0.0, silent='warn',
                                     subsample=1.0, subsample_for_bin=200000,
                                     subsample_freq=0)
2023-05-13 21:30:26,708:INFO:create_model() successfully completed......................................
2023-05-13 21:30:26,839:INFO:Initializing create_model()
2023-05-13 21:30:26,840:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001C888B22490>, estimator=LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=123, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0), fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=0.125, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-05-13 21:30:26,840:INFO:Checking exceptions
2023-05-13 21:30:26,841:INFO:Importing libraries
2023-05-13 21:30:26,841:INFO:Copying training dataset
2023-05-13 21:30:26,864:INFO:Defining folds
2023-05-13 21:30:26,864:INFO:Declaring metric variables
2023-05-13 21:30:26,864:INFO:Importing untrained model
2023-05-13 21:30:26,864:INFO:Declaring custom model
2023-05-13 21:30:26,866:INFO:Light Gradient Boosting Machine Imported successfully
2023-05-13 21:30:26,866:INFO:Starting cross validation
2023-05-13 21:30:26,869:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-05-13 21:30:39,516:INFO:Calculating mean and std
2023-05-13 21:30:39,517:INFO:Creating metrics dataframe
2023-05-13 21:30:39,519:INFO:Finalizing model
2023-05-13 21:30:42,013:INFO:Uploading results into container
2023-05-13 21:30:42,013:INFO:Uploading model into container now
2023-05-13 21:30:42,014:INFO:_master_model_container: 35
2023-05-13 21:30:42,014:INFO:_display_container: 15
2023-05-13 21:30:42,017:INFO:CustomProbabilityThresholdClassifier(boosting_type='gbdt', class_weight=None,
                                     classifier=LGBMClassifier(boosting_type='gbdt',
                                                               class_weight=None,
                                                               colsample_bytree=1.0,
                                                               importance_type='split',
                                                               learning_rate=0.1,
                                                               max_depth=-1,
                                                               min_child_samples=20,
                                                               min_child_weight=0.001,
                                                               min_split_gain=0.0,
                                                               n_estimators=100,
                                                               n_jobs=-1,
                                                               num_leaves=31,
                                                               objective=None,
                                                               random_state=1...
                                                               subsample_freq=0),
                                     colsample_bytree=1.0,
                                     importance_type='split', learning_rate=0.1,
                                     max_depth=-1, min_child_samples=20,
                                     min_child_weight=0.001, min_split_gain=0.0,
                                     n_estimators=100, n_jobs=-1, num_leaves=31,
                                     objective=None,
                                     probability_threshold=0.125,
                                     random_state=123, reg_alpha=0.0,
                                     reg_lambda=0.0, silent='warn',
                                     subsample=1.0, subsample_for_bin=200000,
                                     subsample_freq=0)
2023-05-13 21:30:42,017:INFO:create_model() successfully completed......................................
2023-05-13 21:30:42,148:INFO:Initializing create_model()
2023-05-13 21:30:42,149:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001C888B22490>, estimator=LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=123, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0), fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=0.1875, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-05-13 21:30:42,149:INFO:Checking exceptions
2023-05-13 21:30:42,155:INFO:Importing libraries
2023-05-13 21:30:42,155:INFO:Copying training dataset
2023-05-13 21:30:42,181:INFO:Defining folds
2023-05-13 21:30:42,181:INFO:Declaring metric variables
2023-05-13 21:30:42,182:INFO:Importing untrained model
2023-05-13 21:30:42,182:INFO:Declaring custom model
2023-05-13 21:30:42,183:INFO:Light Gradient Boosting Machine Imported successfully
2023-05-13 21:30:42,183:INFO:Starting cross validation
2023-05-13 21:30:42,186:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-05-13 21:30:55,428:INFO:Calculating mean and std
2023-05-13 21:30:55,429:INFO:Creating metrics dataframe
2023-05-13 21:30:55,432:INFO:Finalizing model
2023-05-13 21:30:57,909:INFO:Uploading results into container
2023-05-13 21:30:57,910:INFO:Uploading model into container now
2023-05-13 21:30:57,910:INFO:_master_model_container: 36
2023-05-13 21:30:57,910:INFO:_display_container: 15
2023-05-13 21:30:57,912:INFO:CustomProbabilityThresholdClassifier(boosting_type='gbdt', class_weight=None,
                                     classifier=LGBMClassifier(boosting_type='gbdt',
                                                               class_weight=None,
                                                               colsample_bytree=1.0,
                                                               importance_type='split',
                                                               learning_rate=0.1,
                                                               max_depth=-1,
                                                               min_child_samples=20,
                                                               min_child_weight=0.001,
                                                               min_split_gain=0.0,
                                                               n_estimators=100,
                                                               n_jobs=-1,
                                                               num_leaves=31,
                                                               objective=None,
                                                               random_state=1...
                                                               subsample_freq=0),
                                     colsample_bytree=1.0,
                                     importance_type='split', learning_rate=0.1,
                                     max_depth=-1, min_child_samples=20,
                                     min_child_weight=0.001, min_split_gain=0.0,
                                     n_estimators=100, n_jobs=-1, num_leaves=31,
                                     objective=None,
                                     probability_threshold=0.1875,
                                     random_state=123, reg_alpha=0.0,
                                     reg_lambda=0.0, silent='warn',
                                     subsample=1.0, subsample_for_bin=200000,
                                     subsample_freq=0)
2023-05-13 21:30:57,913:INFO:create_model() successfully completed......................................
2023-05-13 21:30:58,046:INFO:Initializing create_model()
2023-05-13 21:30:58,046:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001C888B22490>, estimator=LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=123, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0), fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=0.6875, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-05-13 21:30:58,046:INFO:Checking exceptions
2023-05-13 21:30:58,049:INFO:Importing libraries
2023-05-13 21:30:58,049:INFO:Copying training dataset
2023-05-13 21:30:58,069:INFO:Defining folds
2023-05-13 21:30:58,069:INFO:Declaring metric variables
2023-05-13 21:30:58,070:INFO:Importing untrained model
2023-05-13 21:30:58,070:INFO:Declaring custom model
2023-05-13 21:30:58,071:INFO:Light Gradient Boosting Machine Imported successfully
2023-05-13 21:30:58,071:INFO:Starting cross validation
2023-05-13 21:30:58,075:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-05-13 21:31:10,916:INFO:Calculating mean and std
2023-05-13 21:31:10,916:INFO:Creating metrics dataframe
2023-05-13 21:31:10,919:INFO:Finalizing model
2023-05-13 21:31:13,405:INFO:Uploading results into container
2023-05-13 21:31:13,405:INFO:Uploading model into container now
2023-05-13 21:31:13,406:INFO:_master_model_container: 37
2023-05-13 21:31:13,406:INFO:_display_container: 15
2023-05-13 21:31:13,408:INFO:CustomProbabilityThresholdClassifier(boosting_type='gbdt', class_weight=None,
                                     classifier=LGBMClassifier(boosting_type='gbdt',
                                                               class_weight=None,
                                                               colsample_bytree=1.0,
                                                               importance_type='split',
                                                               learning_rate=0.1,
                                                               max_depth=-1,
                                                               min_child_samples=20,
                                                               min_child_weight=0.001,
                                                               min_split_gain=0.0,
                                                               n_estimators=100,
                                                               n_jobs=-1,
                                                               num_leaves=31,
                                                               objective=None,
                                                               random_state=1...
                                                               subsample_freq=0),
                                     colsample_bytree=1.0,
                                     importance_type='split', learning_rate=0.1,
                                     max_depth=-1, min_child_samples=20,
                                     min_child_weight=0.001, min_split_gain=0.0,
                                     n_estimators=100, n_jobs=-1, num_leaves=31,
                                     objective=None,
                                     probability_threshold=0.6875,
                                     random_state=123, reg_alpha=0.0,
                                     reg_lambda=0.0, silent='warn',
                                     subsample=1.0, subsample_for_bin=200000,
                                     subsample_freq=0)
2023-05-13 21:31:13,408:INFO:create_model() successfully completed......................................
2023-05-13 21:31:13,541:INFO:Initializing create_model()
2023-05-13 21:31:13,541:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001C888B22490>, estimator=LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=123, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0), fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=0.9375, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-05-13 21:31:13,541:INFO:Checking exceptions
2023-05-13 21:31:13,543:INFO:Importing libraries
2023-05-13 21:31:13,543:INFO:Copying training dataset
2023-05-13 21:31:13,562:INFO:Defining folds
2023-05-13 21:31:13,562:INFO:Declaring metric variables
2023-05-13 21:31:13,563:INFO:Importing untrained model
2023-05-13 21:31:13,563:INFO:Declaring custom model
2023-05-13 21:31:13,564:INFO:Light Gradient Boosting Machine Imported successfully
2023-05-13 21:31:13,564:INFO:Starting cross validation
2023-05-13 21:31:13,568:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-05-13 21:31:18,640:WARNING:c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-13 21:31:26,530:INFO:Calculating mean and std
2023-05-13 21:31:26,531:INFO:Creating metrics dataframe
2023-05-13 21:31:26,534:INFO:Finalizing model
2023-05-13 21:31:29,039:INFO:Uploading results into container
2023-05-13 21:31:29,040:INFO:Uploading model into container now
2023-05-13 21:31:29,040:INFO:_master_model_container: 38
2023-05-13 21:31:29,040:INFO:_display_container: 15
2023-05-13 21:31:29,043:INFO:CustomProbabilityThresholdClassifier(boosting_type='gbdt', class_weight=None,
                                     classifier=LGBMClassifier(boosting_type='gbdt',
                                                               class_weight=None,
                                                               colsample_bytree=1.0,
                                                               importance_type='split',
                                                               learning_rate=0.1,
                                                               max_depth=-1,
                                                               min_child_samples=20,
                                                               min_child_weight=0.001,
                                                               min_split_gain=0.0,
                                                               n_estimators=100,
                                                               n_jobs=-1,
                                                               num_leaves=31,
                                                               objective=None,
                                                               random_state=1...
                                                               subsample_freq=0),
                                     colsample_bytree=1.0,
                                     importance_type='split', learning_rate=0.1,
                                     max_depth=-1, min_child_samples=20,
                                     min_child_weight=0.001, min_split_gain=0.0,
                                     n_estimators=100, n_jobs=-1, num_leaves=31,
                                     objective=None,
                                     probability_threshold=0.9375,
                                     random_state=123, reg_alpha=0.0,
                                     reg_lambda=0.0, silent='warn',
                                     subsample=1.0, subsample_for_bin=200000,
                                     subsample_freq=0)
2023-05-13 21:31:29,043:INFO:create_model() successfully completed......................................
2023-05-13 21:31:29,175:INFO:Initializing create_model()
2023-05-13 21:31:29,175:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001C888B22490>, estimator=LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=123, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0), fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=0.4375, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-05-13 21:31:29,175:INFO:Checking exceptions
2023-05-13 21:31:29,177:INFO:Importing libraries
2023-05-13 21:31:29,177:INFO:Copying training dataset
2023-05-13 21:31:29,198:INFO:Defining folds
2023-05-13 21:31:29,198:INFO:Declaring metric variables
2023-05-13 21:31:29,198:INFO:Importing untrained model
2023-05-13 21:31:29,199:INFO:Declaring custom model
2023-05-13 21:31:29,199:INFO:Light Gradient Boosting Machine Imported successfully
2023-05-13 21:31:29,200:INFO:Starting cross validation
2023-05-13 21:31:29,203:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-05-13 21:31:42,458:INFO:Calculating mean and std
2023-05-13 21:31:42,459:INFO:Creating metrics dataframe
2023-05-13 21:31:42,461:INFO:Finalizing model
2023-05-13 21:31:45,070:INFO:Uploading results into container
2023-05-13 21:31:45,071:INFO:Uploading model into container now
2023-05-13 21:31:45,071:INFO:_master_model_container: 39
2023-05-13 21:31:45,071:INFO:_display_container: 15
2023-05-13 21:31:45,074:INFO:CustomProbabilityThresholdClassifier(boosting_type='gbdt', class_weight=None,
                                     classifier=LGBMClassifier(boosting_type='gbdt',
                                                               class_weight=None,
                                                               colsample_bytree=1.0,
                                                               importance_type='split',
                                                               learning_rate=0.1,
                                                               max_depth=-1,
                                                               min_child_samples=20,
                                                               min_child_weight=0.001,
                                                               min_split_gain=0.0,
                                                               n_estimators=100,
                                                               n_jobs=-1,
                                                               num_leaves=31,
                                                               objective=None,
                                                               random_state=1...
                                                               subsample_freq=0),
                                     colsample_bytree=1.0,
                                     importance_type='split', learning_rate=0.1,
                                     max_depth=-1, min_child_samples=20,
                                     min_child_weight=0.001, min_split_gain=0.0,
                                     n_estimators=100, n_jobs=-1, num_leaves=31,
                                     objective=None,
                                     probability_threshold=0.4375,
                                     random_state=123, reg_alpha=0.0,
                                     reg_lambda=0.0, silent='warn',
                                     subsample=1.0, subsample_for_bin=200000,
                                     subsample_freq=0)
2023-05-13 21:31:45,074:INFO:create_model() successfully completed......................................
2023-05-13 21:31:45,203:INFO:Initializing create_model()
2023-05-13 21:31:45,203:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001C888B22490>, estimator=LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=123, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0), fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=0.3125, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-05-13 21:31:45,203:INFO:Checking exceptions
2023-05-13 21:31:45,205:INFO:Importing libraries
2023-05-13 21:31:45,205:INFO:Copying training dataset
2023-05-13 21:31:45,225:INFO:Defining folds
2023-05-13 21:31:45,225:INFO:Declaring metric variables
2023-05-13 21:31:45,225:INFO:Importing untrained model
2023-05-13 21:31:45,225:INFO:Declaring custom model
2023-05-13 21:31:45,226:INFO:Light Gradient Boosting Machine Imported successfully
2023-05-13 21:31:45,226:INFO:Starting cross validation
2023-05-13 21:31:45,230:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-05-13 21:31:58,750:INFO:Calculating mean and std
2023-05-13 21:31:58,751:INFO:Creating metrics dataframe
2023-05-13 21:31:58,754:INFO:Finalizing model
2023-05-13 21:32:01,327:INFO:Uploading results into container
2023-05-13 21:32:01,327:INFO:Uploading model into container now
2023-05-13 21:32:01,328:INFO:_master_model_container: 40
2023-05-13 21:32:01,328:INFO:_display_container: 15
2023-05-13 21:32:01,330:INFO:CustomProbabilityThresholdClassifier(boosting_type='gbdt', class_weight=None,
                                     classifier=LGBMClassifier(boosting_type='gbdt',
                                                               class_weight=None,
                                                               colsample_bytree=1.0,
                                                               importance_type='split',
                                                               learning_rate=0.1,
                                                               max_depth=-1,
                                                               min_child_samples=20,
                                                               min_child_weight=0.001,
                                                               min_split_gain=0.0,
                                                               n_estimators=100,
                                                               n_jobs=-1,
                                                               num_leaves=31,
                                                               objective=None,
                                                               random_state=1...
                                                               subsample_freq=0),
                                     colsample_bytree=1.0,
                                     importance_type='split', learning_rate=0.1,
                                     max_depth=-1, min_child_samples=20,
                                     min_child_weight=0.001, min_split_gain=0.0,
                                     n_estimators=100, n_jobs=-1, num_leaves=31,
                                     objective=None,
                                     probability_threshold=0.3125,
                                     random_state=123, reg_alpha=0.0,
                                     reg_lambda=0.0, silent='warn',
                                     subsample=1.0, subsample_for_bin=200000,
                                     subsample_freq=0)
2023-05-13 21:32:01,330:INFO:create_model() successfully completed......................................
2023-05-13 21:32:01,467:INFO:Initializing create_model()
2023-05-13 21:32:01,467:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001C888B22490>, estimator=LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=123, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0), fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=0.8125, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-05-13 21:32:01,467:INFO:Checking exceptions
2023-05-13 21:32:01,470:INFO:Importing libraries
2023-05-13 21:32:01,470:INFO:Copying training dataset
2023-05-13 21:32:01,490:INFO:Defining folds
2023-05-13 21:32:01,490:INFO:Declaring metric variables
2023-05-13 21:32:01,490:INFO:Importing untrained model
2023-05-13 21:32:01,490:INFO:Declaring custom model
2023-05-13 21:32:01,491:INFO:Light Gradient Boosting Machine Imported successfully
2023-05-13 21:32:01,492:INFO:Starting cross validation
2023-05-13 21:32:01,495:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-05-13 21:32:14,831:INFO:Calculating mean and std
2023-05-13 21:32:14,832:INFO:Creating metrics dataframe
2023-05-13 21:32:14,835:INFO:Finalizing model
2023-05-13 21:32:17,400:INFO:Uploading results into container
2023-05-13 21:32:17,402:INFO:Uploading model into container now
2023-05-13 21:32:17,402:INFO:_master_model_container: 41
2023-05-13 21:32:17,402:INFO:_display_container: 15
2023-05-13 21:32:17,404:INFO:CustomProbabilityThresholdClassifier(boosting_type='gbdt', class_weight=None,
                                     classifier=LGBMClassifier(boosting_type='gbdt',
                                                               class_weight=None,
                                                               colsample_bytree=1.0,
                                                               importance_type='split',
                                                               learning_rate=0.1,
                                                               max_depth=-1,
                                                               min_child_samples=20,
                                                               min_child_weight=0.001,
                                                               min_split_gain=0.0,
                                                               n_estimators=100,
                                                               n_jobs=-1,
                                                               num_leaves=31,
                                                               objective=None,
                                                               random_state=1...
                                                               subsample_freq=0),
                                     colsample_bytree=1.0,
                                     importance_type='split', learning_rate=0.1,
                                     max_depth=-1, min_child_samples=20,
                                     min_child_weight=0.001, min_split_gain=0.0,
                                     n_estimators=100, n_jobs=-1, num_leaves=31,
                                     objective=None,
                                     probability_threshold=0.8125,
                                     random_state=123, reg_alpha=0.0,
                                     reg_lambda=0.0, silent='warn',
                                     subsample=1.0, subsample_for_bin=200000,
                                     subsample_freq=0)
2023-05-13 21:32:17,405:INFO:create_model() successfully completed......................................
2023-05-13 21:32:17,543:INFO:Initializing create_model()
2023-05-13 21:32:17,543:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001C888B22490>, estimator=LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=123, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0), fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=0.5625, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-05-13 21:32:17,543:INFO:Checking exceptions
2023-05-13 21:32:17,545:INFO:Importing libraries
2023-05-13 21:32:17,545:INFO:Copying training dataset
2023-05-13 21:32:17,567:INFO:Defining folds
2023-05-13 21:32:17,568:INFO:Declaring metric variables
2023-05-13 21:32:17,568:INFO:Importing untrained model
2023-05-13 21:32:17,568:INFO:Declaring custom model
2023-05-13 21:32:17,569:INFO:Light Gradient Boosting Machine Imported successfully
2023-05-13 21:32:17,569:INFO:Starting cross validation
2023-05-13 21:32:17,572:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-05-13 21:32:31,262:INFO:Calculating mean and std
2023-05-13 21:32:31,262:INFO:Creating metrics dataframe
2023-05-13 21:32:31,264:INFO:Finalizing model
2023-05-13 21:32:33,827:INFO:Uploading results into container
2023-05-13 21:32:33,828:INFO:Uploading model into container now
2023-05-13 21:32:33,828:INFO:_master_model_container: 42
2023-05-13 21:32:33,829:INFO:_display_container: 15
2023-05-13 21:32:33,830:INFO:CustomProbabilityThresholdClassifier(boosting_type='gbdt', class_weight=None,
                                     classifier=LGBMClassifier(boosting_type='gbdt',
                                                               class_weight=None,
                                                               colsample_bytree=1.0,
                                                               importance_type='split',
                                                               learning_rate=0.1,
                                                               max_depth=-1,
                                                               min_child_samples=20,
                                                               min_child_weight=0.001,
                                                               min_split_gain=0.0,
                                                               n_estimators=100,
                                                               n_jobs=-1,
                                                               num_leaves=31,
                                                               objective=None,
                                                               random_state=1...
                                                               subsample_freq=0),
                                     colsample_bytree=1.0,
                                     importance_type='split', learning_rate=0.1,
                                     max_depth=-1, min_child_samples=20,
                                     min_child_weight=0.001, min_split_gain=0.0,
                                     n_estimators=100, n_jobs=-1, num_leaves=31,
                                     objective=None,
                                     probability_threshold=0.5625,
                                     random_state=123, reg_alpha=0.0,
                                     reg_lambda=0.0, silent='warn',
                                     subsample=1.0, subsample_for_bin=200000,
                                     subsample_freq=0)
2023-05-13 21:32:33,830:INFO:create_model() successfully completed......................................
2023-05-13 21:32:33,964:INFO:Initializing create_model()
2023-05-13 21:32:33,965:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001C888B22490>, estimator=LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=123, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0), fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=0.0625, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-05-13 21:32:33,965:INFO:Checking exceptions
2023-05-13 21:32:33,966:INFO:Importing libraries
2023-05-13 21:32:33,966:INFO:Copying training dataset
2023-05-13 21:32:33,988:INFO:Defining folds
2023-05-13 21:32:33,988:INFO:Declaring metric variables
2023-05-13 21:32:33,989:INFO:Importing untrained model
2023-05-13 21:32:33,989:INFO:Declaring custom model
2023-05-13 21:32:33,989:INFO:Light Gradient Boosting Machine Imported successfully
2023-05-13 21:32:33,990:INFO:Starting cross validation
2023-05-13 21:32:33,992:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-05-13 21:32:47,928:INFO:Calculating mean and std
2023-05-13 21:32:47,928:INFO:Creating metrics dataframe
2023-05-13 21:32:47,930:INFO:Finalizing model
2023-05-13 21:32:50,504:INFO:Uploading results into container
2023-05-13 21:32:50,505:INFO:Uploading model into container now
2023-05-13 21:32:50,505:INFO:_master_model_container: 43
2023-05-13 21:32:50,505:INFO:_display_container: 15
2023-05-13 21:32:50,508:INFO:CustomProbabilityThresholdClassifier(boosting_type='gbdt', class_weight=None,
                                     classifier=LGBMClassifier(boosting_type='gbdt',
                                                               class_weight=None,
                                                               colsample_bytree=1.0,
                                                               importance_type='split',
                                                               learning_rate=0.1,
                                                               max_depth=-1,
                                                               min_child_samples=20,
                                                               min_child_weight=0.001,
                                                               min_split_gain=0.0,
                                                               n_estimators=100,
                                                               n_jobs=-1,
                                                               num_leaves=31,
                                                               objective=None,
                                                               random_state=1...
                                                               subsample_freq=0),
                                     colsample_bytree=1.0,
                                     importance_type='split', learning_rate=0.1,
                                     max_depth=-1, min_child_samples=20,
                                     min_child_weight=0.001, min_split_gain=0.0,
                                     n_estimators=100, n_jobs=-1, num_leaves=31,
                                     objective=None,
                                     probability_threshold=0.0625,
                                     random_state=123, reg_alpha=0.0,
                                     reg_lambda=0.0, silent='warn',
                                     subsample=1.0, subsample_for_bin=200000,
                                     subsample_freq=0)
2023-05-13 21:32:50,508:INFO:create_model() successfully completed......................................
2023-05-13 21:32:50,647:INFO:Initializing create_model()
2023-05-13 21:32:50,647:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001C888B22490>, estimator=LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=123, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0), fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=0.09375, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-05-13 21:32:50,647:INFO:Checking exceptions
2023-05-13 21:32:50,648:INFO:Importing libraries
2023-05-13 21:32:50,649:INFO:Copying training dataset
2023-05-13 21:32:50,670:INFO:Defining folds
2023-05-13 21:32:50,670:INFO:Declaring metric variables
2023-05-13 21:32:50,670:INFO:Importing untrained model
2023-05-13 21:32:50,670:INFO:Declaring custom model
2023-05-13 21:32:50,671:INFO:Light Gradient Boosting Machine Imported successfully
2023-05-13 21:32:50,671:INFO:Starting cross validation
2023-05-13 21:32:50,674:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-05-13 21:33:04,322:INFO:Calculating mean and std
2023-05-13 21:33:04,322:INFO:Creating metrics dataframe
2023-05-13 21:33:04,325:INFO:Finalizing model
2023-05-13 21:33:06,911:INFO:Uploading results into container
2023-05-13 21:33:06,912:INFO:Uploading model into container now
2023-05-13 21:33:06,913:INFO:_master_model_container: 44
2023-05-13 21:33:06,913:INFO:_display_container: 15
2023-05-13 21:33:06,914:INFO:CustomProbabilityThresholdClassifier(boosting_type='gbdt', class_weight=None,
                                     classifier=LGBMClassifier(boosting_type='gbdt',
                                                               class_weight=None,
                                                               colsample_bytree=1.0,
                                                               importance_type='split',
                                                               learning_rate=0.1,
                                                               max_depth=-1,
                                                               min_child_samples=20,
                                                               min_child_weight=0.001,
                                                               min_split_gain=0.0,
                                                               n_estimators=100,
                                                               n_jobs=-1,
                                                               num_leaves=31,
                                                               objective=None,
                                                               random_state=1...
                                                               subsample_freq=0),
                                     colsample_bytree=1.0,
                                     importance_type='split', learning_rate=0.1,
                                     max_depth=-1, min_child_samples=20,
                                     min_child_weight=0.001, min_split_gain=0.0,
                                     n_estimators=100, n_jobs=-1, num_leaves=31,
                                     objective=None,
                                     probability_threshold=0.09375,
                                     random_state=123, reg_alpha=0.0,
                                     reg_lambda=0.0, silent='warn',
                                     subsample=1.0, subsample_for_bin=200000,
                                     subsample_freq=0)
2023-05-13 21:33:06,915:INFO:create_model() successfully completed......................................
2023-05-13 21:33:07,047:INFO:Initializing create_model()
2023-05-13 21:33:07,047:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001C888B22490>, estimator=LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=123, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0), fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=0.59375, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-05-13 21:33:07,047:INFO:Checking exceptions
2023-05-13 21:33:07,050:INFO:Importing libraries
2023-05-13 21:33:07,050:INFO:Copying training dataset
2023-05-13 21:33:07,071:INFO:Defining folds
2023-05-13 21:33:07,071:INFO:Declaring metric variables
2023-05-13 21:33:07,071:INFO:Importing untrained model
2023-05-13 21:33:07,071:INFO:Declaring custom model
2023-05-13 21:33:07,072:INFO:Light Gradient Boosting Machine Imported successfully
2023-05-13 21:33:07,072:INFO:Starting cross validation
2023-05-13 21:33:07,076:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-05-13 21:33:21,006:INFO:Calculating mean and std
2023-05-13 21:33:21,006:INFO:Creating metrics dataframe
2023-05-13 21:33:21,009:INFO:Finalizing model
2023-05-13 21:33:23,617:INFO:Uploading results into container
2023-05-13 21:33:23,618:INFO:Uploading model into container now
2023-05-13 21:33:23,618:INFO:_master_model_container: 45
2023-05-13 21:33:23,618:INFO:_display_container: 15
2023-05-13 21:33:23,620:INFO:CustomProbabilityThresholdClassifier(boosting_type='gbdt', class_weight=None,
                                     classifier=LGBMClassifier(boosting_type='gbdt',
                                                               class_weight=None,
                                                               colsample_bytree=1.0,
                                                               importance_type='split',
                                                               learning_rate=0.1,
                                                               max_depth=-1,
                                                               min_child_samples=20,
                                                               min_child_weight=0.001,
                                                               min_split_gain=0.0,
                                                               n_estimators=100,
                                                               n_jobs=-1,
                                                               num_leaves=31,
                                                               objective=None,
                                                               random_state=1...
                                                               subsample_freq=0),
                                     colsample_bytree=1.0,
                                     importance_type='split', learning_rate=0.1,
                                     max_depth=-1, min_child_samples=20,
                                     min_child_weight=0.001, min_split_gain=0.0,
                                     n_estimators=100, n_jobs=-1, num_leaves=31,
                                     objective=None,
                                     probability_threshold=0.59375,
                                     random_state=123, reg_alpha=0.0,
                                     reg_lambda=0.0, silent='warn',
                                     subsample=1.0, subsample_for_bin=200000,
                                     subsample_freq=0)
2023-05-13 21:33:23,620:INFO:create_model() successfully completed......................................
2023-05-13 21:33:23,755:INFO:Initializing create_model()
2023-05-13 21:33:23,755:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001C888B22490>, estimator=LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=123, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0), fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=0.84375, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-05-13 21:33:23,756:INFO:Checking exceptions
2023-05-13 21:33:23,757:INFO:Importing libraries
2023-05-13 21:33:23,757:INFO:Copying training dataset
2023-05-13 21:33:23,776:INFO:Defining folds
2023-05-13 21:33:23,776:INFO:Declaring metric variables
2023-05-13 21:33:23,777:INFO:Importing untrained model
2023-05-13 21:33:23,777:INFO:Declaring custom model
2023-05-13 21:33:23,778:INFO:Light Gradient Boosting Machine Imported successfully
2023-05-13 21:33:23,778:INFO:Starting cross validation
2023-05-13 21:33:23,782:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-05-13 21:33:37,557:INFO:Calculating mean and std
2023-05-13 21:33:37,557:INFO:Creating metrics dataframe
2023-05-13 21:33:37,560:INFO:Finalizing model
2023-05-13 21:33:40,190:INFO:Uploading results into container
2023-05-13 21:33:40,191:INFO:Uploading model into container now
2023-05-13 21:33:40,191:INFO:_master_model_container: 46
2023-05-13 21:33:40,192:INFO:_display_container: 15
2023-05-13 21:33:40,194:INFO:CustomProbabilityThresholdClassifier(boosting_type='gbdt', class_weight=None,
                                     classifier=LGBMClassifier(boosting_type='gbdt',
                                                               class_weight=None,
                                                               colsample_bytree=1.0,
                                                               importance_type='split',
                                                               learning_rate=0.1,
                                                               max_depth=-1,
                                                               min_child_samples=20,
                                                               min_child_weight=0.001,
                                                               min_split_gain=0.0,
                                                               n_estimators=100,
                                                               n_jobs=-1,
                                                               num_leaves=31,
                                                               objective=None,
                                                               random_state=1...
                                                               subsample_freq=0),
                                     colsample_bytree=1.0,
                                     importance_type='split', learning_rate=0.1,
                                     max_depth=-1, min_child_samples=20,
                                     min_child_weight=0.001, min_split_gain=0.0,
                                     n_estimators=100, n_jobs=-1, num_leaves=31,
                                     objective=None,
                                     probability_threshold=0.84375,
                                     random_state=123, reg_alpha=0.0,
                                     reg_lambda=0.0, silent='warn',
                                     subsample=1.0, subsample_for_bin=200000,
                                     subsample_freq=0)
2023-05-13 21:33:40,194:INFO:create_model() successfully completed......................................
2023-05-13 21:33:40,326:INFO:Initializing create_model()
2023-05-13 21:33:40,326:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001C888B22490>, estimator=LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=123, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0), fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=0.34375, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-05-13 21:33:40,326:INFO:Checking exceptions
2023-05-13 21:33:40,328:INFO:Importing libraries
2023-05-13 21:33:40,328:INFO:Copying training dataset
2023-05-13 21:33:40,348:INFO:Defining folds
2023-05-13 21:33:40,349:INFO:Declaring metric variables
2023-05-13 21:33:40,349:INFO:Importing untrained model
2023-05-13 21:33:40,349:INFO:Declaring custom model
2023-05-13 21:33:40,350:INFO:Light Gradient Boosting Machine Imported successfully
2023-05-13 21:33:40,350:INFO:Starting cross validation
2023-05-13 21:33:40,353:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-05-13 21:53:27,173:INFO:Initializing save_model()
2023-05-13 21:53:27,174:INFO:save_model(model=LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=123, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0), model_name=best_clf, prep_pipe_=Pipeline(memory=FastMemory(location=C:\Users\camil\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('date_feature_extractor',
                 TransformerWrapper(exclude=None, include=['Fecha.Expedicion'],
                                    transformer=ExtractDateTimeFeatures(features=['day',
                                                                                  'month',
                                                                                  'year']))),
                ('nu...
                                    transformer=FixImbalancer(estimator=SMOTE(k_neighbors=5,
                                                                              n_jobs=None,
                                                                              random_state=None,
                                                                              sampling_strategy='auto')))),
                ('normalize',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False), verbose=True, use_case=MLUsecase.CLASSIFICATION, kwargs={})
2023-05-13 21:53:27,175:INFO:Adding model into prep_pipe
2023-05-13 21:53:27,237:INFO:best_clf.pkl saved in current working directory
2023-05-13 21:53:27,365:INFO:Pipeline(memory=FastMemory(location=C:\Users\camil\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('date_feature_extractor',
                 TransformerWrapper(exclude=None, include=['Fecha.Expedicion'],
                                    transformer=ExtractDateTimeFeatures(features=['day',
                                                                                  'month',
                                                                                  'year']))),
                ('nu...
                 LGBMClassifier(boosting_type='gbdt', class_weight=None,
                                colsample_bytree=1.0, importance_type='split',
                                learning_rate=0.1, max_depth=-1,
                                min_child_samples=20, min_child_weight=0.001,
                                min_split_gain=0.0, n_estimators=100, n_jobs=-1,
                                num_leaves=31, objective=None, random_state=123,
                                reg_alpha=0.0, reg_lambda=0.0, silent='warn',
                                subsample=1.0, subsample_for_bin=200000,
                                subsample_freq=0))],
         verbose=False)
2023-05-13 21:53:27,366:INFO:save_model() successfully completed......................................
2023-05-13 21:56:22,098:INFO:Initializing load_model()
2023-05-13 21:56:22,099:INFO:load_model(model_name=best_clf, platform=None, authentication=None, verbose=True)
2023-05-13 21:56:42,517:INFO:Initializing load_model()
2023-05-13 21:56:42,517:INFO:load_model(model_name=best_clf.pkl, platform=None, authentication=None, verbose=True)
2023-05-13 21:56:50,699:INFO:Initializing load_model()
2023-05-13 21:56:50,700:INFO:load_model(model_name=best_clf, platform=None, authentication=None, verbose=True)
2023-05-13 21:58:25,819:INFO:Initializing get_config()
2023-05-13 21:58:25,820:INFO:get_config(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001C888B22490>, variable=X_test)
2023-05-13 21:58:25,821:INFO:Variable: 'X_test' used to return the transformed values in PyCaret 2.x. From PyCaret 3.x, this will return the raw values. If you need the transformed values, call get_config with 'X_test_transformed' instead.
2023-05-13 21:58:25,821:WARNING:c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\pycaret\internal\pycaret_experiment\pycaret_experiment.py:322: UserWarning: Variable: 'X_test' used to return the transformed values in PyCaret 2.x. From PyCaret 3.x, this will return the raw values. If you need the transformed values, call get_config with 'X_test_transformed' instead.
  warnings.warn(msg)  # print on screen

2023-05-13 21:58:25,845:INFO:Variable:  returned as       Fecha.Expedicion  Disponible.Avances  Limite.Avances  Total.Intereses  \
5694        2010-03-19           2625000.0       2625000.0         0.000000   
7540        2008-07-10                 0.0        270000.0    494045.468750   
30169       2014-06-03            225000.0        225000.0       338.959991   
13879       2016-07-27            560000.0        560000.0         0.000000   
33377       2016-02-03            210000.0        210000.0         0.000000   
...                ...                 ...             ...              ...   
29541       2018-02-14            174000.0        174000.0         0.000000   
16826       2009-08-27            600000.0        600000.0         0.000000   
23554       2013-04-11            120000.0        120000.0       613.940002   
23012       2014-04-25            876000.0        876000.0     20172.650391   
33047       2016-03-23             10300.0        210000.0     13705.400391   

       Saldos.Mes.Ant  Pagos.Mes.Ant  Vtas.Mes.Ant  Edad.Mora  Limite.Cupo  \
5694     0.000000e+00           0.00          0.00        0.0    5250000.0   
7540     1.329984e+06           0.00          0.00       60.0     900000.0   
30169    5.285100e+03       41022.00          0.00        0.0     750000.0   
13879    0.000000e+00           0.00          0.00        0.0    1400000.0   
33377    0.000000e+00           0.00          0.00        0.0     700000.0   
...               ...            ...           ...        ...          ...   
29541    0.000000e+00           0.00          0.00        0.0     580000.0   
16826    0.000000e+00           0.00          0.00        0.0    1500000.0   
23554    7.169794e+04           0.00          0.00        0.0     400000.0   
23012    8.962524e+05      510263.75     363323.75        0.0    2190000.0   
33047    6.386579e+05       50000.00          0.00        0.0     700000.0   

       Pago.del.Mes  ...      nivel_educativo  estado_civil  Genero  PAC  \
5694            0.0  ...  tecnico_tecnologico      separado       M    1   
7540            0.0  ...           secundaria       soltero       F    2   
30169           0.0  ...             primaria         viudo       M    3   
13879           0.0  ...  tecnico_tecnologico         viudo       F    1   
33377           0.0  ...             primaria        casado       M    3   
...             ...  ...                  ...           ...     ...  ...   
29541           0.0  ...             primaria       soltero       F    3   
16826           0.0  ...  tecnico_tecnologico        casado       F    1   
23554           0.0  ...             primaria      separado       F    3   
23012           0.0  ...  tecnico_tecnologico         viudo       M    1   
33047           0.0  ...             primaria       soltero       F    3   

      contrato estrato  cuota_monetaria sub_vivenda bono_lonchera porc_avances  
5694         4     NaN                0           0             0          0.5  
7540         4     NaN                1           0             1          0.3  
30169        3     NaN                1           0             1          0.3  
13879        4     NaN                0           0             0          0.4  
33377        1     NaN                1           0             1          0.3  
...        ...     ...              ...         ...           ...          ...  
29541        2     NaN                1           0             1          0.3  
16826        1     NaN                0           0             0          0.4  
23554        4     NaN                1           0             1          0.3  
23012        4     NaN                0           0             0          0.4  
33047        3     NaN                1           0             1          0.3  

[15001 rows x 27 columns]
2023-05-13 21:58:25,845:INFO:get_config() successfully completed......................................
2023-05-13 21:58:25,845:INFO:Initializing get_config()
2023-05-13 21:58:25,845:INFO:get_config(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001C888B22490>, variable=y_test)
2023-05-13 21:58:25,846:INFO:Variable: 'y_test' used to return the transformed values in PyCaret 2.x. From PyCaret 3.x, this will return the raw values. If you need the transformed values, call get_config with 'y_test_transformed' instead.
2023-05-13 21:58:25,846:WARNING:c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\pycaret\internal\pycaret_experiment\pycaret_experiment.py:322: UserWarning: Variable: 'y_test' used to return the transformed values in PyCaret 2.x. From PyCaret 3.x, this will return the raw values. If you need the transformed values, call get_config with 'y_test_transformed' instead.
  warnings.warn(msg)  # print on screen

2023-05-13 21:58:25,853:INFO:Variable:  returned as 5694     0
7540     0
30169    0
13879    0
33377    0
        ..
29541    0
16826    0
23554    0
23012    0
33047    0
Name: Target, Length: 15001, dtype: category
Categories (2, object): ['0', '1']
2023-05-13 21:58:25,853:INFO:get_config() successfully completed......................................
2023-05-13 21:58:25,857:INFO:Initializing predict_model()
2023-05-13 21:58:25,857:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001C888B22490>, estimator=LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=123, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0), probability_threshold=None, encoded_labels=False, raw_score=True, round=4, verbose=True, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x000001C892FB54C0>)
2023-05-13 21:58:25,857:INFO:Checking exceptions
2023-05-13 21:58:25,857:INFO:Preloading libraries
2023-05-13 21:58:25,860:INFO:Set up data.
2023-05-13 21:58:25,880:INFO:Set up index.
2023-05-13 21:59:35,213:INFO:Initializing get_config()
2023-05-13 21:59:35,213:INFO:get_config(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001C888B22490>, variable=X_test)
2023-05-13 21:59:35,214:INFO:Variable: 'X_test' used to return the transformed values in PyCaret 2.x. From PyCaret 3.x, this will return the raw values. If you need the transformed values, call get_config with 'X_test_transformed' instead.
2023-05-13 21:59:35,214:WARNING:c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\pycaret\internal\pycaret_experiment\pycaret_experiment.py:322: UserWarning: Variable: 'X_test' used to return the transformed values in PyCaret 2.x. From PyCaret 3.x, this will return the raw values. If you need the transformed values, call get_config with 'X_test_transformed' instead.
  warnings.warn(msg)  # print on screen

2023-05-13 21:59:35,239:INFO:Variable:  returned as       Fecha.Expedicion  Disponible.Avances  Limite.Avances  Total.Intereses  \
5694        2010-03-19           2625000.0       2625000.0         0.000000   
7540        2008-07-10                 0.0        270000.0    494045.468750   
30169       2014-06-03            225000.0        225000.0       338.959991   
13879       2016-07-27            560000.0        560000.0         0.000000   
33377       2016-02-03            210000.0        210000.0         0.000000   
...                ...                 ...             ...              ...   
29541       2018-02-14            174000.0        174000.0         0.000000   
16826       2009-08-27            600000.0        600000.0         0.000000   
23554       2013-04-11            120000.0        120000.0       613.940002   
23012       2014-04-25            876000.0        876000.0     20172.650391   
33047       2016-03-23             10300.0        210000.0     13705.400391   

       Saldos.Mes.Ant  Pagos.Mes.Ant  Vtas.Mes.Ant  Edad.Mora  Limite.Cupo  \
5694     0.000000e+00           0.00          0.00        0.0    5250000.0   
7540     1.329984e+06           0.00          0.00       60.0     900000.0   
30169    5.285100e+03       41022.00          0.00        0.0     750000.0   
13879    0.000000e+00           0.00          0.00        0.0    1400000.0   
33377    0.000000e+00           0.00          0.00        0.0     700000.0   
...               ...            ...           ...        ...          ...   
29541    0.000000e+00           0.00          0.00        0.0     580000.0   
16826    0.000000e+00           0.00          0.00        0.0    1500000.0   
23554    7.169794e+04           0.00          0.00        0.0     400000.0   
23012    8.962524e+05      510263.75     363323.75        0.0    2190000.0   
33047    6.386579e+05       50000.00          0.00        0.0     700000.0   

       Pago.del.Mes  ...      nivel_educativo  estado_civil  Genero  PAC  \
5694            0.0  ...  tecnico_tecnologico      separado       M    1   
7540            0.0  ...           secundaria       soltero       F    2   
30169           0.0  ...             primaria         viudo       M    3   
13879           0.0  ...  tecnico_tecnologico         viudo       F    1   
33377           0.0  ...             primaria        casado       M    3   
...             ...  ...                  ...           ...     ...  ...   
29541           0.0  ...             primaria       soltero       F    3   
16826           0.0  ...  tecnico_tecnologico        casado       F    1   
23554           0.0  ...             primaria      separado       F    3   
23012           0.0  ...  tecnico_tecnologico         viudo       M    1   
33047           0.0  ...             primaria       soltero       F    3   

      contrato estrato  cuota_monetaria sub_vivenda bono_lonchera porc_avances  
5694         4     NaN                0           0             0          0.5  
7540         4     NaN                1           0             1          0.3  
30169        3     NaN                1           0             1          0.3  
13879        4     NaN                0           0             0          0.4  
33377        1     NaN                1           0             1          0.3  
...        ...     ...              ...         ...           ...          ...  
29541        2     NaN                1           0             1          0.3  
16826        1     NaN                0           0             0          0.4  
23554        4     NaN                1           0             1          0.3  
23012        4     NaN                0           0             0          0.4  
33047        3     NaN                1           0             1          0.3  

[15001 rows x 27 columns]
2023-05-13 21:59:35,239:INFO:get_config() successfully completed......................................
2023-05-13 21:59:35,239:INFO:Initializing get_config()
2023-05-13 21:59:35,239:INFO:get_config(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001C888B22490>, variable=y_test)
2023-05-13 21:59:35,239:INFO:Variable: 'y_test' used to return the transformed values in PyCaret 2.x. From PyCaret 3.x, this will return the raw values. If you need the transformed values, call get_config with 'y_test_transformed' instead.
2023-05-13 21:59:35,240:WARNING:c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\pycaret\internal\pycaret_experiment\pycaret_experiment.py:322: UserWarning: Variable: 'y_test' used to return the transformed values in PyCaret 2.x. From PyCaret 3.x, this will return the raw values. If you need the transformed values, call get_config with 'y_test_transformed' instead.
  warnings.warn(msg)  # print on screen

2023-05-13 21:59:35,247:INFO:Variable:  returned as 5694     0
7540     0
30169    0
13879    0
33377    0
        ..
29541    0
16826    0
23554    0
23012    0
33047    0
Name: Target, Length: 15001, dtype: category
Categories (2, object): ['0', '1']
2023-05-13 21:59:35,247:INFO:get_config() successfully completed......................................
2023-05-13 21:59:35,251:INFO:Initializing predict_model()
2023-05-13 21:59:35,251:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001C888B22490>, estimator=LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=123, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0), probability_threshold=None, encoded_labels=False, raw_score=True, round=4, verbose=True, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x000001C891CC10D0>)
2023-05-13 21:59:35,251:INFO:Checking exceptions
2023-05-13 21:59:35,251:INFO:Preloading libraries
2023-05-13 21:59:35,254:INFO:Set up data.
2023-05-13 21:59:35,269:INFO:Set up index.
2023-05-13 22:00:02,002:INFO:Initializing save_model()
2023-05-13 22:00:02,002:INFO:save_model(model=LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=123, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0), model_name=best_clf, prep_pipe_=Pipeline(memory=FastMemory(location=C:\Users\camil\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('date_feature_extractor',
                 TransformerWrapper(exclude=None, include=['Fecha.Expedicion'],
                                    transformer=ExtractDateTimeFeatures(features=['day',
                                                                                  'month',
                                                                                  'year']))),
                ('nu...
                                    transformer=FixImbalancer(estimator=SMOTE(k_neighbors=5,
                                                                              n_jobs=None,
                                                                              random_state=None,
                                                                              sampling_strategy='auto')))),
                ('normalize',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False), verbose=True, use_case=MLUsecase.CLASSIFICATION, kwargs={})
2023-05-13 22:00:02,002:INFO:Adding model into prep_pipe
2023-05-13 22:00:02,040:INFO:best_clf.pkl saved in current working directory
2023-05-13 22:00:02,149:INFO:Pipeline(memory=FastMemory(location=C:\Users\camil\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('date_feature_extractor',
                 TransformerWrapper(exclude=None, include=['Fecha.Expedicion'],
                                    transformer=ExtractDateTimeFeatures(features=['day',
                                                                                  'month',
                                                                                  'year']))),
                ('nu...
                 LGBMClassifier(boosting_type='gbdt', class_weight=None,
                                colsample_bytree=1.0, importance_type='split',
                                learning_rate=0.1, max_depth=-1,
                                min_child_samples=20, min_child_weight=0.001,
                                min_split_gain=0.0, n_estimators=100, n_jobs=-1,
                                num_leaves=31, objective=None, random_state=123,
                                reg_alpha=0.0, reg_lambda=0.0, silent='warn',
                                subsample=1.0, subsample_for_bin=200000,
                                subsample_freq=0))],
         verbose=False)
2023-05-13 22:00:02,149:INFO:save_model() successfully completed......................................
2023-05-13 22:00:06,911:INFO:Initializing load_model()
2023-05-13 22:00:06,911:INFO:load_model(model_name=best_clf, platform=None, authentication=None, verbose=True)
2023-05-13 22:03:24,654:INFO:Initializing predict_model()
2023-05-13 22:03:24,654:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001C888B22490>, estimator=Pipeline(memory=FastMemory(location=C:\Users\camil\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('date_feature_extractor',
                 TransformerWrapper(exclude=None, include=['Fecha.Expedicion'],
                                    transformer=ExtractDateTimeFeatures(features=['day',
                                                                                  'month',
                                                                                  'year']))),
                ('nu...
                 LGBMClassifier(boosting_type='gbdt', class_weight=None,
                                colsample_bytree=1.0, importance_type='split',
                                learning_rate=0.1, max_depth=-1,
                                min_child_samples=20, min_child_weight=0.001,
                                min_split_gain=0.0, n_estimators=100, n_jobs=-1,
                                num_leaves=31, objective=None, random_state=123,
                                reg_alpha=0.0, reg_lambda=0.0, silent='warn',
                                subsample=1.0, subsample_for_bin=200000,
                                subsample_freq=0))],
         verbose=False), probability_threshold=None, encoded_labels=False, raw_score=True, round=4, verbose=True, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x000001C88E0BCE50>)
2023-05-13 22:03:24,655:INFO:Checking exceptions
2023-05-13 22:03:24,655:INFO:Preloading libraries
2023-05-13 22:03:24,658:INFO:Set up data.
2023-05-13 22:03:24,685:INFO:Set up index.
2023-05-13 22:04:33,610:INFO:Initializing predict_model()
2023-05-13 22:04:33,610:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001C888B22490>, estimator=Pipeline(memory=FastMemory(location=C:\Users\camil\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('date_feature_extractor',
                 TransformerWrapper(exclude=None, include=['Fecha.Expedicion'],
                                    transformer=ExtractDateTimeFeatures(features=['day',
                                                                                  'month',
                                                                                  'year']))),
                ('nu...
                 LGBMClassifier(boosting_type='gbdt', class_weight=None,
                                colsample_bytree=1.0, importance_type='split',
                                learning_rate=0.1, max_depth=-1,
                                min_child_samples=20, min_child_weight=0.001,
                                min_split_gain=0.0, n_estimators=100, n_jobs=-1,
                                num_leaves=31, objective=None, random_state=123,
                                reg_alpha=0.0, reg_lambda=0.0, silent='warn',
                                subsample=1.0, subsample_for_bin=200000,
                                subsample_freq=0))],
         verbose=False), probability_threshold=None, encoded_labels=False, raw_score=True, round=4, verbose=True, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x000001C88DE12280>)
2023-05-13 22:04:33,610:INFO:Checking exceptions
2023-05-13 22:04:33,610:INFO:Preloading libraries
2023-05-13 22:04:33,615:INFO:Set up data.
2023-05-13 22:04:33,644:INFO:Set up index.
2023-05-13 22:09:31,779:INFO:Initializing predict_model()
2023-05-13 22:09:31,780:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001C888B22490>, estimator=Pipeline(memory=FastMemory(location=C:\Users\camil\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('date_feature_extractor',
                 TransformerWrapper(exclude=None, include=['Fecha.Expedicion'],
                                    transformer=ExtractDateTimeFeatures(features=['day',
                                                                                  'month',
                                                                                  'year']))),
                ('nu...
                 LGBMClassifier(boosting_type='gbdt', class_weight=None,
                                colsample_bytree=1.0, importance_type='split',
                                learning_rate=0.1, max_depth=-1,
                                min_child_samples=20, min_child_weight=0.001,
                                min_split_gain=0.0, n_estimators=100, n_jobs=-1,
                                num_leaves=31, objective=None, random_state=123,
                                reg_alpha=0.0, reg_lambda=0.0, silent='warn',
                                subsample=1.0, subsample_for_bin=200000,
                                subsample_freq=0))],
         verbose=False), probability_threshold=None, encoded_labels=False, raw_score=True, round=4, verbose=True, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x000001C89376E790>)
2023-05-13 22:09:31,780:INFO:Checking exceptions
2023-05-13 22:09:31,780:INFO:Preloading libraries
2023-05-13 22:09:31,782:INFO:Set up data.
2023-05-13 22:09:31,816:INFO:Set up index.
2023-05-13 22:12:03,562:INFO:Initializing predict_model()
2023-05-13 22:12:03,563:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001C888B22490>, estimator=Pipeline(memory=FastMemory(location=C:\Users\camil\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('date_feature_extractor',
                 TransformerWrapper(exclude=None, include=['Fecha.Expedicion'],
                                    transformer=ExtractDateTimeFeatures(features=['day',
                                                                                  'month',
                                                                                  'year']))),
                ('nu...
                 LGBMClassifier(boosting_type='gbdt', class_weight=None,
                                colsample_bytree=1.0, importance_type='split',
                                learning_rate=0.1, max_depth=-1,
                                min_child_samples=20, min_child_weight=0.001,
                                min_split_gain=0.0, n_estimators=100, n_jobs=-1,
                                num_leaves=31, objective=None, random_state=123,
                                reg_alpha=0.0, reg_lambda=0.0, silent='warn',
                                subsample=1.0, subsample_for_bin=200000,
                                subsample_freq=0))],
         verbose=False), probability_threshold=None, encoded_labels=False, raw_score=True, round=4, verbose=True, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x000001C8FA6D9F70>)
2023-05-13 22:12:03,563:INFO:Checking exceptions
2023-05-13 22:12:03,563:INFO:Preloading libraries
2023-05-13 22:12:03,565:INFO:Set up data.
2023-05-13 22:12:03,604:INFO:Set up index.
2023-05-13 22:30:27,348:INFO:Initializing get_config()
2023-05-13 22:30:27,348:INFO:get_config(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001C888B22490>, variable=X_test)
2023-05-13 22:30:27,349:INFO:Variable: 'X_test' used to return the transformed values in PyCaret 2.x. From PyCaret 3.x, this will return the raw values. If you need the transformed values, call get_config with 'X_test_transformed' instead.
2023-05-13 22:30:27,350:WARNING:c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\pycaret\internal\pycaret_experiment\pycaret_experiment.py:322: UserWarning: Variable: 'X_test' used to return the transformed values in PyCaret 2.x. From PyCaret 3.x, this will return the raw values. If you need the transformed values, call get_config with 'X_test_transformed' instead.
  warnings.warn(msg)  # print on screen

2023-05-13 22:30:27,379:INFO:Variable:  returned as       Fecha.Expedicion  Disponible.Avances  Limite.Avances  Total.Intereses  \
5694        2010-03-19           2625000.0       2625000.0         0.000000   
7540        2008-07-10                 0.0        270000.0    494045.468750   
30169       2014-06-03            225000.0        225000.0       338.959991   
13879       2016-07-27            560000.0        560000.0         0.000000   
33377       2016-02-03            210000.0        210000.0         0.000000   
...                ...                 ...             ...              ...   
29541       2018-02-14            174000.0        174000.0         0.000000   
16826       2009-08-27            600000.0        600000.0         0.000000   
23554       2013-04-11            120000.0        120000.0       613.940002   
23012       2014-04-25            876000.0        876000.0     20172.650391   
33047       2016-03-23             10300.0        210000.0     13705.400391   

       Saldos.Mes.Ant  Pagos.Mes.Ant  Vtas.Mes.Ant  Edad.Mora  Limite.Cupo  \
5694     0.000000e+00           0.00          0.00        0.0    5250000.0   
7540     1.329984e+06           0.00          0.00       60.0     900000.0   
30169    5.285100e+03       41022.00          0.00        0.0     750000.0   
13879    0.000000e+00           0.00          0.00        0.0    1400000.0   
33377    0.000000e+00           0.00          0.00        0.0     700000.0   
...               ...            ...           ...        ...          ...   
29541    0.000000e+00           0.00          0.00        0.0     580000.0   
16826    0.000000e+00           0.00          0.00        0.0    1500000.0   
23554    7.169794e+04           0.00          0.00        0.0     400000.0   
23012    8.962524e+05      510263.75     363323.75        0.0    2190000.0   
33047    6.386579e+05       50000.00          0.00        0.0     700000.0   

       Pago.del.Mes  ...      nivel_educativo  estado_civil  Genero  PAC  \
5694            0.0  ...  tecnico_tecnologico      separado       M    1   
7540            0.0  ...           secundaria       soltero       F    2   
30169           0.0  ...             primaria         viudo       M    3   
13879           0.0  ...  tecnico_tecnologico         viudo       F    1   
33377           0.0  ...             primaria        casado       M    3   
...             ...  ...                  ...           ...     ...  ...   
29541           0.0  ...             primaria       soltero       F    3   
16826           0.0  ...  tecnico_tecnologico        casado       F    1   
23554           0.0  ...             primaria      separado       F    3   
23012           0.0  ...  tecnico_tecnologico         viudo       M    1   
33047           0.0  ...             primaria       soltero       F    3   

      contrato estrato  cuota_monetaria sub_vivenda bono_lonchera porc_avances  
5694         4     NaN                0           0             0          0.5  
7540         4     NaN                1           0             1          0.3  
30169        3     NaN                1           0             1          0.3  
13879        4     NaN                0           0             0          0.4  
33377        1     NaN                1           0             1          0.3  
...        ...     ...              ...         ...           ...          ...  
29541        2     NaN                1           0             1          0.3  
16826        1     NaN                0           0             0          0.4  
23554        4     NaN                1           0             1          0.3  
23012        4     NaN                0           0             0          0.4  
33047        3     NaN                1           0             1          0.3  

[15001 rows x 27 columns]
2023-05-13 22:30:27,380:INFO:get_config() successfully completed......................................
2023-05-13 22:30:27,380:INFO:Initializing get_config()
2023-05-13 22:30:27,380:INFO:get_config(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001C888B22490>, variable=y_test)
2023-05-13 22:30:27,380:INFO:Variable: 'y_test' used to return the transformed values in PyCaret 2.x. From PyCaret 3.x, this will return the raw values. If you need the transformed values, call get_config with 'y_test_transformed' instead.
2023-05-13 22:30:27,381:WARNING:c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\pycaret\internal\pycaret_experiment\pycaret_experiment.py:322: UserWarning: Variable: 'y_test' used to return the transformed values in PyCaret 2.x. From PyCaret 3.x, this will return the raw values. If you need the transformed values, call get_config with 'y_test_transformed' instead.
  warnings.warn(msg)  # print on screen

2023-05-13 22:30:27,386:INFO:Variable:  returned as 5694     0
7540     0
30169    0
13879    0
33377    0
        ..
29541    0
16826    0
23554    0
23012    0
33047    0
Name: Target, Length: 15001, dtype: category
Categories (2, object): ['0', '1']
2023-05-13 22:30:27,386:INFO:get_config() successfully completed......................................
2023-05-13 22:30:27,390:INFO:Initializing predict_model()
2023-05-13 22:30:27,390:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001C888B22490>, estimator=LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=123, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0), probability_threshold=None, encoded_labels=False, raw_score=True, round=4, verbose=True, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x000001C892FB58B0>)
2023-05-13 22:30:27,390:INFO:Checking exceptions
2023-05-13 22:30:27,390:INFO:Preloading libraries
2023-05-13 22:30:27,394:INFO:Set up data.
2023-05-13 22:30:27,410:INFO:Set up index.
2023-05-13 22:55:41,183:INFO:PyCaret ClusteringExperiment
2023-05-13 22:55:41,183:INFO:Logging name: cluster-default-name
2023-05-13 22:55:41,183:INFO:ML Usecase: MLUsecase.CLUSTERING
2023-05-13 22:55:41,183:INFO:version 3.0.0
2023-05-13 22:55:41,183:INFO:Initializing setup()
2023-05-13 22:55:41,183:INFO:self.USI: f21e
2023-05-13 22:55:41,183:INFO:self._variable_keys: {'gpu_param', 'exp_id', 'idx', '_ml_usecase', 'data', 'exp_name_log', 'log_plots_param', 'USI', 'seed', '_available_plots', 'n_jobs_param', 'html_param', 'pipeline', 'X', 'gpu_n_jobs_param', 'logging_param', 'memory'}
2023-05-13 22:55:41,183:INFO:Checking environment
2023-05-13 22:55:41,183:INFO:python_version: 3.8.16
2023-05-13 22:55:41,183:INFO:python_build: ('default', 'Mar  2 2023 03:18:16')
2023-05-13 22:55:41,184:INFO:machine: AMD64
2023-05-13 22:55:41,184:INFO:platform: Windows-10-10.0.19045-SP0
2023-05-13 22:55:41,187:INFO:Memory: svmem(total=34292408320, available=20912455680, percent=39.0, used=13379952640, free=20912455680)
2023-05-13 22:55:41,187:INFO:Physical Core: 4
2023-05-13 22:55:41,187:INFO:Logical Core: 8
2023-05-13 22:55:41,187:INFO:Checking libraries
2023-05-13 22:55:41,187:INFO:System:
2023-05-13 22:55:41,187:INFO:    python: 3.8.16 (default, Mar  2 2023, 03:18:16) [MSC v.1916 64 bit (AMD64)]
2023-05-13 22:55:41,187:INFO:executable: c:\Users\camil\anaconda3\envs\pycaretenv\python.exe
2023-05-13 22:55:41,187:INFO:   machine: Windows-10-10.0.19045-SP0
2023-05-13 22:55:41,187:INFO:PyCaret required dependencies:
2023-05-13 22:55:41,188:INFO:                 pip: 23.0.1
2023-05-13 22:55:41,188:INFO:          setuptools: 66.0.0
2023-05-13 22:55:41,188:INFO:             pycaret: 3.0.0
2023-05-13 22:55:41,188:INFO:             IPython: 8.12.2
2023-05-13 22:55:41,188:INFO:          ipywidgets: 8.0.6
2023-05-13 22:55:41,188:INFO:                tqdm: 4.65.0
2023-05-13 22:55:41,188:INFO:               numpy: 1.24.3
2023-05-13 22:55:41,188:INFO:              pandas: 1.5.3
2023-05-13 22:55:41,188:INFO:              jinja2: 3.1.2
2023-05-13 22:55:41,188:INFO:               scipy: 1.10.1
2023-05-13 22:55:41,188:INFO:              joblib: 1.2.0
2023-05-13 22:55:41,188:INFO:             sklearn: 1.2.2
2023-05-13 22:55:41,188:INFO:                pyod: 1.0.9
2023-05-13 22:55:41,188:INFO:            imblearn: 0.10.1
2023-05-13 22:55:41,188:INFO:   category_encoders: 2.6.0
2023-05-13 22:55:41,188:INFO:            lightgbm: 3.3.5
2023-05-13 22:55:41,189:INFO:               numba: 0.57.0
2023-05-13 22:55:41,189:INFO:            requests: 2.30.0
2023-05-13 22:55:41,189:INFO:          matplotlib: 3.7.1
2023-05-13 22:55:41,189:INFO:          scikitplot: 0.3.7
2023-05-13 22:55:41,189:INFO:         yellowbrick: 1.5
2023-05-13 22:55:41,189:INFO:              plotly: 5.14.1
2023-05-13 22:55:41,189:INFO:             kaleido: 0.2.1
2023-05-13 22:55:41,189:INFO:         statsmodels: 0.14.0
2023-05-13 22:55:41,189:INFO:              sktime: 0.18.0
2023-05-13 22:55:41,189:INFO:               tbats: 1.1.3
2023-05-13 22:55:41,189:INFO:            pmdarima: 2.0.3
2023-05-13 22:55:41,189:INFO:              psutil: 5.9.5
2023-05-13 22:55:41,189:INFO:PyCaret optional dependencies:
2023-05-13 22:55:41,190:INFO:                shap: Not installed
2023-05-13 22:55:41,190:INFO:           interpret: Not installed
2023-05-13 22:55:41,190:INFO:                umap: Not installed
2023-05-13 22:55:41,190:INFO:    pandas_profiling: Not installed
2023-05-13 22:55:41,190:INFO:  explainerdashboard: Not installed
2023-05-13 22:55:41,190:INFO:             autoviz: Not installed
2023-05-13 22:55:41,190:INFO:           fairlearn: Not installed
2023-05-13 22:55:41,190:INFO:             xgboost: Not installed
2023-05-13 22:55:41,190:INFO:            catboost: Not installed
2023-05-13 22:55:41,191:INFO:              kmodes: Not installed
2023-05-13 22:55:41,191:INFO:             mlxtend: Not installed
2023-05-13 22:55:41,191:INFO:       statsforecast: Not installed
2023-05-13 22:55:41,191:INFO:        tune_sklearn: Not installed
2023-05-13 22:55:41,191:INFO:                 ray: Not installed
2023-05-13 22:55:41,191:INFO:            hyperopt: Not installed
2023-05-13 22:55:41,191:INFO:              optuna: Not installed
2023-05-13 22:55:41,191:INFO:               skopt: Not installed
2023-05-13 22:55:41,191:INFO:              mlflow: Not installed
2023-05-13 22:55:41,191:INFO:              gradio: Not installed
2023-05-13 22:55:41,191:INFO:             fastapi: Not installed
2023-05-13 22:55:41,191:INFO:             uvicorn: Not installed
2023-05-13 22:55:41,191:INFO:              m2cgen: Not installed
2023-05-13 22:55:41,191:INFO:           evidently: Not installed
2023-05-13 22:55:41,191:INFO:               fugue: Not installed
2023-05-13 22:55:41,191:INFO:           streamlit: Not installed
2023-05-13 22:55:41,191:INFO:             prophet: Not installed
2023-05-13 22:55:41,191:INFO:None
2023-05-13 22:55:41,191:INFO:Set up data.
2023-05-13 22:55:41,362:INFO:Set up index.
2023-05-13 22:55:41,362:INFO:Assigning column types.
2023-05-13 22:55:41,373:INFO:Engine successfully changes for model 'kmeans' to 'sklearn'.
2023-05-13 22:55:41,374:INFO:Engine for model 'dbscan' has not been set explicitly, hence returning None.
2023-05-13 22:55:41,374:WARNING:
'kmodes' is a soft dependency and not included in the pycaret installation. Please run: `pip install kmodes` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-13 22:55:41,374:INFO:Engine for model 'dbscan' has not been set explicitly, hence returning None.
2023-05-13 22:55:41,374:WARNING:
'kmodes' is a soft dependency and not included in the pycaret installation. Please run: `pip install kmodes` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-13 22:55:41,374:INFO:Engine successfully changes for model 'dbscan' to 'sklearn'.
2023-05-13 22:55:41,375:WARNING:
'kmodes' is a soft dependency and not included in the pycaret installation. Please run: `pip install kmodes` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-13 22:55:41,375:WARNING:
'kmodes' is a soft dependency and not included in the pycaret installation. Please run: `pip install kmodes` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-13 22:55:41,376:INFO:Preparing preprocessing pipeline...
2023-05-13 22:55:41,376:INFO:Set up date feature engineering.
2023-05-13 22:55:41,377:INFO:Set up simple imputation.
2023-05-13 22:55:41,389:INFO:Set up encoding of ordinal features.
2023-05-13 22:55:41,401:INFO:Set up encoding of categorical features.
2023-05-13 22:55:41,401:INFO:Set up feature normalization.
2023-05-13 22:55:41,402:INFO:Set up PCA.
2023-05-13 22:55:43,341:INFO:Finished creating preprocessing pipeline.
2023-05-13 22:55:43,399:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\camil\AppData\Local\Temp\joblib),
         steps=[('date_feature_extractor',
                 TransformerWrapper(exclude=None, include=['Fecha.Expedicion'],
                                    transformer=ExtractDateTimeFeatures(features=['day',
                                                                                  'month',
                                                                                  'year']))),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Disponible.Avances',
                                             'Limite.Avances',
                                             'Total....
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True))),
                ('pca',
                 TransformerWrapper(exclude=[], include=None,
                                    transformer=PCA(copy=True,
                                                    iterated_power='auto',
                                                    n_components=5,
                                                    n_oversamples=10,
                                                    power_iteration_normalizer='auto',
                                                    random_state=None,
                                                    svd_solver='auto', tol=0.0,
                                                    whiten=False)))],
         verbose=False)
2023-05-13 22:55:43,399:INFO:Creating final display dataframe.
2023-05-13 22:55:44,214:INFO:Setup _display_container:                  Description                 Value
0                 Session id                   123
1        Original data shape           (50001, 35)
2     Transformed data shape            (50001, 5)
3            Ignore features                     8
4           Ordinal features                     4
5           Numeric features                    15
6              Date features                     1
7       Categorical features                    11
8   Rows with missing values                100.0%
9                 Preprocess                  True
10           Imputation type                simple
11        Numeric imputation                  mean
12    Categorical imputation                  mode
13  Maximum one-hot encoding                    -1
14           Encoding method                  None
15                 Normalize                  True
16          Normalize method                zscore
17                       PCA                  True
18                PCA method                linear
19            PCA components                     5
20                  CPU Jobs                    -1
21                   Use GPU                 False
22            Log Experiment                 False
23           Experiment Name  cluster-default-name
24                       USI                  f21e
2023-05-13 22:55:44,224:WARNING:
'kmodes' is a soft dependency and not included in the pycaret installation. Please run: `pip install kmodes` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-13 22:55:44,225:WARNING:
'kmodes' is a soft dependency and not included in the pycaret installation. Please run: `pip install kmodes` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-13 22:55:44,226:INFO:setup() successfully completed in 4.09s...............
2023-05-13 22:56:19,215:INFO:Initializing create_model()
2023-05-13 22:56:19,216:INFO:create_model(self=<pycaret.clustering.oop.ClusteringExperiment object at 0x000001C893216B50>, estimator=kmeans, num_clusters=4, fraction=0.05, ground_truth=None, round=4, fit_kwargs=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, raise_num_clusters=False, display=None, kwargs={})
2023-05-13 22:56:19,217:INFO:Checking exceptions
2023-05-13 22:56:19,313:INFO:Importing untrained model
2023-05-13 22:56:19,321:INFO:K-Means Clustering Imported successfully
2023-05-13 22:56:19,333:INFO:Fitting Model
2023-05-13 22:56:20,021:WARNING:c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\sklearn\cluster\_kmeans.py:870: FutureWarning: The default value of `n_init` will change from 10 to 'auto' in 1.4. Set the value of `n_init` explicitly to suppress the warning
  warnings.warn(

2023-05-13 22:56:50,877:INFO:KMeans(algorithm='lloyd', copy_x=True, init='k-means++', max_iter=300,
       n_clusters=4, n_init='warn', random_state=123, tol=0.0001, verbose=0)
2023-05-13 22:56:50,877:INFO:create_models() successfully completed......................................
2023-05-13 22:56:50,885:INFO:Uploading results into container
2023-05-13 22:56:50,889:INFO:Uploading model into container now
2023-05-13 22:56:50,899:INFO:_master_model_container: 1
2023-05-13 22:56:50,899:INFO:_display_container: 2
2023-05-13 22:56:50,900:INFO:KMeans(algorithm='lloyd', copy_x=True, init='k-means++', max_iter=300,
       n_clusters=4, n_init='warn', random_state=123, tol=0.0001, verbose=0)
2023-05-13 22:56:50,900:INFO:create_model() successfully completed......................................
2023-05-13 22:57:04,377:INFO:Initializing evaluate_model()
2023-05-13 22:57:04,377:INFO:evaluate_model(self=<pycaret.clustering.oop.ClusteringExperiment object at 0x000001C893216B50>, estimator=KMeans(algorithm='lloyd', copy_x=True, init='k-means++', max_iter=300,
       n_clusters=4, n_init='warn', random_state=123, tol=0.0001, verbose=0), fold=None, fit_kwargs=None, plot_kwargs=None, feature_name=None, groups=None, use_train_data=False)
2023-05-13 22:57:04,401:INFO:Initializing plot_model()
2023-05-13 22:57:04,401:INFO:plot_model(plot=pipeline, fold=None, use_train_data=False, verbose=False, display=None, display_format=None, estimator=KMeans(algorithm='lloyd', copy_x=True, init='k-means++', max_iter=300,
       n_clusters=4, n_init='warn', random_state=123, tol=0.0001, verbose=0), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.clustering.oop.ClusteringExperiment object at 0x000001C893216B50>, system=True)
2023-05-13 22:57:04,401:INFO:Checking exceptions
2023-05-13 22:57:04,404:INFO:Preloading libraries
2023-05-13 22:57:04,405:INFO:Copying training dataset
2023-05-13 22:57:04,405:INFO:Plot type: pipeline
2023-05-13 22:57:18,737:INFO:Initializing plot_model()
2023-05-13 22:57:18,738:INFO:plot_model(plot=elbow, fold=None, use_train_data=False, verbose=False, display=None, display_format=None, estimator=KMeans(algorithm='lloyd', copy_x=True, init='k-means++', max_iter=300,
       n_clusters=4, n_init='warn', random_state=123, tol=0.0001, verbose=0), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.clustering.oop.ClusteringExperiment object at 0x000001C893216B50>, system=True)
2023-05-13 22:57:18,738:INFO:Checking exceptions
2023-05-13 22:57:18,741:INFO:Preloading libraries
2023-05-13 22:57:18,741:INFO:Copying training dataset
2023-05-13 22:57:18,741:INFO:Plot type: elbow
2023-05-13 22:57:18,831:INFO:Fitting Model
2023-05-13 22:57:18,837:WARNING:c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\sklearn\cluster\_kmeans.py:870: FutureWarning: The default value of `n_init` will change from 10 to 'auto' in 1.4. Set the value of `n_init` explicitly to suppress the warning
  warnings.warn(

2023-05-13 22:57:18,944:WARNING:c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\sklearn\cluster\_kmeans.py:870: FutureWarning: The default value of `n_init` will change from 10 to 'auto' in 1.4. Set the value of `n_init` explicitly to suppress the warning
  warnings.warn(

2023-05-13 22:57:19,171:WARNING:c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\sklearn\cluster\_kmeans.py:870: FutureWarning: The default value of `n_init` will change from 10 to 'auto' in 1.4. Set the value of `n_init` explicitly to suppress the warning
  warnings.warn(

2023-05-13 22:57:19,478:WARNING:c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\sklearn\cluster\_kmeans.py:870: FutureWarning: The default value of `n_init` will change from 10 to 'auto' in 1.4. Set the value of `n_init` explicitly to suppress the warning
  warnings.warn(

2023-05-13 22:57:19,782:WARNING:c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\sklearn\cluster\_kmeans.py:870: FutureWarning: The default value of `n_init` will change from 10 to 'auto' in 1.4. Set the value of `n_init` explicitly to suppress the warning
  warnings.warn(

2023-05-13 22:57:20,118:WARNING:c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\sklearn\cluster\_kmeans.py:870: FutureWarning: The default value of `n_init` will change from 10 to 'auto' in 1.4. Set the value of `n_init` explicitly to suppress the warning
  warnings.warn(

2023-05-13 22:57:20,528:WARNING:c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\sklearn\cluster\_kmeans.py:870: FutureWarning: The default value of `n_init` will change from 10 to 'auto' in 1.4. Set the value of `n_init` explicitly to suppress the warning
  warnings.warn(

2023-05-13 22:57:21,027:WARNING:c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\sklearn\cluster\_kmeans.py:870: FutureWarning: The default value of `n_init` will change from 10 to 'auto' in 1.4. Set the value of `n_init` explicitly to suppress the warning
  warnings.warn(

2023-05-13 22:57:21,580:WARNING:c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\sklearn\cluster\_kmeans.py:870: FutureWarning: The default value of `n_init` will change from 10 to 'auto' in 1.4. Set the value of `n_init` explicitly to suppress the warning
  warnings.warn(

2023-05-13 22:57:22,673:INFO:Visual Rendered Successfully
2023-05-13 22:57:22,849:INFO:plot_model() successfully completed......................................
2023-05-13 22:57:36,833:INFO:Initializing plot_model()
2023-05-13 22:57:36,833:INFO:plot_model(plot=silhouette, fold=None, use_train_data=False, verbose=False, display=None, display_format=None, estimator=KMeans(algorithm='lloyd', copy_x=True, init='k-means++', max_iter=300,
       n_clusters=4, n_init='warn', random_state=123, tol=0.0001, verbose=0), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.clustering.oop.ClusteringExperiment object at 0x000001C893216B50>, system=True)
2023-05-13 22:57:36,834:INFO:Checking exceptions
2023-05-13 22:57:36,836:INFO:Preloading libraries
2023-05-13 22:57:36,836:INFO:Copying training dataset
2023-05-13 22:57:36,836:INFO:Plot type: silhouette
2023-05-13 22:57:36,879:INFO:Fitting Model
2023-05-13 22:57:36,880:WARNING:c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\sklearn\base.py:439: UserWarning: X does not have valid feature names, but KMeans was fitted with feature names
  warnings.warn(

2023-05-13 22:58:05,161:INFO:Initializing plot_model()
2023-05-13 22:58:05,162:INFO:plot_model(plot=elbow, fold=None, use_train_data=False, verbose=True, display=None, display_format=None, estimator=KMeans(algorithm='lloyd', copy_x=True, init='k-means++', max_iter=300,
       n_clusters=4, n_init='warn', random_state=123, tol=0.0001, verbose=0), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.clustering.oop.ClusteringExperiment object at 0x000001C893216B50>, system=True)
2023-05-13 22:58:05,162:INFO:Checking exceptions
2023-05-13 22:58:05,168:INFO:Preloading libraries
2023-05-13 22:58:05,169:INFO:Copying training dataset
2023-05-13 22:58:05,169:INFO:Plot type: elbow
2023-05-13 22:58:05,225:INFO:Fitting Model
2023-05-13 22:58:05,235:WARNING:c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\sklearn\cluster\_kmeans.py:870: FutureWarning: The default value of `n_init` will change from 10 to 'auto' in 1.4. Set the value of `n_init` explicitly to suppress the warning
  warnings.warn(

2023-05-13 22:58:05,345:WARNING:c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\sklearn\cluster\_kmeans.py:870: FutureWarning: The default value of `n_init` will change from 10 to 'auto' in 1.4. Set the value of `n_init` explicitly to suppress the warning
  warnings.warn(

2023-05-13 22:58:05,579:WARNING:c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\sklearn\cluster\_kmeans.py:870: FutureWarning: The default value of `n_init` will change from 10 to 'auto' in 1.4. Set the value of `n_init` explicitly to suppress the warning
  warnings.warn(

2023-05-13 22:58:05,893:WARNING:c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\sklearn\cluster\_kmeans.py:870: FutureWarning: The default value of `n_init` will change from 10 to 'auto' in 1.4. Set the value of `n_init` explicitly to suppress the warning
  warnings.warn(

2023-05-13 22:58:06,211:WARNING:c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\sklearn\cluster\_kmeans.py:870: FutureWarning: The default value of `n_init` will change from 10 to 'auto' in 1.4. Set the value of `n_init` explicitly to suppress the warning
  warnings.warn(

2023-05-13 22:58:06,643:WARNING:c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\sklearn\cluster\_kmeans.py:870: FutureWarning: The default value of `n_init` will change from 10 to 'auto' in 1.4. Set the value of `n_init` explicitly to suppress the warning
  warnings.warn(

2023-05-13 22:58:07,036:WARNING:c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\sklearn\cluster\_kmeans.py:870: FutureWarning: The default value of `n_init` will change from 10 to 'auto' in 1.4. Set the value of `n_init` explicitly to suppress the warning
  warnings.warn(

2023-05-13 22:58:07,551:WARNING:c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\sklearn\cluster\_kmeans.py:870: FutureWarning: The default value of `n_init` will change from 10 to 'auto' in 1.4. Set the value of `n_init` explicitly to suppress the warning
  warnings.warn(

2023-05-13 22:58:08,113:WARNING:c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\sklearn\cluster\_kmeans.py:870: FutureWarning: The default value of `n_init` will change from 10 to 'auto' in 1.4. Set the value of `n_init` explicitly to suppress the warning
  warnings.warn(

2023-05-13 22:58:09,065:INFO:Visual Rendered Successfully
2023-05-13 22:58:09,262:INFO:plot_model() successfully completed......................................
2023-05-13 22:58:09,285:INFO:Initializing plot_model()
2023-05-13 22:58:09,285:INFO:plot_model(plot=cluster, fold=None, use_train_data=False, verbose=False, display=None, display_format=None, estimator=KMeans(algorithm='lloyd', copy_x=True, init='k-means++', max_iter=300,
       n_clusters=4, n_init='warn', random_state=123, tol=0.0001, verbose=0), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.clustering.oop.ClusteringExperiment object at 0x000001C893216B50>, system=True)
2023-05-13 22:58:09,285:INFO:Checking exceptions
2023-05-13 22:58:09,288:INFO:Preloading libraries
2023-05-13 22:58:09,288:INFO:Copying training dataset
2023-05-13 22:58:09,288:INFO:Plot type: cluster
2023-05-13 22:58:09,288:INFO:SubProcess assign_model() called ==================================
2023-05-13 22:58:09,289:INFO:Initializing assign_model()
2023-05-13 22:58:09,289:INFO:assign_model(self=<pycaret.clustering.oop.ClusteringExperiment object at 0x000001C893216B50>, model=KMeans(algorithm='lloyd', copy_x=True, init='k-means++', max_iter=300,
       n_clusters=4, n_init='warn', random_state=123, tol=0.0001, verbose=0), transformation=True, score=True, verbose=False)
2023-05-13 22:58:09,289:INFO:Checking exceptions
2023-05-13 22:58:09,289:INFO:Determining Trained Model
2023-05-13 22:58:09,289:INFO:Trained Model : K-Means Clustering
2023-05-13 22:58:09,289:INFO:Copying data
2023-05-13 22:58:09,351:INFO:Transformation parameter set to True. Assigned clusters are attached on transformed dataset.
2023-05-13 22:58:09,377:INFO:(50001, 6)
2023-05-13 22:58:09,377:INFO:assign_model() successfully completed......................................
2023-05-13 22:58:09,379:INFO:SubProcess assign_model() end ==================================
2023-05-13 22:58:09,382:INFO:Fitting PCA()
2023-05-13 22:58:09,428:INFO:Sorting dataframe
2023-05-13 22:58:09,468:INFO:Rendering Visual
2023-05-13 22:58:11,487:INFO:Visual Rendered Successfully
2023-05-13 22:58:11,735:INFO:plot_model() successfully completed......................................
2023-05-13 22:58:20,739:INFO:Initializing plot_model()
2023-05-13 22:58:20,739:INFO:plot_model(plot=3D, fold=None, use_train_data=False, verbose=True, display=None, display_format=None, estimator=KMeans(algorithm='lloyd', copy_x=True, init='k-means++', max_iter=300,
       n_clusters=4, n_init='warn', random_state=123, tol=0.0001, verbose=0), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.clustering.oop.ClusteringExperiment object at 0x000001C893216B50>, system=True)
2023-05-13 22:58:20,739:INFO:Checking exceptions
2023-05-13 22:58:44,060:INFO:Initializing plot_model()
2023-05-13 22:58:44,061:INFO:plot_model(plot=silhouette, fold=None, use_train_data=False, verbose=True, display=None, display_format=None, estimator=KMeans(algorithm='lloyd', copy_x=True, init='k-means++', max_iter=300,
       n_clusters=4, n_init='warn', random_state=123, tol=0.0001, verbose=0), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.clustering.oop.ClusteringExperiment object at 0x000001C893216B50>, system=True)
2023-05-13 22:58:44,061:INFO:Checking exceptions
2023-05-13 22:58:44,068:INFO:Preloading libraries
2023-05-13 22:58:44,069:INFO:Copying training dataset
2023-05-13 22:58:44,069:INFO:Plot type: silhouette
2023-05-13 22:58:44,119:INFO:Fitting Model
2023-05-13 22:58:44,120:WARNING:c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\sklearn\base.py:439: UserWarning:

X does not have valid feature names, but KMeans was fitted with feature names


2023-05-13 22:59:45,187:INFO:Visual Rendered Successfully
2023-05-13 22:59:45,412:INFO:plot_model() successfully completed......................................
2023-05-13 23:02:27,901:INFO:Initializing predict_model()
2023-05-13 23:02:27,901:INFO:predict_model(self=<pycaret.clustering.oop.ClusteringExperiment object at 0x000001C893216B50>, estimator=KMeans(algorithm='lloyd', copy_x=True, init='k-means++', max_iter=300,
       n_clusters=4, n_init='warn', random_state=123, tol=0.0001, verbose=0), ml_usecase=None)
2023-05-13 23:03:29,028:INFO:PyCaret ClusteringExperiment
2023-05-13 23:03:29,028:INFO:Logging name: cluster-default-name
2023-05-13 23:03:29,028:INFO:ML Usecase: MLUsecase.CLUSTERING
2023-05-13 23:03:29,028:INFO:version 3.0.0
2023-05-13 23:03:29,028:INFO:Initializing setup()
2023-05-13 23:03:29,028:INFO:self.USI: 78b6
2023-05-13 23:03:29,028:INFO:self._variable_keys: {'gpu_param', 'exp_id', 'idx', '_ml_usecase', 'data', 'exp_name_log', 'log_plots_param', 'USI', 'seed', '_available_plots', 'n_jobs_param', 'html_param', 'pipeline', 'X', 'gpu_n_jobs_param', 'logging_param', 'memory'}
2023-05-13 23:03:29,028:INFO:Checking environment
2023-05-13 23:03:29,028:INFO:python_version: 3.8.16
2023-05-13 23:03:29,028:INFO:python_build: ('default', 'Mar  2 2023 03:18:16')
2023-05-13 23:03:29,029:INFO:machine: AMD64
2023-05-13 23:03:29,029:INFO:platform: Windows-10-10.0.19045-SP0
2023-05-13 23:03:29,032:INFO:Memory: svmem(total=34292408320, available=20935925760, percent=38.9, used=13356482560, free=20935925760)
2023-05-13 23:03:29,032:INFO:Physical Core: 4
2023-05-13 23:03:29,032:INFO:Logical Core: 8
2023-05-13 23:03:29,032:INFO:Checking libraries
2023-05-13 23:03:29,032:INFO:System:
2023-05-13 23:03:29,032:INFO:    python: 3.8.16 (default, Mar  2 2023, 03:18:16) [MSC v.1916 64 bit (AMD64)]
2023-05-13 23:03:29,032:INFO:executable: c:\Users\camil\anaconda3\envs\pycaretenv\python.exe
2023-05-13 23:03:29,032:INFO:   machine: Windows-10-10.0.19045-SP0
2023-05-13 23:03:29,032:INFO:PyCaret required dependencies:
2023-05-13 23:03:29,032:INFO:                 pip: 23.0.1
2023-05-13 23:03:29,033:INFO:          setuptools: 66.0.0
2023-05-13 23:03:29,033:INFO:             pycaret: 3.0.0
2023-05-13 23:03:29,033:INFO:             IPython: 8.12.2
2023-05-13 23:03:29,033:INFO:          ipywidgets: 8.0.6
2023-05-13 23:03:29,033:INFO:                tqdm: 4.65.0
2023-05-13 23:03:29,033:INFO:               numpy: 1.24.3
2023-05-13 23:03:29,033:INFO:              pandas: 1.5.3
2023-05-13 23:03:29,033:INFO:              jinja2: 3.1.2
2023-05-13 23:03:29,033:INFO:               scipy: 1.10.1
2023-05-13 23:03:29,033:INFO:              joblib: 1.2.0
2023-05-13 23:03:29,033:INFO:             sklearn: 1.2.2
2023-05-13 23:03:29,033:INFO:                pyod: 1.0.9
2023-05-13 23:03:29,033:INFO:            imblearn: 0.10.1
2023-05-13 23:03:29,033:INFO:   category_encoders: 2.6.0
2023-05-13 23:03:29,033:INFO:            lightgbm: 3.3.5
2023-05-13 23:03:29,033:INFO:               numba: 0.57.0
2023-05-13 23:03:29,033:INFO:            requests: 2.30.0
2023-05-13 23:03:29,033:INFO:          matplotlib: 3.7.1
2023-05-13 23:03:29,033:INFO:          scikitplot: 0.3.7
2023-05-13 23:03:29,034:INFO:         yellowbrick: 1.5
2023-05-13 23:03:29,034:INFO:              plotly: 5.14.1
2023-05-13 23:03:29,034:INFO:             kaleido: 0.2.1
2023-05-13 23:03:29,034:INFO:         statsmodels: 0.14.0
2023-05-13 23:03:29,034:INFO:              sktime: 0.18.0
2023-05-13 23:03:29,034:INFO:               tbats: 1.1.3
2023-05-13 23:03:29,034:INFO:            pmdarima: 2.0.3
2023-05-13 23:03:29,034:INFO:              psutil: 5.9.5
2023-05-13 23:03:29,034:INFO:PyCaret optional dependencies:
2023-05-13 23:03:29,034:INFO:                shap: Not installed
2023-05-13 23:03:29,034:INFO:           interpret: Not installed
2023-05-13 23:03:29,034:INFO:                umap: Not installed
2023-05-13 23:03:29,034:INFO:    pandas_profiling: Not installed
2023-05-13 23:03:29,034:INFO:  explainerdashboard: Not installed
2023-05-13 23:03:29,034:INFO:             autoviz: Not installed
2023-05-13 23:03:29,035:INFO:           fairlearn: Not installed
2023-05-13 23:03:29,035:INFO:             xgboost: Not installed
2023-05-13 23:03:29,035:INFO:            catboost: Not installed
2023-05-13 23:03:29,035:INFO:              kmodes: Not installed
2023-05-13 23:03:29,035:INFO:             mlxtend: Not installed
2023-05-13 23:03:29,035:INFO:       statsforecast: Not installed
2023-05-13 23:03:29,035:INFO:        tune_sklearn: Not installed
2023-05-13 23:03:29,035:INFO:                 ray: Not installed
2023-05-13 23:03:29,035:INFO:            hyperopt: Not installed
2023-05-13 23:03:29,035:INFO:              optuna: Not installed
2023-05-13 23:03:29,035:INFO:               skopt: Not installed
2023-05-13 23:03:29,035:INFO:              mlflow: Not installed
2023-05-13 23:03:29,035:INFO:              gradio: Not installed
2023-05-13 23:03:29,035:INFO:             fastapi: Not installed
2023-05-13 23:03:29,035:INFO:             uvicorn: Not installed
2023-05-13 23:03:29,035:INFO:              m2cgen: Not installed
2023-05-13 23:03:29,036:INFO:           evidently: Not installed
2023-05-13 23:03:29,036:INFO:               fugue: Not installed
2023-05-13 23:03:29,036:INFO:           streamlit: Not installed
2023-05-13 23:03:29,036:INFO:             prophet: Not installed
2023-05-13 23:03:29,036:INFO:None
2023-05-13 23:03:29,036:INFO:Set up data.
2023-05-13 23:03:29,197:INFO:Set up index.
2023-05-13 23:03:29,198:INFO:Assigning column types.
2023-05-13 23:03:29,211:INFO:Engine successfully changes for model 'kmeans' to 'sklearn'.
2023-05-13 23:03:29,211:INFO:Engine for model 'dbscan' has not been set explicitly, hence returning None.
2023-05-13 23:03:29,211:WARNING:
'kmodes' is a soft dependency and not included in the pycaret installation. Please run: `pip install kmodes` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-13 23:03:29,211:INFO:Engine for model 'dbscan' has not been set explicitly, hence returning None.
2023-05-13 23:03:29,211:WARNING:
'kmodes' is a soft dependency and not included in the pycaret installation. Please run: `pip install kmodes` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-13 23:03:29,211:INFO:Engine successfully changes for model 'dbscan' to 'sklearn'.
2023-05-13 23:03:29,212:WARNING:
'kmodes' is a soft dependency and not included in the pycaret installation. Please run: `pip install kmodes` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-13 23:03:29,212:WARNING:
'kmodes' is a soft dependency and not included in the pycaret installation. Please run: `pip install kmodes` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-13 23:03:29,214:INFO:Preparing preprocessing pipeline...
2023-05-13 23:03:29,214:INFO:Set up date feature engineering.
2023-05-13 23:03:29,214:INFO:Set up simple imputation.
2023-05-13 23:03:29,228:INFO:Set up encoding of ordinal features.
2023-05-13 23:03:29,241:INFO:Set up encoding of categorical features.
2023-05-13 23:03:29,241:INFO:Set up feature normalization.
2023-05-13 23:03:29,765:INFO:Finished creating preprocessing pipeline.
2023-05-13 23:03:29,830:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\camil\AppData\Local\Temp\joblib),
         steps=[('date_feature_extractor',
                 TransformerWrapper(exclude=None, include=['Fecha.Expedicion'],
                                    transformer=ExtractDateTimeFeatures(features=['day',
                                                                                  'month',
                                                                                  'year']))),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Disponible.Avances',
                                             'Limite.Avances',
                                             'Total....
                                    transformer=OneHotEncoder(cols=['categoria',
                                                                    'segmento',
                                                                    'nivel_educativo',
                                                                    'estado_civil',
                                                                    'PAC',
                                                                    'contrato',
                                                                    'estrato'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              return_df=True,
                                                              use_cat_names=True,
                                                              verbose=0))),
                ('normalize',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True)))],
         verbose=False)
2023-05-13 23:03:29,830:INFO:Creating final display dataframe.
2023-05-13 23:03:30,339:INFO:Setup _display_container:                  Description                 Value
0                 Session id                   123
1        Original data shape           (50001, 35)
2     Transformed data shape           (50001, 50)
3            Ignore features                     8
4           Ordinal features                     4
5           Numeric features                    15
6              Date features                     1
7       Categorical features                    11
8   Rows with missing values                100.0%
9                 Preprocess                  True
10           Imputation type                simple
11        Numeric imputation                  mean
12    Categorical imputation                  mode
13  Maximum one-hot encoding                    -1
14           Encoding method                  None
15                 Normalize                  True
16          Normalize method                zscore
17                  CPU Jobs                    -1
18                   Use GPU                 False
19            Log Experiment                 False
20           Experiment Name  cluster-default-name
21                       USI                  78b6
2023-05-13 23:03:30,350:WARNING:
'kmodes' is a soft dependency and not included in the pycaret installation. Please run: `pip install kmodes` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-13 23:03:30,351:WARNING:
'kmodes' is a soft dependency and not included in the pycaret installation. Please run: `pip install kmodes` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-13 23:03:30,352:INFO:setup() successfully completed in 2.19s...............
2023-05-13 23:03:32,608:INFO:Initializing create_model()
2023-05-13 23:03:32,608:INFO:create_model(self=<pycaret.clustering.oop.ClusteringExperiment object at 0x000001C894183D60>, estimator=kmeans, num_clusters=4, fraction=0.05, ground_truth=None, round=4, fit_kwargs=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, raise_num_clusters=False, display=None, kwargs={})
2023-05-13 23:03:32,608:INFO:Checking exceptions
2023-05-13 23:03:32,714:INFO:Importing untrained model
2023-05-13 23:03:32,722:INFO:K-Means Clustering Imported successfully
2023-05-13 23:03:32,733:INFO:Fitting Model
2023-05-13 23:03:33,325:WARNING:c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\sklearn\cluster\_kmeans.py:870: FutureWarning:

The default value of `n_init` will change from 10 to 'auto' in 1.4. Set the value of `n_init` explicitly to suppress the warning


2023-05-13 23:04:03,373:INFO:KMeans(algorithm='lloyd', copy_x=True, init='k-means++', max_iter=300,
       n_clusters=4, n_init='warn', random_state=123, tol=0.0001, verbose=0)
2023-05-13 23:04:03,373:INFO:create_models() successfully completed......................................
2023-05-13 23:04:03,382:INFO:Uploading results into container
2023-05-13 23:04:03,386:INFO:Uploading model into container now
2023-05-13 23:04:03,396:INFO:_master_model_container: 1
2023-05-13 23:04:03,396:INFO:_display_container: 2
2023-05-13 23:04:03,397:INFO:KMeans(algorithm='lloyd', copy_x=True, init='k-means++', max_iter=300,
       n_clusters=4, n_init='warn', random_state=123, tol=0.0001, verbose=0)
2023-05-13 23:04:03,397:INFO:create_model() successfully completed......................................
2023-05-13 23:04:19,601:INFO:Initializing plot_model()
2023-05-13 23:04:19,601:INFO:plot_model(plot=elbow, fold=None, use_train_data=False, verbose=True, display=None, display_format=None, estimator=KMeans(algorithm='lloyd', copy_x=True, init='k-means++', max_iter=300,
       n_clusters=4, n_init='warn', random_state=123, tol=0.0001, verbose=0), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.clustering.oop.ClusteringExperiment object at 0x000001C894183D60>, system=True)
2023-05-13 23:04:19,602:INFO:Checking exceptions
2023-05-13 23:04:19,609:INFO:Preloading libraries
2023-05-13 23:04:19,610:INFO:Copying training dataset
2023-05-13 23:04:19,610:INFO:Plot type: elbow
2023-05-13 23:04:19,675:INFO:Fitting Model
2023-05-13 23:04:19,706:WARNING:c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\sklearn\cluster\_kmeans.py:870: FutureWarning:

The default value of `n_init` will change from 10 to 'auto' in 1.4. Set the value of `n_init` explicitly to suppress the warning


2023-05-13 23:04:20,015:WARNING:c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\sklearn\cluster\_kmeans.py:870: FutureWarning:

The default value of `n_init` will change from 10 to 'auto' in 1.4. Set the value of `n_init` explicitly to suppress the warning


2023-05-13 23:04:20,528:WARNING:c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\sklearn\cluster\_kmeans.py:870: FutureWarning:

The default value of `n_init` will change from 10 to 'auto' in 1.4. Set the value of `n_init` explicitly to suppress the warning


2023-05-13 23:04:21,299:WARNING:c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\sklearn\cluster\_kmeans.py:870: FutureWarning:

The default value of `n_init` will change from 10 to 'auto' in 1.4. Set the value of `n_init` explicitly to suppress the warning


2023-05-13 23:04:21,878:WARNING:c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\sklearn\cluster\_kmeans.py:870: FutureWarning:

The default value of `n_init` will change from 10 to 'auto' in 1.4. Set the value of `n_init` explicitly to suppress the warning


2023-05-13 23:04:22,811:WARNING:c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\sklearn\cluster\_kmeans.py:870: FutureWarning:

The default value of `n_init` will change from 10 to 'auto' in 1.4. Set the value of `n_init` explicitly to suppress the warning


2023-05-13 23:04:23,776:WARNING:c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\sklearn\cluster\_kmeans.py:870: FutureWarning:

The default value of `n_init` will change from 10 to 'auto' in 1.4. Set the value of `n_init` explicitly to suppress the warning


2023-05-13 23:04:24,759:WARNING:c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\sklearn\cluster\_kmeans.py:870: FutureWarning:

The default value of `n_init` will change from 10 to 'auto' in 1.4. Set the value of `n_init` explicitly to suppress the warning


2023-05-13 23:04:25,857:WARNING:c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\sklearn\cluster\_kmeans.py:870: FutureWarning:

The default value of `n_init` will change from 10 to 'auto' in 1.4. Set the value of `n_init` explicitly to suppress the warning


2023-05-13 23:04:27,459:INFO:Visual Rendered Successfully
2023-05-13 23:04:27,654:INFO:plot_model() successfully completed......................................
2023-05-13 23:04:27,740:INFO:Initializing plot_model()
2023-05-13 23:04:27,741:INFO:plot_model(plot=silhouette, fold=None, use_train_data=False, verbose=True, display=None, display_format=None, estimator=KMeans(algorithm='lloyd', copy_x=True, init='k-means++', max_iter=300,
       n_clusters=4, n_init='warn', random_state=123, tol=0.0001, verbose=0), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.clustering.oop.ClusteringExperiment object at 0x000001C894183D60>, system=True)
2023-05-13 23:04:27,741:INFO:Checking exceptions
2023-05-13 23:04:27,747:INFO:Preloading libraries
2023-05-13 23:04:27,747:INFO:Copying training dataset
2023-05-13 23:04:27,747:INFO:Plot type: silhouette
2023-05-13 23:04:27,806:INFO:Fitting Model
2023-05-13 23:04:27,806:WARNING:c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\sklearn\base.py:439: UserWarning:

X does not have valid feature names, but KMeans was fitted with feature names


2023-05-13 23:05:27,864:INFO:Visual Rendered Successfully
2023-05-13 23:05:28,159:INFO:plot_model() successfully completed......................................
2023-05-13 23:10:07,248:INFO:PyCaret ClusteringExperiment
2023-05-13 23:10:07,248:INFO:Logging name: cluster-default-name
2023-05-13 23:10:07,248:INFO:ML Usecase: MLUsecase.CLUSTERING
2023-05-13 23:10:07,249:INFO:version 3.0.0
2023-05-13 23:10:07,249:INFO:Initializing setup()
2023-05-13 23:10:07,249:INFO:self.USI: 8c4c
2023-05-13 23:10:07,249:INFO:self._variable_keys: {'gpu_param', 'exp_id', 'idx', '_ml_usecase', 'data', 'exp_name_log', 'log_plots_param', 'USI', 'seed', '_available_plots', 'n_jobs_param', 'html_param', 'pipeline', 'X', 'gpu_n_jobs_param', 'logging_param', 'memory'}
2023-05-13 23:10:07,249:INFO:Checking environment
2023-05-13 23:10:07,249:INFO:python_version: 3.8.16
2023-05-13 23:10:07,249:INFO:python_build: ('default', 'Mar  2 2023 03:18:16')
2023-05-13 23:10:07,249:INFO:machine: AMD64
2023-05-13 23:10:07,249:INFO:platform: Windows-10-10.0.19045-SP0
2023-05-13 23:10:07,252:INFO:Memory: svmem(total=34292408320, available=21071568896, percent=38.6, used=13220839424, free=21071568896)
2023-05-13 23:10:07,252:INFO:Physical Core: 4
2023-05-13 23:10:07,253:INFO:Logical Core: 8
2023-05-13 23:10:07,253:INFO:Checking libraries
2023-05-13 23:10:07,253:INFO:System:
2023-05-13 23:10:07,253:INFO:    python: 3.8.16 (default, Mar  2 2023, 03:18:16) [MSC v.1916 64 bit (AMD64)]
2023-05-13 23:10:07,253:INFO:executable: c:\Users\camil\anaconda3\envs\pycaretenv\python.exe
2023-05-13 23:10:07,253:INFO:   machine: Windows-10-10.0.19045-SP0
2023-05-13 23:10:07,253:INFO:PyCaret required dependencies:
2023-05-13 23:10:07,253:INFO:                 pip: 23.0.1
2023-05-13 23:10:07,253:INFO:          setuptools: 66.0.0
2023-05-13 23:10:07,253:INFO:             pycaret: 3.0.0
2023-05-13 23:10:07,253:INFO:             IPython: 8.12.2
2023-05-13 23:10:07,253:INFO:          ipywidgets: 8.0.6
2023-05-13 23:10:07,253:INFO:                tqdm: 4.65.0
2023-05-13 23:10:07,254:INFO:               numpy: 1.24.3
2023-05-13 23:10:07,254:INFO:              pandas: 1.5.3
2023-05-13 23:10:07,254:INFO:              jinja2: 3.1.2
2023-05-13 23:10:07,254:INFO:               scipy: 1.10.1
2023-05-13 23:10:07,254:INFO:              joblib: 1.2.0
2023-05-13 23:10:07,254:INFO:             sklearn: 1.2.2
2023-05-13 23:10:07,254:INFO:                pyod: 1.0.9
2023-05-13 23:10:07,254:INFO:            imblearn: 0.10.1
2023-05-13 23:10:07,254:INFO:   category_encoders: 2.6.0
2023-05-13 23:10:07,254:INFO:            lightgbm: 3.3.5
2023-05-13 23:10:07,254:INFO:               numba: 0.57.0
2023-05-13 23:10:07,254:INFO:            requests: 2.30.0
2023-05-13 23:10:07,254:INFO:          matplotlib: 3.7.1
2023-05-13 23:10:07,254:INFO:          scikitplot: 0.3.7
2023-05-13 23:10:07,254:INFO:         yellowbrick: 1.5
2023-05-13 23:10:07,254:INFO:              plotly: 5.14.1
2023-05-13 23:10:07,255:INFO:             kaleido: 0.2.1
2023-05-13 23:10:07,255:INFO:         statsmodels: 0.14.0
2023-05-13 23:10:07,255:INFO:              sktime: 0.18.0
2023-05-13 23:10:07,255:INFO:               tbats: 1.1.3
2023-05-13 23:10:07,255:INFO:            pmdarima: 2.0.3
2023-05-13 23:10:07,255:INFO:              psutil: 5.9.5
2023-05-13 23:10:07,255:INFO:PyCaret optional dependencies:
2023-05-13 23:10:07,255:INFO:                shap: Not installed
2023-05-13 23:10:07,255:INFO:           interpret: Not installed
2023-05-13 23:10:07,255:INFO:                umap: Not installed
2023-05-13 23:10:07,255:INFO:    pandas_profiling: Not installed
2023-05-13 23:10:07,255:INFO:  explainerdashboard: Not installed
2023-05-13 23:10:07,255:INFO:             autoviz: Not installed
2023-05-13 23:10:07,256:INFO:           fairlearn: Not installed
2023-05-13 23:10:07,256:INFO:             xgboost: Not installed
2023-05-13 23:10:07,256:INFO:            catboost: Not installed
2023-05-13 23:10:07,256:INFO:              kmodes: Not installed
2023-05-13 23:10:07,256:INFO:             mlxtend: Not installed
2023-05-13 23:10:07,256:INFO:       statsforecast: Not installed
2023-05-13 23:10:07,256:INFO:        tune_sklearn: Not installed
2023-05-13 23:10:07,256:INFO:                 ray: Not installed
2023-05-13 23:10:07,256:INFO:            hyperopt: Not installed
2023-05-13 23:10:07,256:INFO:              optuna: Not installed
2023-05-13 23:10:07,256:INFO:               skopt: Not installed
2023-05-13 23:10:07,256:INFO:              mlflow: Not installed
2023-05-13 23:10:07,256:INFO:              gradio: Not installed
2023-05-13 23:10:07,257:INFO:             fastapi: Not installed
2023-05-13 23:10:07,257:INFO:             uvicorn: Not installed
2023-05-13 23:10:07,257:INFO:              m2cgen: Not installed
2023-05-13 23:10:07,257:INFO:           evidently: Not installed
2023-05-13 23:10:07,257:INFO:               fugue: Not installed
2023-05-13 23:10:07,257:INFO:           streamlit: Not installed
2023-05-13 23:10:07,257:INFO:             prophet: Not installed
2023-05-13 23:10:07,257:INFO:None
2023-05-13 23:10:07,257:INFO:Set up data.
2023-05-13 23:10:07,417:INFO:Set up index.
2023-05-13 23:10:07,417:INFO:Assigning column types.
2023-05-13 23:10:07,429:INFO:Engine successfully changes for model 'kmeans' to 'sklearn'.
2023-05-13 23:10:07,430:INFO:Engine for model 'dbscan' has not been set explicitly, hence returning None.
2023-05-13 23:10:07,430:WARNING:
'kmodes' is a soft dependency and not included in the pycaret installation. Please run: `pip install kmodes` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-13 23:10:07,430:INFO:Engine for model 'dbscan' has not been set explicitly, hence returning None.
2023-05-13 23:10:07,430:WARNING:
'kmodes' is a soft dependency and not included in the pycaret installation. Please run: `pip install kmodes` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-13 23:10:07,430:INFO:Engine successfully changes for model 'dbscan' to 'sklearn'.
2023-05-13 23:10:07,430:WARNING:
'kmodes' is a soft dependency and not included in the pycaret installation. Please run: `pip install kmodes` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-13 23:10:07,431:WARNING:
'kmodes' is a soft dependency and not included in the pycaret installation. Please run: `pip install kmodes` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-13 23:10:07,432:INFO:Preparing preprocessing pipeline...
2023-05-13 23:10:07,432:INFO:Set up date feature engineering.
2023-05-13 23:10:07,432:INFO:Set up simple imputation.
2023-05-13 23:10:07,448:INFO:Set up encoding of ordinal features.
2023-05-13 23:10:07,463:INFO:Set up encoding of categorical features.
2023-05-13 23:10:07,463:INFO:Set up feature normalization.
2023-05-13 23:10:07,463:INFO:Set up PCA.
2023-05-13 23:10:08,034:INFO:Finished creating preprocessing pipeline.
2023-05-13 23:10:08,103:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\camil\AppData\Local\Temp\joblib),
         steps=[('date_feature_extractor',
                 TransformerWrapper(exclude=None, include=['Fecha.Expedicion'],
                                    transformer=ExtractDateTimeFeatures(features=['day',
                                                                                  'month',
                                                                                  'year']))),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Disponible.Avances',
                                             'Limite.Avances',
                                             'Total....
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True))),
                ('pca',
                 TransformerWrapper(exclude=[], include=None,
                                    transformer=PCA(copy=True,
                                                    iterated_power='auto',
                                                    n_components=5,
                                                    n_oversamples=10,
                                                    power_iteration_normalizer='auto',
                                                    random_state=None,
                                                    svd_solver='auto', tol=0.0,
                                                    whiten=False)))],
         verbose=False)
2023-05-13 23:10:08,103:INFO:Creating final display dataframe.
2023-05-13 23:10:08,654:INFO:Setup _display_container:                  Description                 Value
0                 Session id                   123
1        Original data shape           (50001, 35)
2     Transformed data shape            (50001, 5)
3            Ignore features                     8
4           Ordinal features                     4
5           Numeric features                    15
6              Date features                     1
7       Categorical features                    11
8   Rows with missing values                100.0%
9                 Preprocess                  True
10           Imputation type                simple
11        Numeric imputation                  mean
12    Categorical imputation                  mode
13  Maximum one-hot encoding                    -1
14           Encoding method                  None
15                 Normalize                  True
16          Normalize method                zscore
17                       PCA                  True
18                PCA method                linear
19            PCA components                     5
20                  CPU Jobs                    -1
21                   Use GPU                 False
22            Log Experiment                 False
23           Experiment Name  cluster-default-name
24                       USI                  8c4c
2023-05-13 23:10:08,663:WARNING:
'kmodes' is a soft dependency and not included in the pycaret installation. Please run: `pip install kmodes` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-13 23:10:08,663:WARNING:
'kmodes' is a soft dependency and not included in the pycaret installation. Please run: `pip install kmodes` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-13 23:10:08,664:INFO:setup() successfully completed in 2.44s...............
2023-05-13 23:10:12,846:INFO:Initializing create_model()
2023-05-13 23:10:12,846:INFO:create_model(self=<pycaret.clustering.oop.ClusteringExperiment object at 0x000001C897CA0D30>, estimator=kmeans, num_clusters=4, fraction=0.05, ground_truth=None, round=4, fit_kwargs=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, raise_num_clusters=False, display=None, kwargs={})
2023-05-13 23:10:12,847:INFO:Checking exceptions
2023-05-13 23:10:12,952:INFO:Importing untrained model
2023-05-13 23:10:12,960:INFO:K-Means Clustering Imported successfully
2023-05-13 23:10:12,970:INFO:Fitting Model
2023-05-13 23:10:44,168:INFO:KMeans(algorithm='lloyd', copy_x=True, init='k-means++', max_iter=300,
       n_clusters=4, n_init='warn', random_state=123, tol=0.0001, verbose=0)
2023-05-13 23:10:44,169:INFO:create_models() successfully completed......................................
2023-05-13 23:10:44,176:INFO:Uploading results into container
2023-05-13 23:10:44,180:INFO:Uploading model into container now
2023-05-13 23:10:44,192:INFO:_master_model_container: 1
2023-05-13 23:10:44,193:INFO:_display_container: 2
2023-05-13 23:10:44,193:INFO:KMeans(algorithm='lloyd', copy_x=True, init='k-means++', max_iter=300,
       n_clusters=4, n_init='warn', random_state=123, tol=0.0001, verbose=0)
2023-05-13 23:10:44,194:INFO:create_model() successfully completed......................................
2023-05-13 23:10:45,466:INFO:Initializing plot_model()
2023-05-13 23:10:45,467:INFO:plot_model(plot=elbow, fold=None, use_train_data=False, verbose=True, display=None, display_format=None, estimator=KMeans(algorithm='lloyd', copy_x=True, init='k-means++', max_iter=300,
       n_clusters=4, n_init='warn', random_state=123, tol=0.0001, verbose=0), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.clustering.oop.ClusteringExperiment object at 0x000001C897CA0D30>, system=True)
2023-05-13 23:10:45,467:INFO:Checking exceptions
2023-05-13 23:10:45,474:INFO:Preloading libraries
2023-05-13 23:10:45,474:INFO:Copying training dataset
2023-05-13 23:10:45,475:INFO:Plot type: elbow
2023-05-13 23:10:45,534:INFO:Fitting Model
2023-05-13 23:10:45,543:WARNING:c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\sklearn\cluster\_kmeans.py:870: FutureWarning:

The default value of `n_init` will change from 10 to 'auto' in 1.4. Set the value of `n_init` explicitly to suppress the warning


2023-05-13 23:10:45,652:WARNING:c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\sklearn\cluster\_kmeans.py:870: FutureWarning:

The default value of `n_init` will change from 10 to 'auto' in 1.4. Set the value of `n_init` explicitly to suppress the warning


2023-05-13 23:10:45,888:WARNING:c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\sklearn\cluster\_kmeans.py:870: FutureWarning:

The default value of `n_init` will change from 10 to 'auto' in 1.4. Set the value of `n_init` explicitly to suppress the warning


2023-05-13 23:10:46,206:WARNING:c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\sklearn\cluster\_kmeans.py:870: FutureWarning:

The default value of `n_init` will change from 10 to 'auto' in 1.4. Set the value of `n_init` explicitly to suppress the warning


2023-05-13 23:10:46,519:WARNING:c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\sklearn\cluster\_kmeans.py:870: FutureWarning:

The default value of `n_init` will change from 10 to 'auto' in 1.4. Set the value of `n_init` explicitly to suppress the warning


2023-05-13 23:10:46,962:WARNING:c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\sklearn\cluster\_kmeans.py:870: FutureWarning:

The default value of `n_init` will change from 10 to 'auto' in 1.4. Set the value of `n_init` explicitly to suppress the warning


2023-05-13 23:10:47,363:WARNING:c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\sklearn\cluster\_kmeans.py:870: FutureWarning:

The default value of `n_init` will change from 10 to 'auto' in 1.4. Set the value of `n_init` explicitly to suppress the warning


2023-05-13 23:10:47,897:WARNING:c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\sklearn\cluster\_kmeans.py:870: FutureWarning:

The default value of `n_init` will change from 10 to 'auto' in 1.4. Set the value of `n_init` explicitly to suppress the warning


2023-05-13 23:10:48,479:WARNING:c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\sklearn\cluster\_kmeans.py:870: FutureWarning:

The default value of `n_init` will change from 10 to 'auto' in 1.4. Set the value of `n_init` explicitly to suppress the warning


2023-05-13 23:10:49,481:INFO:Visual Rendered Successfully
2023-05-13 23:10:49,705:INFO:plot_model() successfully completed......................................
2023-05-13 23:10:49,800:INFO:Initializing plot_model()
2023-05-13 23:10:49,800:INFO:plot_model(plot=silhouette, fold=None, use_train_data=False, verbose=True, display=None, display_format=None, estimator=KMeans(algorithm='lloyd', copy_x=True, init='k-means++', max_iter=300,
       n_clusters=4, n_init='warn', random_state=123, tol=0.0001, verbose=0), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.clustering.oop.ClusteringExperiment object at 0x000001C897CA0D30>, system=True)
2023-05-13 23:10:49,800:INFO:Checking exceptions
2023-05-13 23:10:49,807:INFO:Preloading libraries
2023-05-13 23:10:49,807:INFO:Copying training dataset
2023-05-13 23:10:49,808:INFO:Plot type: silhouette
2023-05-13 23:10:49,862:INFO:Fitting Model
2023-05-13 23:10:49,864:WARNING:c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\sklearn\base.py:439: UserWarning:

X does not have valid feature names, but KMeans was fitted with feature names


2023-05-13 23:11:51,750:INFO:Visual Rendered Successfully
2023-05-13 23:11:51,977:INFO:plot_model() successfully completed......................................
2023-05-13 23:13:07,501:INFO:Initializing assign_model()
2023-05-13 23:13:07,502:INFO:assign_model(self=<pycaret.clustering.oop.ClusteringExperiment object at 0x000001C897CA0D30>, model=KMeans(algorithm='lloyd', copy_x=True, init='k-means++', max_iter=300,
       n_clusters=4, n_init='warn', random_state=123, tol=0.0001, verbose=0), transformation=False, score=True, verbose=True)
2023-05-13 23:13:07,502:INFO:Checking exceptions
2023-05-13 23:13:07,502:INFO:Determining Trained Model
2023-05-13 23:13:07,502:INFO:Trained Model : K-Means Clustering
2023-05-13 23:13:07,503:INFO:Copying data
2023-05-13 23:13:07,534:INFO:(50001, 28)
2023-05-13 23:13:07,534:INFO:assign_model() successfully completed......................................
2023-05-13 23:13:48,928:INFO:Initializing save_model()
2023-05-13 23:13:48,928:INFO:save_model(model=KMeans(algorithm='lloyd', copy_x=True, init='k-means++', max_iter=300,
       n_clusters=4, n_init='warn', random_state=123, tol=0.0001, verbose=0), model_name=kmeans_pipeline, prep_pipe_=Pipeline(memory=FastMemory(location=C:\Users\camil\AppData\Local\Temp\joblib),
         steps=[('date_feature_extractor',
                 TransformerWrapper(exclude=None, include=['Fecha.Expedicion'],
                                    transformer=ExtractDateTimeFeatures(features=['day',
                                                                                  'month',
                                                                                  'year']))),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Disponible.Avances',
                                             'Limite.Avances',
                                             'Total....
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True))),
                ('pca',
                 TransformerWrapper(exclude=[], include=None,
                                    transformer=PCA(copy=True,
                                                    iterated_power='auto',
                                                    n_components=5,
                                                    n_oversamples=10,
                                                    power_iteration_normalizer='auto',
                                                    random_state=None,
                                                    svd_solver='auto', tol=0.0,
                                                    whiten=False)))],
         verbose=False), verbose=True, use_case=MLUsecase.CLUSTERING, kwargs={})
2023-05-13 23:13:48,928:INFO:Adding model into prep_pipe
2023-05-13 23:13:48,956:INFO:kmeans_pipeline.pkl saved in current working directory
2023-05-13 23:13:49,014:INFO:Pipeline(memory=FastMemory(location=C:\Users\camil\AppData\Local\Temp\joblib),
         steps=[('date_feature_extractor',
                 TransformerWrapper(exclude=None, include=['Fecha.Expedicion'],
                                    transformer=ExtractDateTimeFeatures(features=['day',
                                                                                  'month',
                                                                                  'year']))),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Disponible.Avances',
                                             'Limite.Avances',
                                             'Total....
                 TransformerWrapper(exclude=[], include=None,
                                    transformer=PCA(copy=True,
                                                    iterated_power='auto',
                                                    n_components=5,
                                                    n_oversamples=10,
                                                    power_iteration_normalizer='auto',
                                                    random_state=None,
                                                    svd_solver='auto', tol=0.0,
                                                    whiten=False))),
                ('trained_model',
                 KMeans(algorithm='lloyd', copy_x=True, init='k-means++',
                        max_iter=300, n_clusters=4, n_init='warn',
                        random_state=123, tol=0.0001, verbose=0))],
         verbose=False)
2023-05-13 23:13:49,014:INFO:save_model() successfully completed......................................
2023-05-13 23:14:27,302:INFO:Initializing load_model()
2023-05-13 23:14:27,302:INFO:load_model(model_name=kmeans_pipeline, platform=None, authentication=None, verbose=True)
2023-05-13 23:14:48,395:INFO:Initializing predict_model()
2023-05-13 23:14:48,396:INFO:predict_model(self=<pycaret.clustering.oop.ClusteringExperiment object at 0x000001C897CA0D30>, estimator=Pipeline(memory=FastMemory(location=C:\Users\camil\AppData\Local\Temp\joblib),
         steps=[('date_feature_extractor',
                 TransformerWrapper(exclude=None, include=['Fecha.Expedicion'],
                                    transformer=ExtractDateTimeFeatures(features=['day',
                                                                                  'month',
                                                                                  'year']))),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Disponible.Avances',
                                             'Limite.Avances',
                                             'Total....
                 TransformerWrapper(exclude=[], include=None,
                                    transformer=PCA(copy=True,
                                                    iterated_power='auto',
                                                    n_components=5,
                                                    n_oversamples=10,
                                                    power_iteration_normalizer='auto',
                                                    random_state=None,
                                                    svd_solver='auto', tol=0.0,
                                                    whiten=False))),
                ('trained_model',
                 KMeans(algorithm='lloyd', copy_x=True, init='k-means++',
                        max_iter=300, n_clusters=4, n_init='warn',
                        random_state=123, tol=0.0001, verbose=0))],
         verbose=False), ml_usecase=None)
2023-05-13 23:14:48,396:INFO:Set up data.
2023-05-13 23:28:03,263:WARNING:C:\Users\camil\AppData\Local\Temp\ipykernel_2388\110710345.py:3: FutureWarning:

In a future version of pandas all arguments of DataFrame.pivot will be keyword-only.


2023-05-13 23:28:08,193:WARNING:C:\Users\camil\AppData\Local\Temp\ipykernel_2388\2244526383.py:3: FutureWarning:

In a future version of pandas all arguments of DataFrame.pivot will be keyword-only.


2023-05-13 23:28:16,065:WARNING:C:\Users\camil\AppData\Local\Temp\ipykernel_2388\3033774665.py:3: FutureWarning:

In a future version of pandas all arguments of DataFrame.pivot will be keyword-only.


2023-05-13 23:30:20,457:INFO:Initializing assign_model()
2023-05-13 23:30:20,457:INFO:assign_model(self=<pycaret.clustering.oop.ClusteringExperiment object at 0x000001C897CA0D30>, model=KMeans(algorithm='lloyd', copy_x=True, init='k-means++', max_iter=300,
       n_clusters=4, n_init='warn', random_state=123, tol=0.0001, verbose=0), transformation=False, score=True, verbose=True)
2023-05-13 23:30:20,457:INFO:Checking exceptions
2023-05-13 23:30:20,458:INFO:Determining Trained Model
2023-05-13 23:30:20,458:INFO:Trained Model : K-Means Clustering
2023-05-13 23:30:20,459:INFO:Copying data
2023-05-13 23:30:20,499:INFO:(50001, 28)
2023-05-13 23:30:20,500:INFO:assign_model() successfully completed......................................
2023-05-14 00:14:24,296:INFO:Initializing create_model()
2023-05-14 00:14:24,296:INFO:create_model(self=<pycaret.clustering.oop.ClusteringExperiment object at 0x000001C897CA0D30>, estimator=kmeans, num_clusters=3, fraction=0.05, ground_truth=None, round=4, fit_kwargs=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, raise_num_clusters=False, display=None, kwargs={})
2023-05-14 00:14:24,297:INFO:Checking exceptions
2023-05-14 00:14:24,392:INFO:Importing untrained model
2023-05-14 00:14:24,403:INFO:K-Means Clustering Imported successfully
2023-05-14 00:14:24,415:INFO:Fitting Model
2023-05-14 00:14:25,067:WARNING:c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\sklearn\cluster\_kmeans.py:870: FutureWarning:

The default value of `n_init` will change from 10 to 'auto' in 1.4. Set the value of `n_init` explicitly to suppress the warning


2023-05-14 00:14:37,785:INFO:Initializing create_model()
2023-05-14 00:14:37,786:INFO:create_model(self=<pycaret.clustering.oop.ClusteringExperiment object at 0x000001C897CA0D30>, estimator=kmeans, num_clusters=5, fraction=0.05, ground_truth=None, round=4, fit_kwargs=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, raise_num_clusters=False, display=None, kwargs={})
2023-05-14 00:14:37,786:INFO:Checking exceptions
2023-05-14 00:14:37,898:INFO:Importing untrained model
2023-05-14 00:14:37,906:INFO:K-Means Clustering Imported successfully
2023-05-14 00:14:37,915:INFO:Fitting Model
2023-05-14 00:14:38,608:WARNING:c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\sklearn\cluster\_kmeans.py:870: FutureWarning:

The default value of `n_init` will change from 10 to 'auto' in 1.4. Set the value of `n_init` explicitly to suppress the warning


2023-05-14 00:15:09,075:INFO:KMeans(algorithm='lloyd', copy_x=True, init='k-means++', max_iter=300,
       n_clusters=5, n_init='warn', random_state=123, tol=0.0001, verbose=0)
2023-05-14 00:15:09,076:INFO:create_models() successfully completed......................................
2023-05-14 00:15:09,083:INFO:Uploading results into container
2023-05-14 00:15:09,086:INFO:Uploading model into container now
2023-05-14 00:15:09,098:INFO:_master_model_container: 2
2023-05-14 00:15:09,098:INFO:_display_container: 3
2023-05-14 00:15:09,099:INFO:KMeans(algorithm='lloyd', copy_x=True, init='k-means++', max_iter=300,
       n_clusters=5, n_init='warn', random_state=123, tol=0.0001, verbose=0)
2023-05-14 00:15:09,099:INFO:create_model() successfully completed......................................
2023-05-14 00:15:10,640:INFO:Initializing plot_model()
2023-05-14 00:15:10,640:INFO:plot_model(plot=elbow, fold=None, use_train_data=False, verbose=True, display=None, display_format=None, estimator=KMeans(algorithm='lloyd', copy_x=True, init='k-means++', max_iter=300,
       n_clusters=5, n_init='warn', random_state=123, tol=0.0001, verbose=0), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.clustering.oop.ClusteringExperiment object at 0x000001C897CA0D30>, system=True)
2023-05-14 00:15:10,640:INFO:Checking exceptions
2023-05-14 00:15:10,647:INFO:Preloading libraries
2023-05-14 00:15:10,647:INFO:Copying training dataset
2023-05-14 00:15:10,648:INFO:Plot type: elbow
2023-05-14 00:15:10,707:INFO:Fitting Model
2023-05-14 00:15:10,714:WARNING:c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\sklearn\cluster\_kmeans.py:870: FutureWarning:

The default value of `n_init` will change from 10 to 'auto' in 1.4. Set the value of `n_init` explicitly to suppress the warning


2023-05-14 00:15:10,824:WARNING:c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\sklearn\cluster\_kmeans.py:870: FutureWarning:

The default value of `n_init` will change from 10 to 'auto' in 1.4. Set the value of `n_init` explicitly to suppress the warning


2023-05-14 00:15:11,062:WARNING:c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\sklearn\cluster\_kmeans.py:870: FutureWarning:

The default value of `n_init` will change from 10 to 'auto' in 1.4. Set the value of `n_init` explicitly to suppress the warning


2023-05-14 00:15:11,389:WARNING:c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\sklearn\cluster\_kmeans.py:870: FutureWarning:

The default value of `n_init` will change from 10 to 'auto' in 1.4. Set the value of `n_init` explicitly to suppress the warning


2023-05-14 00:15:11,714:WARNING:c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\sklearn\cluster\_kmeans.py:870: FutureWarning:

The default value of `n_init` will change from 10 to 'auto' in 1.4. Set the value of `n_init` explicitly to suppress the warning


2023-05-14 00:15:12,189:WARNING:c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\sklearn\cluster\_kmeans.py:870: FutureWarning:

The default value of `n_init` will change from 10 to 'auto' in 1.4. Set the value of `n_init` explicitly to suppress the warning


2023-05-14 00:15:12,599:WARNING:c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\sklearn\cluster\_kmeans.py:870: FutureWarning:

The default value of `n_init` will change from 10 to 'auto' in 1.4. Set the value of `n_init` explicitly to suppress the warning


2023-05-14 00:15:13,123:WARNING:c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\sklearn\cluster\_kmeans.py:870: FutureWarning:

The default value of `n_init` will change from 10 to 'auto' in 1.4. Set the value of `n_init` explicitly to suppress the warning


2023-05-14 00:15:13,710:WARNING:c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\sklearn\cluster\_kmeans.py:870: FutureWarning:

The default value of `n_init` will change from 10 to 'auto' in 1.4. Set the value of `n_init` explicitly to suppress the warning


2023-05-14 00:15:14,840:INFO:Visual Rendered Successfully
2023-05-14 00:15:15,059:INFO:plot_model() successfully completed......................................
2023-05-14 00:15:15,129:INFO:Initializing plot_model()
2023-05-14 00:15:15,129:INFO:plot_model(plot=silhouette, fold=None, use_train_data=False, verbose=True, display=None, display_format=None, estimator=KMeans(algorithm='lloyd', copy_x=True, init='k-means++', max_iter=300,
       n_clusters=5, n_init='warn', random_state=123, tol=0.0001, verbose=0), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.clustering.oop.ClusteringExperiment object at 0x000001C897CA0D30>, system=True)
2023-05-14 00:15:15,129:INFO:Checking exceptions
2023-05-14 00:15:15,136:INFO:Preloading libraries
2023-05-14 00:15:15,136:INFO:Copying training dataset
2023-05-14 00:15:15,136:INFO:Plot type: silhouette
2023-05-14 00:15:15,187:INFO:Fitting Model
2023-05-14 00:15:15,187:WARNING:c:\Users\camil\anaconda3\envs\pycaretenv\lib\site-packages\sklearn\base.py:439: UserWarning:

X does not have valid feature names, but KMeans was fitted with feature names


2023-05-14 00:16:16,819:INFO:Visual Rendered Successfully
2023-05-14 00:16:17,080:INFO:plot_model() successfully completed......................................
2023-05-14 00:16:17,692:INFO:Initializing assign_model()
2023-05-14 00:16:17,692:INFO:assign_model(self=<pycaret.clustering.oop.ClusteringExperiment object at 0x000001C897CA0D30>, model=KMeans(algorithm='lloyd', copy_x=True, init='k-means++', max_iter=300,
       n_clusters=5, n_init='warn', random_state=123, tol=0.0001, verbose=0), transformation=False, score=True, verbose=True)
2023-05-14 00:16:17,692:INFO:Checking exceptions
2023-05-14 00:16:17,693:INFO:Determining Trained Model
2023-05-14 00:16:17,693:INFO:Trained Model : K-Means Clustering
2023-05-14 00:16:17,693:INFO:Copying data
2023-05-14 00:16:17,735:INFO:(50001, 28)
2023-05-14 00:16:17,735:INFO:assign_model() successfully completed......................................
2023-05-14 00:16:31,610:INFO:Initializing save_model()
2023-05-14 00:16:31,611:INFO:save_model(model=KMeans(algorithm='lloyd', copy_x=True, init='k-means++', max_iter=300,
       n_clusters=5, n_init='warn', random_state=123, tol=0.0001, verbose=0), model_name=kmeans_pipeline, prep_pipe_=Pipeline(memory=FastMemory(location=C:\Users\camil\AppData\Local\Temp\joblib),
         steps=[('date_feature_extractor',
                 TransformerWrapper(exclude=None, include=['Fecha.Expedicion'],
                                    transformer=ExtractDateTimeFeatures(features=['day',
                                                                                  'month',
                                                                                  'year']))),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Disponible.Avances',
                                             'Limite.Avances',
                                             'Total....
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True))),
                ('pca',
                 TransformerWrapper(exclude=[], include=None,
                                    transformer=PCA(copy=True,
                                                    iterated_power='auto',
                                                    n_components=5,
                                                    n_oversamples=10,
                                                    power_iteration_normalizer='auto',
                                                    random_state=None,
                                                    svd_solver='auto', tol=0.0,
                                                    whiten=False)))],
         verbose=False), verbose=True, use_case=MLUsecase.CLUSTERING, kwargs={})
2023-05-14 00:16:31,611:INFO:Adding model into prep_pipe
2023-05-14 00:16:31,645:INFO:kmeans_pipeline.pkl saved in current working directory
2023-05-14 00:16:31,704:INFO:Pipeline(memory=FastMemory(location=C:\Users\camil\AppData\Local\Temp\joblib),
         steps=[('date_feature_extractor',
                 TransformerWrapper(exclude=None, include=['Fecha.Expedicion'],
                                    transformer=ExtractDateTimeFeatures(features=['day',
                                                                                  'month',
                                                                                  'year']))),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Disponible.Avances',
                                             'Limite.Avances',
                                             'Total....
                 TransformerWrapper(exclude=[], include=None,
                                    transformer=PCA(copy=True,
                                                    iterated_power='auto',
                                                    n_components=5,
                                                    n_oversamples=10,
                                                    power_iteration_normalizer='auto',
                                                    random_state=None,
                                                    svd_solver='auto', tol=0.0,
                                                    whiten=False))),
                ('trained_model',
                 KMeans(algorithm='lloyd', copy_x=True, init='k-means++',
                        max_iter=300, n_clusters=5, n_init='warn',
                        random_state=123, tol=0.0001, verbose=0))],
         verbose=False)
2023-05-14 00:16:31,705:INFO:save_model() successfully completed......................................
2023-05-14 00:16:32,124:INFO:Initializing load_model()
2023-05-14 00:16:32,125:INFO:load_model(model_name=kmeans_pipeline, platform=None, authentication=None, verbose=True)
2023-05-14 00:16:33,171:INFO:Initializing predict_model()
2023-05-14 00:16:33,172:INFO:predict_model(self=<pycaret.clustering.oop.ClusteringExperiment object at 0x000001C897CA0D30>, estimator=Pipeline(memory=FastMemory(location=C:\Users\camil\AppData\Local\Temp\joblib),
         steps=[('date_feature_extractor',
                 TransformerWrapper(exclude=None, include=['Fecha.Expedicion'],
                                    transformer=ExtractDateTimeFeatures(features=['day',
                                                                                  'month',
                                                                                  'year']))),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Disponible.Avances',
                                             'Limite.Avances',
                                             'Total....
                 TransformerWrapper(exclude=[], include=None,
                                    transformer=PCA(copy=True,
                                                    iterated_power='auto',
                                                    n_components=5,
                                                    n_oversamples=10,
                                                    power_iteration_normalizer='auto',
                                                    random_state=None,
                                                    svd_solver='auto', tol=0.0,
                                                    whiten=False))),
                ('trained_model',
                 KMeans(algorithm='lloyd', copy_x=True, init='k-means++',
                        max_iter=300, n_clusters=5, n_init='warn',
                        random_state=123, tol=0.0001, verbose=0))],
         verbose=False), ml_usecase=None)
2023-05-14 00:16:33,172:INFO:Set up data.
